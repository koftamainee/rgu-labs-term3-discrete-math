<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="821.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="821.00"> </text><svg id="frames" x="10" width="1180" total_samples="26821758776"><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (18,610,110 samples, 0.07%)</title><rect x="0.0000%" y="757" width="0.0694%" height="15" fill="rgb(227,0,7)" fg:x="1978" fg:w="18610110"/><text x="0.2500%" y="767.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (18,610,110 samples, 0.07%)</title><rect x="0.0000%" y="741" width="0.0694%" height="15" fill="rgb(217,0,24)" fg:x="1978" fg:w="18610110"/><text x="0.2500%" y="751.50"></text></g><g><title>std::sys::fs::unix::File::read_buf (18,610,110 samples, 0.07%)</title><rect x="0.0000%" y="725" width="0.0694%" height="15" fill="rgb(221,193,54)" fg:x="1978" fg:w="18610110"/><text x="0.2500%" y="735.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_buf (18,610,110 samples, 0.07%)</title><rect x="0.0000%" y="709" width="0.0694%" height="15" fill="rgb(248,212,6)" fg:x="1978" fg:w="18610110"/><text x="0.2500%" y="719.50"></text></g><g><title>read (18,610,110 samples, 0.07%)</title><rect x="0.0000%" y="693" width="0.0694%" height="15" fill="rgb(208,68,35)" fg:x="1978" fg:w="18610110"/><text x="0.2500%" y="703.50"></text></g><g><title>[libc.so.6] (37,387,886 samples, 0.14%)</title><rect x="0.0717%" y="757" width="0.1394%" height="15" fill="rgb(232,128,0)" fg:x="19224096" fg:w="37387886"/><text x="0.3217%" y="767.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (4,619,525 samples, 0.02%)</title><rect x="0.2111%" y="709" width="0.0172%" height="15" fill="rgb(207,160,47)" fg:x="56611982" fg:w="4619525"/><text x="0.4611%" y="719.50"></text></g><g><title>core::str::validations::next_code_point (4,619,525 samples, 0.02%)</title><rect x="0.2111%" y="693" width="0.0172%" height="15" fill="rgb(228,23,34)" fg:x="56611982" fg:w="4619525"/><text x="0.4611%" y="703.50"></text></g><g><title>core::str::validations::utf8_first_byte (4,619,525 samples, 0.02%)</title><rect x="0.2111%" y="677" width="0.0172%" height="15" fill="rgb(218,30,26)" fg:x="56611982" fg:w="4619525"/><text x="0.4611%" y="687.50"></text></g><g><title>&lt;core::str::iter::SplitAsciiWhitespace as core::iter::traits::iterator::Iterator&gt;::next (18,610,110 samples, 0.07%)</title><rect x="0.2283%" y="709" width="0.0694%" height="15" fill="rgb(220,122,19)" fg:x="61231507" fg:w="18610110"/><text x="0.4783%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,610,110 samples, 0.07%)</title><rect x="0.2283%" y="693" width="0.0694%" height="15" fill="rgb(250,228,42)" fg:x="61231507" fg:w="18610110"/><text x="0.4783%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,610,110 samples, 0.07%)</title><rect x="0.2283%" y="677" width="0.0694%" height="15" fill="rgb(240,193,28)" fg:x="61231507" fg:w="18610110"/><text x="0.4783%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (18,610,110 samples, 0.07%)</title><rect x="0.2283%" y="661" width="0.0694%" height="15" fill="rgb(216,20,37)" fg:x="61231507" fg:w="18610110"/><text x="0.4783%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18,610,110 samples, 0.07%)</title><rect x="0.2283%" y="645" width="0.0694%" height="15" fill="rgb(206,188,39)" fg:x="61231507" fg:w="18610110"/><text x="0.4783%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Split&lt;T,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,610,110 samples, 0.07%)</title><rect x="0.2283%" y="629" width="0.0694%" height="15" fill="rgb(217,207,13)" fg:x="61231507" fg:w="18610110"/><text x="0.4783%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (18,610,110 samples, 0.07%)</title><rect x="0.2283%" y="613" width="0.0694%" height="15" fill="rgb(231,73,38)" fg:x="61231507" fg:w="18610110"/><text x="0.4783%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,654,052 samples, 0.02%)</title><rect x="0.2803%" y="597" width="0.0174%" height="15" fill="rgb(225,20,46)" fg:x="75187565" fg:w="4654052"/><text x="0.5303%" y="607.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,654,052 samples, 0.02%)</title><rect x="0.2803%" y="581" width="0.0174%" height="15" fill="rgb(210,31,41)" fg:x="75187565" fg:w="4654052"/><text x="0.5303%" y="591.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (4,648,847 samples, 0.02%)</title><rect x="0.2977%" y="709" width="0.0173%" height="15" fill="rgb(221,200,47)" fg:x="79841617" fg:w="4648847"/><text x="0.5477%" y="719.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (27,954,268 samples, 0.10%)</title><rect x="0.4554%" y="645" width="0.1042%" height="15" fill="rgb(226,26,5)" fg:x="122151250" fg:w="27954268"/><text x="0.7054%" y="655.50"></text></g><g><title>[unknown] (98,152,536 samples, 0.37%)</title><rect x="0.2111%" y="741" width="0.3659%" height="15" fill="rgb(249,33,26)" fg:x="56611982" fg:w="98152536"/><text x="0.4611%" y="751.50"></text></g><g><title>rgu_labs_term3_discrete_math::task2::run_task_2 (98,152,536 samples, 0.37%)</title><rect x="0.2111%" y="725" width="0.3659%" height="15" fill="rgb(235,183,28)" fg:x="56611982" fg:w="98152536"/><text x="0.4611%" y="735.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::contains (70,274,054 samples, 0.26%)</title><rect x="0.3150%" y="709" width="0.2620%" height="15" fill="rgb(221,5,38)" fg:x="84490464" fg:w="70274054"/><text x="0.5650%" y="719.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::index_of (70,274,054 samples, 0.26%)</title><rect x="0.3150%" y="693" width="0.2620%" height="15" fill="rgb(247,18,42)" fg:x="84490464" fg:w="70274054"/><text x="0.5650%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (70,274,054 samples, 0.26%)</title><rect x="0.3150%" y="677" width="0.2620%" height="15" fill="rgb(241,131,45)" fg:x="84490464" fg:w="70274054"/><text x="0.5650%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (70,274,054 samples, 0.26%)</title><rect x="0.3150%" y="661" width="0.2620%" height="15" fill="rgb(249,31,29)" fg:x="84490464" fg:w="70274054"/><text x="0.5650%" y="671.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::select_unpredictable (4,659,000 samples, 0.02%)</title><rect x="0.5596%" y="645" width="0.0174%" height="15" fill="rgb(225,111,53)" fg:x="150105518" fg:w="4659000"/><text x="0.8096%" y="655.50"></text></g><g><title>core::str::converts::from_utf8 (9,314,328 samples, 0.03%)</title><rect x="0.5770%" y="741" width="0.0347%" height="15" fill="rgb(238,160,17)" fg:x="154764518" fg:w="9314328"/><text x="0.8270%" y="751.50"></text></g><g><title>&lt;core::str::iter::SplitAsciiWhitespace as core::iter::traits::iterator::Iterator&gt;::next (4,678,414 samples, 0.02%)</title><rect x="0.6117%" y="725" width="0.0174%" height="15" fill="rgb(214,148,48)" fg:x="164078846" fg:w="4678414"/><text x="0.8617%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,678,414 samples, 0.02%)</title><rect x="0.6117%" y="709" width="0.0174%" height="15" fill="rgb(232,36,49)" fg:x="164078846" fg:w="4678414"/><text x="0.8617%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,678,414 samples, 0.02%)</title><rect x="0.6117%" y="693" width="0.0174%" height="15" fill="rgb(209,103,24)" fg:x="164078846" fg:w="4678414"/><text x="0.8617%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (4,678,414 samples, 0.02%)</title><rect x="0.6117%" y="677" width="0.0174%" height="15" fill="rgb(229,88,8)" fg:x="164078846" fg:w="4678414"/><text x="0.8617%" y="687.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (4,678,414 samples, 0.02%)</title><rect x="0.6117%" y="661" width="0.0174%" height="15" fill="rgb(213,181,19)" fg:x="164078846" fg:w="4678414"/><text x="0.8617%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (4,678,414 samples, 0.02%)</title><rect x="0.6117%" y="645" width="0.0174%" height="15" fill="rgb(254,191,54)" fg:x="164078846" fg:w="4678414"/><text x="0.8617%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,635,285 samples, 0.02%)</title><rect x="0.6292%" y="725" width="0.0173%" height="15" fill="rgb(241,83,37)" fg:x="168757260" fg:w="4635285"/><text x="0.8792%" y="735.50"></text></g><g><title>core::ptr::write (4,635,285 samples, 0.02%)</title><rect x="0.6292%" y="709" width="0.0173%" height="15" fill="rgb(233,36,39)" fg:x="168757260" fg:w="4635285"/><text x="0.8792%" y="719.50"></text></g><g><title>entry_SYSCALL_64 (4,635,285 samples, 0.02%)</title><rect x="0.6292%" y="693" width="0.0173%" height="15" fill="rgb(226,3,54)" fg:x="168757260" fg:w="4635285"/><text x="0.8792%" y="703.50"></text></g><g><title>[rgu-labs-term3-discrete-math] (121,427,873 samples, 0.45%)</title><rect x="0.2111%" y="757" width="0.4527%" height="15" fill="rgb(245,192,40)" fg:x="56611982" fg:w="121427873"/><text x="0.4611%" y="767.50"></text></g><g><title>rgu_labs_term3_discrete_math::task2::run_task_2 (13,961,009 samples, 0.05%)</title><rect x="0.6117%" y="741" width="0.0521%" height="15" fill="rgb(238,167,29)" fg:x="164078846" fg:w="13961009"/><text x="0.8617%" y="751.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::contains (4,647,310 samples, 0.02%)</title><rect x="0.6465%" y="725" width="0.0173%" height="15" fill="rgb(232,182,51)" fg:x="173392545" fg:w="4647310"/><text x="0.8965%" y="735.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::index_of (4,647,310 samples, 0.02%)</title><rect x="0.6465%" y="709" width="0.0173%" height="15" fill="rgb(231,60,39)" fg:x="173392545" fg:w="4647310"/><text x="0.8965%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (4,647,310 samples, 0.02%)</title><rect x="0.6465%" y="693" width="0.0173%" height="15" fill="rgb(208,69,12)" fg:x="173392545" fg:w="4647310"/><text x="0.8965%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4,647,310 samples, 0.02%)</title><rect x="0.6465%" y="677" width="0.0173%" height="15" fill="rgb(235,93,37)" fg:x="173392545" fg:w="4647310"/><text x="0.8965%" y="687.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::select_unpredictable (4,647,310 samples, 0.02%)</title><rect x="0.6465%" y="661" width="0.0173%" height="15" fill="rgb(213,116,39)" fg:x="173392545" fg:w="4647310"/><text x="0.8965%" y="671.50"></text></g><g><title>entry_SYSCALL_64 (4,647,310 samples, 0.02%)</title><rect x="0.6465%" y="645" width="0.0173%" height="15" fill="rgb(222,207,29)" fg:x="173392545" fg:w="4647310"/><text x="0.8965%" y="655.50"></text></g><g><title>[libc.so.6] (186,632,294 samples, 0.70%)</title><rect x="0.6638%" y="741" width="0.6958%" height="15" fill="rgb(206,96,30)" fg:x="178039855" fg:w="186632294"/><text x="0.9138%" y="751.50"></text></g><g><title>&lt;F as core::str::pattern::Pattern&gt;::into_searcher (4,650,052 samples, 0.02%)</title><rect x="1.4637%" y="709" width="0.0173%" height="15" fill="rgb(218,138,4)" fg:x="392581026" fg:w="4650052"/><text x="1.7137%" y="719.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqPattern&lt;C&gt; as core::str::pattern::Pattern&gt;::into_searcher (4,650,052 samples, 0.02%)</title><rect x="1.4637%" y="693" width="0.0173%" height="15" fill="rgb(250,191,14)" fg:x="392581026" fg:w="4650052"/><text x="1.7137%" y="703.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (4,650,052 samples, 0.02%)</title><rect x="1.4637%" y="677" width="0.0173%" height="15" fill="rgb(239,60,40)" fg:x="392581026" fg:w="4650052"/><text x="1.7137%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (4,650,052 samples, 0.02%)</title><rect x="1.4637%" y="661" width="0.0173%" height="15" fill="rgb(206,27,48)" fg:x="392581026" fg:w="4650052"/><text x="1.7137%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (4,650,052 samples, 0.02%)</title><rect x="1.4637%" y="645" width="0.0173%" height="15" fill="rgb(225,35,8)" fg:x="392581026" fg:w="4650052"/><text x="1.7137%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (4,650,052 samples, 0.02%)</title><rect x="1.4637%" y="629" width="0.0173%" height="15" fill="rgb(250,213,24)" fg:x="392581026" fg:w="4650052"/><text x="1.7137%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4,650,052 samples, 0.02%)</title><rect x="1.4637%" y="613" width="0.0173%" height="15" fill="rgb(247,123,22)" fg:x="392581026" fg:w="4650052"/><text x="1.7137%" y="623.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (135,325,772 samples, 0.50%)</title><rect x="1.6886%" y="661" width="0.5045%" height="15" fill="rgb(231,138,38)" fg:x="452904207" fg:w="135325772"/><text x="1.9386%" y="671.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim::{{closure}} (135,325,772 samples, 0.50%)</title><rect x="1.6886%" y="645" width="0.5045%" height="15" fill="rgb(231,145,46)" fg:x="452904207" fg:w="135325772"/><text x="1.9386%" y="655.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (135,325,772 samples, 0.50%)</title><rect x="1.6886%" y="629" width="0.5045%" height="15" fill="rgb(251,118,11)" fg:x="452904207" fg:w="135325772"/><text x="1.9386%" y="639.50"></text></g><g><title>core::unicode::unicode_data::white_space::lookup (60,154,156 samples, 0.22%)</title><rect x="1.9688%" y="613" width="0.2243%" height="15" fill="rgb(217,147,25)" fg:x="528075823" fg:w="60154156"/><text x="2.2188%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (41,933,695 samples, 0.16%)</title><rect x="2.8909%" y="613" width="0.1563%" height="15" fill="rgb(247,81,37)" fg:x="775385625" fg:w="41933695"/><text x="3.1409%" y="623.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (41,933,695 samples, 0.16%)</title><rect x="2.8909%" y="597" width="0.1563%" height="15" fill="rgb(209,12,38)" fg:x="775385625" fg:w="41933695"/><text x="3.1409%" y="607.50"></text></g><g><title>core::str::validations::utf8_acc_cont_byte (133,988,311 samples, 0.50%)</title><rect x="3.0472%" y="613" width="0.4996%" height="15" fill="rgb(227,1,9)" fg:x="817319320" fg:w="133988311"/><text x="3.2972%" y="623.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (591,148,375 samples, 2.20%)</title><rect x="1.4810%" y="709" width="2.2040%" height="15" fill="rgb(248,47,43)" fg:x="397231078" fg:w="591148375"/><text x="1.7310%" y="719.50">&lt;..</text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (591,148,375 samples, 2.20%)</title><rect x="1.4810%" y="693" width="2.2040%" height="15" fill="rgb(221,10,30)" fg:x="397231078" fg:w="591148375"/><text x="1.7310%" y="703.50">c..</text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (591,148,375 samples, 2.20%)</title><rect x="1.4810%" y="677" width="2.2040%" height="15" fill="rgb(210,229,1)" fg:x="397231078" fg:w="591148375"/><text x="1.7310%" y="687.50">&lt;..</text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (400,149,474 samples, 1.49%)</title><rect x="2.1931%" y="661" width="1.4919%" height="15" fill="rgb(222,148,37)" fg:x="588229979" fg:w="400149474"/><text x="2.4431%" y="671.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (400,149,474 samples, 1.49%)</title><rect x="2.1931%" y="645" width="1.4919%" height="15" fill="rgb(234,67,33)" fg:x="588229979" fg:w="400149474"/><text x="2.4431%" y="655.50"></text></g><g><title>core::str::validations::next_code_point_reverse (400,149,474 samples, 1.49%)</title><rect x="2.1931%" y="629" width="1.4919%" height="15" fill="rgb(247,98,35)" fg:x="588229979" fg:w="400149474"/><text x="2.4431%" y="639.50"></text></g><g><title>core::str::validations::utf8_is_cont_byte (37,071,822 samples, 0.14%)</title><rect x="3.5468%" y="613" width="0.1382%" height="15" fill="rgb(247,138,52)" fg:x="951307631" fg:w="37071822"/><text x="3.7968%" y="623.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (183,007,996 samples, 0.68%)</title><rect x="3.7544%" y="661" width="0.6823%" height="15" fill="rgb(213,79,30)" fg:x="1006992197" fg:w="183007996"/><text x="4.0044%" y="671.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim::{{closure}} (183,007,996 samples, 0.68%)</title><rect x="3.7544%" y="645" width="0.6823%" height="15" fill="rgb(246,177,23)" fg:x="1006992197" fg:w="183007996"/><text x="4.0044%" y="655.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (183,007,996 samples, 0.68%)</title><rect x="3.7544%" y="629" width="0.6823%" height="15" fill="rgb(230,62,27)" fg:x="1006992197" fg:w="183007996"/><text x="4.0044%" y="639.50"></text></g><g><title>core::unicode::unicode_data::white_space::lookup (112,589,594 samples, 0.42%)</title><rect x="4.0169%" y="613" width="0.4198%" height="15" fill="rgb(216,154,8)" fg:x="1077410599" fg:w="112589594"/><text x="4.2669%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,325,632 samples, 0.03%)</title><rect x="4.9763%" y="613" width="0.0348%" height="15" fill="rgb(244,35,45)" fg:x="1334727234" fg:w="9325632"/><text x="5.2263%" y="623.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9,325,632 samples, 0.03%)</title><rect x="4.9763%" y="597" width="0.0348%" height="15" fill="rgb(251,115,12)" fg:x="1334727234" fg:w="9325632"/><text x="5.2263%" y="607.50"></text></g><g><title>core::str::validations::utf8_acc_cont_byte (27,957,311 samples, 0.10%)</title><rect x="5.0111%" y="613" width="0.1042%" height="15" fill="rgb(240,54,50)" fg:x="1344052866" fg:w="27957311"/><text x="5.2611%" y="623.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_reject (416,248,931 samples, 1.55%)</title><rect x="3.6850%" y="709" width="1.5519%" height="15" fill="rgb(233,84,52)" fg:x="988379453" fg:w="416248931"/><text x="3.9350%" y="719.50"></text></g><g><title>core::str::pattern::Searcher::next_reject (416,248,931 samples, 1.55%)</title><rect x="3.6850%" y="693" width="1.5519%" height="15" fill="rgb(207,117,47)" fg:x="988379453" fg:w="416248931"/><text x="3.9350%" y="703.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (416,248,931 samples, 1.55%)</title><rect x="3.6850%" y="677" width="1.5519%" height="15" fill="rgb(249,43,39)" fg:x="988379453" fg:w="416248931"/><text x="3.9350%" y="687.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (214,628,191 samples, 0.80%)</title><rect x="4.4367%" y="661" width="0.8002%" height="15" fill="rgb(209,38,44)" fg:x="1190000193" fg:w="214628191"/><text x="4.6867%" y="671.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (191,078,358 samples, 0.71%)</title><rect x="4.5245%" y="645" width="0.7124%" height="15" fill="rgb(236,212,23)" fg:x="1213550026" fg:w="191078358"/><text x="4.7745%" y="655.50"></text></g><g><title>core::str::validations::next_code_point (191,078,358 samples, 0.71%)</title><rect x="4.5245%" y="629" width="0.7124%" height="15" fill="rgb(242,79,21)" fg:x="1213550026" fg:w="191078358"/><text x="4.7745%" y="639.50"></text></g><g><title>core::str::validations::utf8_first_byte (32,618,207 samples, 0.12%)</title><rect x="5.1153%" y="613" width="0.1216%" height="15" fill="rgb(211,96,35)" fg:x="1372010177" fg:w="32618207"/><text x="5.3653%" y="623.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (1,077,380,451 samples, 4.02%)</title><rect x="1.3596%" y="725" width="4.0168%" height="15" fill="rgb(253,215,40)" fg:x="364672149" fg:w="1077380451"/><text x="1.6096%" y="735.50">core..</text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (37,424,216 samples, 0.14%)</title><rect x="5.2369%" y="709" width="0.1395%" height="15" fill="rgb(211,81,21)" fg:x="1404628384" fg:w="37424216"/><text x="5.4869%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (37,424,216 samples, 0.14%)</title><rect x="5.2369%" y="693" width="0.1395%" height="15" fill="rgb(208,190,38)" fg:x="1404628384" fg:w="37424216"/><text x="5.4869%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (23,451,881 samples, 0.09%)</title><rect x="5.2890%" y="677" width="0.0874%" height="15" fill="rgb(235,213,38)" fg:x="1418600719" fg:w="23451881"/><text x="5.5390%" y="687.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (4,655,679 samples, 0.02%)</title><rect x="5.4111%" y="709" width="0.0174%" height="15" fill="rgb(237,122,38)" fg:x="1451345037" fg:w="4655679"/><text x="5.6611%" y="719.50"></text></g><g><title>core::str::validations::next_code_point (4,655,679 samples, 0.02%)</title><rect x="5.4111%" y="693" width="0.0174%" height="15" fill="rgb(244,218,35)" fg:x="1451345037" fg:w="4655679"/><text x="5.6611%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14,057,928 samples, 0.05%)</title><rect x="5.4284%" y="709" width="0.0524%" height="15" fill="rgb(240,68,47)" fg:x="1456000716" fg:w="14057928"/><text x="5.6784%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (4,648,777 samples, 0.02%)</title><rect x="5.4808%" y="709" width="0.0173%" height="15" fill="rgb(210,16,53)" fg:x="1470058644" fg:w="4648777"/><text x="5.7308%" y="719.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::contains (4,666,876 samples, 0.02%)</title><rect x="5.4982%" y="709" width="0.0174%" height="15" fill="rgb(235,124,12)" fg:x="1474707421" fg:w="4666876"/><text x="5.7482%" y="719.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::index_of (4,666,876 samples, 0.02%)</title><rect x="5.4982%" y="693" width="0.0174%" height="15" fill="rgb(224,169,11)" fg:x="1474707421" fg:w="4666876"/><text x="5.7482%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (4,666,876 samples, 0.02%)</title><rect x="5.4982%" y="677" width="0.0174%" height="15" fill="rgb(250,166,2)" fg:x="1474707421" fg:w="4666876"/><text x="5.7482%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (4,666,876 samples, 0.02%)</title><rect x="5.4982%" y="661" width="0.0174%" height="15" fill="rgb(242,216,29)" fg:x="1474707421" fg:w="4666876"/><text x="5.7482%" y="671.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (4,666,876 samples, 0.02%)</title><rect x="5.4982%" y="645" width="0.0174%" height="15" fill="rgb(230,116,27)" fg:x="1474707421" fg:w="4666876"/><text x="5.7482%" y="655.50"></text></g><g><title>rgu_labs_term3_discrete_math::task2::run_task_2 (51,271,194 samples, 0.19%)</title><rect x="5.3764%" y="725" width="0.1912%" height="15" fill="rgb(228,99,48)" fg:x="1442052600" fg:w="51271194"/><text x="5.6264%" y="735.50"></text></g><g><title>std::io::BufRead::read_line (13,949,497 samples, 0.05%)</title><rect x="5.5156%" y="709" width="0.0520%" height="15" fill="rgb(253,11,6)" fg:x="1479374297" fg:w="13949497"/><text x="5.7656%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (4,673,043 samples, 0.02%)</title><rect x="5.7588%" y="709" width="0.0174%" height="15" fill="rgb(247,143,39)" fg:x="1544623388" fg:w="4673043"/><text x="6.0088%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (4,673,043 samples, 0.02%)</title><rect x="5.7588%" y="693" width="0.0174%" height="15" fill="rgb(236,97,10)" fg:x="1544623388" fg:w="4673043"/><text x="6.0088%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (18,626,706 samples, 0.07%)</title><rect x="5.7763%" y="709" width="0.0694%" height="15" fill="rgb(233,208,19)" fg:x="1549296431" fg:w="18626706"/><text x="6.0263%" y="719.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (18,626,706 samples, 0.07%)</title><rect x="5.7763%" y="693" width="0.0694%" height="15" fill="rgb(216,164,2)" fg:x="1549296431" fg:w="18626706"/><text x="6.0263%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (18,626,706 samples, 0.07%)</title><rect x="5.7763%" y="677" width="0.0694%" height="15" fill="rgb(220,129,5)" fg:x="1549296431" fg:w="18626706"/><text x="6.0263%" y="687.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (13,984,558 samples, 0.05%)</title><rect x="5.7936%" y="661" width="0.0521%" height="15" fill="rgb(242,17,10)" fg:x="1553938579" fg:w="13984558"/><text x="6.0436%" y="671.50"></text></g><g><title>core::slice::index::get_noubcheck (13,984,558 samples, 0.05%)</title><rect x="5.7936%" y="645" width="0.0521%" height="15" fill="rgb(242,107,0)" fg:x="1553938579" fg:w="13984558"/><text x="6.0436%" y="655.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (4,646,926 samples, 0.02%)</title><rect x="6.0363%" y="677" width="0.0173%" height="15" fill="rgb(251,28,31)" fg:x="1619048456" fg:w="4646926"/><text x="6.2863%" y="687.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume (4,646,926 samples, 0.02%)</title><rect x="6.0363%" y="661" width="0.0173%" height="15" fill="rgb(233,223,10)" fg:x="1619048456" fg:w="4646926"/><text x="6.2863%" y="671.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (4,640,189 samples, 0.02%)</title><rect x="6.0536%" y="677" width="0.0173%" height="15" fill="rgb(215,21,27)" fg:x="1623695382" fg:w="4640189"/><text x="6.3036%" y="687.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (4,640,189 samples, 0.02%)</title><rect x="6.0536%" y="661" width="0.0173%" height="15" fill="rgb(232,23,21)" fg:x="1623695382" fg:w="4640189"/><text x="6.3036%" y="671.50"></text></g><g><title>core::io::borrowed_buf::BorrowedBuf::len (4,640,189 samples, 0.02%)</title><rect x="6.0536%" y="645" width="0.0173%" height="15" fill="rgb(244,5,23)" fg:x="1623695382" fg:w="4640189"/><text x="6.3036%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9,304,229 samples, 0.03%)</title><rect x="6.1058%" y="629" width="0.0347%" height="15" fill="rgb(226,81,46)" fg:x="1637684140" fg:w="9304229"/><text x="6.3558%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (9,304,229 samples, 0.03%)</title><rect x="6.1058%" y="613" width="0.0347%" height="15" fill="rgb(247,70,30)" fg:x="1637684140" fg:w="9304229"/><text x="6.3558%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (9,304,229 samples, 0.03%)</title><rect x="6.1058%" y="597" width="0.0347%" height="15" fill="rgb(212,68,19)" fg:x="1637684140" fg:w="9304229"/><text x="6.3558%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (9,304,229 samples, 0.03%)</title><rect x="6.1058%" y="581" width="0.0347%" height="15" fill="rgb(240,187,13)" fg:x="1637684140" fg:w="9304229"/><text x="6.3558%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9,857,085 samples, 0.04%)</title><rect x="6.1405%" y="629" width="0.0368%" height="15" fill="rgb(223,113,26)" fg:x="1646988369" fg:w="9857085"/><text x="6.3905%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9,857,085 samples, 0.04%)</title><rect x="6.1405%" y="613" width="0.0368%" height="15" fill="rgb(206,192,2)" fg:x="1646988369" fg:w="9857085"/><text x="6.3905%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (9,857,085 samples, 0.04%)</title><rect x="6.1405%" y="597" width="0.0368%" height="15" fill="rgb(241,108,4)" fg:x="1646988369" fg:w="9857085"/><text x="6.3905%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (9,857,085 samples, 0.04%)</title><rect x="6.1405%" y="581" width="0.0368%" height="15" fill="rgb(247,173,49)" fg:x="1646988369" fg:w="9857085"/><text x="6.3905%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (4,656,865 samples, 0.02%)</title><rect x="6.1599%" y="565" width="0.0174%" height="15" fill="rgb(224,114,35)" fg:x="1652188589" fg:w="4656865"/><text x="6.4099%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (61,293,249 samples, 0.23%)</title><rect x="6.0710%" y="677" width="0.2285%" height="15" fill="rgb(245,159,27)" fg:x="1628335571" fg:w="61293249"/><text x="6.3210%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (61,293,249 samples, 0.23%)</title><rect x="6.0710%" y="661" width="0.2285%" height="15" fill="rgb(245,172,44)" fg:x="1628335571" fg:w="61293249"/><text x="6.3210%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (61,293,249 samples, 0.23%)</title><rect x="6.0710%" y="645" width="0.2285%" height="15" fill="rgb(236,23,11)" fg:x="1628335571" fg:w="61293249"/><text x="6.3210%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32,783,366 samples, 0.12%)</title><rect x="6.1772%" y="629" width="0.1222%" height="15" fill="rgb(205,117,38)" fg:x="1656845454" fg:w="32783366"/><text x="6.4272%" y="639.50"></text></g><g><title>[unknown] (1,348,237,783 samples, 5.03%)</title><rect x="1.3596%" y="741" width="5.0267%" height="15" fill="rgb(237,72,25)" fg:x="364672149" fg:w="1348237783"/><text x="1.6096%" y="751.50">[unkno..</text></g><g><title>std::io::append_to_string (219,586,138 samples, 0.82%)</title><rect x="5.5676%" y="725" width="0.8187%" height="15" fill="rgb(244,70,9)" fg:x="1493323794" fg:w="219586138"/><text x="5.8176%" y="735.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (144,986,795 samples, 0.54%)</title><rect x="5.8457%" y="709" width="0.5406%" height="15" fill="rgb(217,125,39)" fg:x="1567923137" fg:w="144986795"/><text x="6.0957%" y="719.50"></text></g><g><title>std::io::read_until (144,986,795 samples, 0.54%)</title><rect x="5.8457%" y="693" width="0.5406%" height="15" fill="rgb(235,36,10)" fg:x="1567923137" fg:w="144986795"/><text x="6.0957%" y="703.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (23,281,112 samples, 0.09%)</title><rect x="6.2995%" y="677" width="0.0868%" height="15" fill="rgb(251,123,47)" fg:x="1689628820" fg:w="23281112"/><text x="6.5495%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeToInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (23,281,112 samples, 0.09%)</title><rect x="6.2995%" y="661" width="0.0868%" height="15" fill="rgb(221,13,13)" fg:x="1689628820" fg:w="23281112"/><text x="6.5495%" y="671.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (23,281,112 samples, 0.09%)</title><rect x="6.2995%" y="645" width="0.0868%" height="15" fill="rgb(238,131,9)" fg:x="1689628820" fg:w="23281112"/><text x="6.5495%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (18,628,691 samples, 0.07%)</title><rect x="6.3168%" y="629" width="0.0695%" height="15" fill="rgb(211,50,8)" fg:x="1694281241" fg:w="18628691"/><text x="6.5668%" y="639.50"></text></g><g><title>core::slice::memchr::memchr_aligned (56,068,247 samples, 0.21%)</title><rect x="6.3863%" y="741" width="0.2090%" height="15" fill="rgb(245,182,24)" fg:x="1712909932" fg:w="56068247"/><text x="6.6363%" y="751.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (4,655,277 samples, 0.02%)</title><rect x="6.7343%" y="677" width="0.0174%" height="15" fill="rgb(242,14,37)" fg:x="1806248230" fg:w="4655277"/><text x="6.9843%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim::{{closure}} (4,655,277 samples, 0.02%)</title><rect x="6.7343%" y="661" width="0.0174%" height="15" fill="rgb(246,228,12)" fg:x="1806248230" fg:w="4655277"/><text x="6.9843%" y="671.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (4,655,277 samples, 0.02%)</title><rect x="6.7343%" y="645" width="0.0174%" height="15" fill="rgb(213,55,15)" fg:x="1806248230" fg:w="4655277"/><text x="6.9843%" y="655.50"></text></g><g><title>core::unicode::unicode_data::white_space::lookup (4,655,277 samples, 0.02%)</title><rect x="6.7343%" y="629" width="0.0174%" height="15" fill="rgb(209,9,3)" fg:x="1806248230" fg:w="4655277"/><text x="6.9843%" y="639.50"></text></g><g><title>core::str::validations::utf8_acc_cont_byte (18,647,857 samples, 0.07%)</title><rect x="6.8211%" y="629" width="0.0695%" height="15" fill="rgb(230,59,30)" fg:x="1829538817" fg:w="18647857"/><text x="7.0711%" y="639.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (51,239,639 samples, 0.19%)</title><rect x="6.7169%" y="725" width="0.1910%" height="15" fill="rgb(209,121,21)" fg:x="1801596112" fg:w="51239639"/><text x="6.9669%" y="735.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (51,239,639 samples, 0.19%)</title><rect x="6.7169%" y="709" width="0.1910%" height="15" fill="rgb(220,109,13)" fg:x="1801596112" fg:w="51239639"/><text x="6.9669%" y="719.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (51,239,639 samples, 0.19%)</title><rect x="6.7169%" y="693" width="0.1910%" height="15" fill="rgb(232,18,1)" fg:x="1801596112" fg:w="51239639"/><text x="6.9669%" y="703.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (41,932,244 samples, 0.16%)</title><rect x="6.7516%" y="677" width="0.1563%" height="15" fill="rgb(215,41,42)" fg:x="1810903507" fg:w="41932244"/><text x="7.0016%" y="687.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (41,932,244 samples, 0.16%)</title><rect x="6.7516%" y="661" width="0.1563%" height="15" fill="rgb(224,123,36)" fg:x="1810903507" fg:w="41932244"/><text x="7.0016%" y="671.50"></text></g><g><title>core::str::validations::next_code_point_reverse (41,932,244 samples, 0.16%)</title><rect x="6.7516%" y="645" width="0.1563%" height="15" fill="rgb(240,125,3)" fg:x="1810903507" fg:w="41932244"/><text x="7.0016%" y="655.50"></text></g><g><title>core::str::validations::utf8_is_cont_byte (4,649,077 samples, 0.02%)</title><rect x="6.8906%" y="629" width="0.0173%" height="15" fill="rgb(205,98,50)" fg:x="1848186674" fg:w="4649077"/><text x="7.1406%" y="639.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (13,723,137 samples, 0.05%)</title><rect x="7.0296%" y="677" width="0.0512%" height="15" fill="rgb(205,185,37)" fg:x="1885475116" fg:w="13723137"/><text x="7.2796%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim::{{closure}} (13,723,137 samples, 0.05%)</title><rect x="7.0296%" y="661" width="0.0512%" height="15" fill="rgb(238,207,15)" fg:x="1885475116" fg:w="13723137"/><text x="7.2796%" y="671.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (13,723,137 samples, 0.05%)</title><rect x="7.0296%" y="645" width="0.0512%" height="15" fill="rgb(213,199,42)" fg:x="1885475116" fg:w="13723137"/><text x="7.2796%" y="655.50"></text></g><g><title>core::unicode::unicode_data::white_space::lookup (9,061,220 samples, 0.03%)</title><rect x="7.0470%" y="629" width="0.0338%" height="15" fill="rgb(235,201,11)" fg:x="1890137033" fg:w="9061220"/><text x="7.2970%" y="639.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (190,722,411 samples, 0.71%)</title><rect x="6.5953%" y="741" width="0.7111%" height="15" fill="rgb(207,46,11)" fg:x="1768978179" fg:w="190722411"/><text x="6.8453%" y="751.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_reject (106,864,839 samples, 0.40%)</title><rect x="6.9080%" y="725" width="0.3984%" height="15" fill="rgb(241,35,35)" fg:x="1852835751" fg:w="106864839"/><text x="7.1580%" y="735.50"></text></g><g><title>core::str::pattern::Searcher::next_reject (106,864,839 samples, 0.40%)</title><rect x="6.9080%" y="709" width="0.3984%" height="15" fill="rgb(243,32,47)" fg:x="1852835751" fg:w="106864839"/><text x="7.1580%" y="719.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (106,864,839 samples, 0.40%)</title><rect x="6.9080%" y="693" width="0.3984%" height="15" fill="rgb(247,202,23)" fg:x="1852835751" fg:w="106864839"/><text x="7.1580%" y="703.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (60,502,337 samples, 0.23%)</title><rect x="7.0808%" y="677" width="0.2256%" height="15" fill="rgb(219,102,11)" fg:x="1899198253" fg:w="60502337"/><text x="7.3308%" y="687.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (51,193,817 samples, 0.19%)</title><rect x="7.1155%" y="661" width="0.1909%" height="15" fill="rgb(243,110,44)" fg:x="1908506773" fg:w="51193817"/><text x="7.3655%" y="671.50"></text></g><g><title>core::str::validations::next_code_point (51,193,817 samples, 0.19%)</title><rect x="7.1155%" y="645" width="0.1909%" height="15" fill="rgb(222,74,54)" fg:x="1908506773" fg:w="51193817"/><text x="7.3655%" y="655.50"></text></g><g><title>core::str::validations::utf8_acc_cont_byte (18,624,912 samples, 0.07%)</title><rect x="7.2369%" y="629" width="0.0694%" height="15" fill="rgb(216,99,12)" fg:x="1941075678" fg:w="18624912"/><text x="7.4869%" y="639.50"></text></g><g><title>core::str::converts::from_utf8 (65,635,045 samples, 0.24%)</title><rect x="7.3064%" y="741" width="0.2447%" height="15" fill="rgb(226,22,26)" fg:x="1959700590" fg:w="65635045"/><text x="7.5564%" y="751.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (4,650,099 samples, 0.02%)</title><rect x="7.5511%" y="725" width="0.0173%" height="15" fill="rgb(217,163,10)" fg:x="2025335635" fg:w="4650099"/><text x="7.8011%" y="735.50"></text></g><g><title>core::str::validations::next_code_point (4,650,099 samples, 0.02%)</title><rect x="7.5511%" y="709" width="0.0173%" height="15" fill="rgb(213,25,53)" fg:x="2025335635" fg:w="4650099"/><text x="7.8011%" y="719.50"></text></g><g><title>core::str::validations::utf8_first_byte (4,650,099 samples, 0.02%)</title><rect x="7.5511%" y="693" width="0.0173%" height="15" fill="rgb(252,105,26)" fg:x="2025335635" fg:w="4650099"/><text x="7.8011%" y="703.50"></text></g><g><title>&lt;core::str::iter::SplitAsciiWhitespace as core::iter::traits::iterator::Iterator&gt;::next (18,603,813 samples, 0.07%)</title><rect x="7.5684%" y="725" width="0.0694%" height="15" fill="rgb(220,39,43)" fg:x="2029985734" fg:w="18603813"/><text x="7.8184%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,603,813 samples, 0.07%)</title><rect x="7.5684%" y="709" width="0.0694%" height="15" fill="rgb(229,68,48)" fg:x="2029985734" fg:w="18603813"/><text x="7.8184%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,603,813 samples, 0.07%)</title><rect x="7.5684%" y="693" width="0.0694%" height="15" fill="rgb(252,8,32)" fg:x="2029985734" fg:w="18603813"/><text x="7.8184%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (18,603,813 samples, 0.07%)</title><rect x="7.5684%" y="677" width="0.0694%" height="15" fill="rgb(223,20,43)" fg:x="2029985734" fg:w="18603813"/><text x="7.8184%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18,603,813 samples, 0.07%)</title><rect x="7.5684%" y="661" width="0.0694%" height="15" fill="rgb(229,81,49)" fg:x="2029985734" fg:w="18603813"/><text x="7.8184%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Split&lt;T,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,603,813 samples, 0.07%)</title><rect x="7.5684%" y="645" width="0.0694%" height="15" fill="rgb(236,28,36)" fg:x="2029985734" fg:w="18603813"/><text x="7.8184%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (13,940,279 samples, 0.05%)</title><rect x="7.5858%" y="629" width="0.0520%" height="15" fill="rgb(249,185,26)" fg:x="2034649268" fg:w="13940279"/><text x="7.8358%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,652,805 samples, 0.02%)</title><rect x="7.6204%" y="613" width="0.0173%" height="15" fill="rgb(249,174,33)" fg:x="2043936742" fg:w="4652805"/><text x="7.8704%" y="623.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4,652,805 samples, 0.02%)</title><rect x="7.6204%" y="597" width="0.0173%" height="15" fill="rgb(233,201,37)" fg:x="2043936742" fg:w="4652805"/><text x="7.8704%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,719,050 samples, 0.02%)</title><rect x="7.6378%" y="725" width="0.0176%" height="15" fill="rgb(221,78,26)" fg:x="2048589547" fg:w="4719050"/><text x="7.8878%" y="735.50"></text></g><g><title>core::ptr::write (4,719,050 samples, 0.02%)</title><rect x="7.6378%" y="709" width="0.0176%" height="15" fill="rgb(250,127,30)" fg:x="2048589547" fg:w="4719050"/><text x="7.8878%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (13,962,921 samples, 0.05%)</title><rect x="7.6554%" y="725" width="0.0521%" height="15" fill="rgb(230,49,44)" fg:x="2053308597" fg:w="13962921"/><text x="7.9054%" y="735.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (47,159,043 samples, 0.18%)</title><rect x="8.0941%" y="661" width="0.1758%" height="15" fill="rgb(229,67,23)" fg:x="2170991766" fg:w="47159043"/><text x="8.3441%" y="671.50"></text></g><g><title>rgu_labs_term3_discrete_math::task2::run_task_2 (211,425,557 samples, 0.79%)</title><rect x="7.5511%" y="741" width="0.7883%" height="15" fill="rgb(249,83,47)" fg:x="2025335635" fg:w="211425557"/><text x="7.8011%" y="751.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::contains (169,489,674 samples, 0.63%)</title><rect x="7.7074%" y="725" width="0.6319%" height="15" fill="rgb(215,43,3)" fg:x="2067271518" fg:w="169489674"/><text x="7.9574%" y="735.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::index_of (169,489,674 samples, 0.63%)</title><rect x="7.7074%" y="709" width="0.6319%" height="15" fill="rgb(238,154,13)" fg:x="2067271518" fg:w="169489674"/><text x="7.9574%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (169,489,674 samples, 0.63%)</title><rect x="7.7074%" y="693" width="0.6319%" height="15" fill="rgb(219,56,2)" fg:x="2067271518" fg:w="169489674"/><text x="7.9574%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (169,489,674 samples, 0.63%)</title><rect x="7.7074%" y="677" width="0.6319%" height="15" fill="rgb(233,0,4)" fg:x="2067271518" fg:w="169489674"/><text x="7.9574%" y="687.50"></text></g><g><title>core::bool::&lt;impl bool&gt;::select_unpredictable (18,610,383 samples, 0.07%)</title><rect x="8.2700%" y="661" width="0.0694%" height="15" fill="rgb(235,30,7)" fg:x="2218150809" fg:w="18610383"/><text x="8.5200%" y="671.50"></text></g><g><title>alloc::string::String::len (41,734,873 samples, 0.16%)</title><rect x="9.8197%" y="725" width="0.1556%" height="15" fill="rgb(250,79,13)" fg:x="2633810296" fg:w="41734873"/><text x="10.0697%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (41,734,873 samples, 0.16%)</title><rect x="9.8197%" y="709" width="0.1556%" height="15" fill="rgb(211,146,34)" fg:x="2633810296" fg:w="41734873"/><text x="10.0697%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (9,298,801 samples, 0.03%)</title><rect x="9.9753%" y="725" width="0.0347%" height="15" fill="rgb(228,22,38)" fg:x="2675545169" fg:w="9298801"/><text x="10.2253%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (9,298,801 samples, 0.03%)</title><rect x="9.9753%" y="709" width="0.0347%" height="15" fill="rgb(235,168,5)" fg:x="2675545169" fg:w="9298801"/><text x="10.2253%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (14,484,627 samples, 0.05%)</title><rect x="10.0099%" y="725" width="0.0540%" height="15" fill="rgb(221,155,16)" fg:x="2684843970" fg:w="14484627"/><text x="10.2599%" y="735.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (14,484,627 samples, 0.05%)</title><rect x="10.0099%" y="709" width="0.0540%" height="15" fill="rgb(215,215,53)" fg:x="2684843970" fg:w="14484627"/><text x="10.2599%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (14,484,627 samples, 0.05%)</title><rect x="10.0099%" y="693" width="0.0540%" height="15" fill="rgb(223,4,10)" fg:x="2684843970" fg:w="14484627"/><text x="10.2599%" y="703.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (9,303,725 samples, 0.03%)</title><rect x="10.0293%" y="677" width="0.0347%" height="15" fill="rgb(234,103,6)" fg:x="2690024872" fg:w="9303725"/><text x="10.2793%" y="687.50"></text></g><g><title>core::slice::index::get_noubcheck (9,303,725 samples, 0.03%)</title><rect x="10.0293%" y="661" width="0.0347%" height="15" fill="rgb(227,97,0)" fg:x="2690024872" fg:w="9303725"/><text x="10.2793%" y="671.50"></text></g><g><title>core::io::borrowed_buf::BorrowedBuf::len (4,643,347 samples, 0.02%)</title><rect x="10.3070%" y="661" width="0.0173%" height="15" fill="rgb(234,150,53)" fg:x="2764508920" fg:w="4643347"/><text x="10.5570%" y="671.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (60,581,612 samples, 0.23%)</title><rect x="10.2202%" y="693" width="0.2259%" height="15" fill="rgb(228,201,54)" fg:x="2741235910" fg:w="60581612"/><text x="10.4702%" y="703.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (60,581,612 samples, 0.23%)</title><rect x="10.2202%" y="677" width="0.2259%" height="15" fill="rgb(222,22,37)" fg:x="2741235910" fg:w="60581612"/><text x="10.4702%" y="687.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::buffer (32,665,255 samples, 0.12%)</title><rect x="10.3243%" y="661" width="0.1218%" height="15" fill="rgb(237,53,32)" fg:x="2769152267" fg:w="32665255"/><text x="10.5743%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (23,300,977 samples, 0.09%)</title><rect x="10.3592%" y="645" width="0.0869%" height="15" fill="rgb(233,25,53)" fg:x="2778516545" fg:w="23300977"/><text x="10.6092%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (23,300,977 samples, 0.09%)</title><rect x="10.3592%" y="629" width="0.0869%" height="15" fill="rgb(210,40,34)" fg:x="2778516545" fg:w="23300977"/><text x="10.6092%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (18,600,371 samples, 0.07%)</title><rect x="10.4461%" y="693" width="0.0693%" height="15" fill="rgb(241,220,44)" fg:x="2801817522" fg:w="18600371"/><text x="10.6961%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (18,600,371 samples, 0.07%)</title><rect x="10.4461%" y="677" width="0.0693%" height="15" fill="rgb(235,28,35)" fg:x="2801817522" fg:w="18600371"/><text x="10.6961%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (18,600,371 samples, 0.07%)</title><rect x="10.4461%" y="661" width="0.0693%" height="15" fill="rgb(210,56,17)" fg:x="2801817522" fg:w="18600371"/><text x="10.6961%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18,600,371 samples, 0.07%)</title><rect x="10.4461%" y="645" width="0.0693%" height="15" fill="rgb(224,130,29)" fg:x="2801817522" fg:w="18600371"/><text x="10.6961%" y="655.50"></text></g><g><title>[unknown] (2,792,038,290 samples, 10.41%)</title><rect x="0.6638%" y="757" width="10.4096%" height="15" fill="rgb(235,212,8)" fg:x="178039855" fg:w="2792038290"/><text x="0.9138%" y="767.50">[unknown]</text></g><g><title>std::io::append_to_string (733,316,953 samples, 2.73%)</title><rect x="8.3394%" y="741" width="2.7340%" height="15" fill="rgb(223,33,50)" fg:x="2236761192" fg:w="733316953"/><text x="8.5894%" y="751.50">st..</text></g><g><title>std::io::BufRead::read_line::{{closure}} (270,749,548 samples, 1.01%)</title><rect x="10.0640%" y="725" width="1.0094%" height="15" fill="rgb(219,149,13)" fg:x="2699328597" fg:w="270749548"/><text x="10.3140%" y="735.50"></text></g><g><title>std::io::read_until (270,749,548 samples, 1.01%)</title><rect x="10.0640%" y="709" width="1.0094%" height="15" fill="rgb(250,156,29)" fg:x="2699328597" fg:w="270749548"/><text x="10.3140%" y="719.50"></text></g><g><title>core::slice::memchr::memchr (149,660,252 samples, 0.56%)</title><rect x="10.5154%" y="693" width="0.5580%" height="15" fill="rgb(216,193,19)" fg:x="2820417893" fg:w="149660252"/><text x="10.7654%" y="703.50"></text></g><g><title>__irqentry_text_end (4,641,236 samples, 0.02%)</title><rect x="11.0734%" y="757" width="0.0173%" height="15" fill="rgb(216,135,14)" fg:x="2970078145" fg:w="4641236"/><text x="11.3234%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (23,265,845 samples, 0.09%)</title><rect x="12.7997%" y="469" width="0.0867%" height="15" fill="rgb(241,47,5)" fg:x="3433115758" fg:w="23265845"/><text x="13.0497%" y="479.50"></text></g><g><title>alloc::string::String::as_str (23,265,845 samples, 0.09%)</title><rect x="12.7997%" y="453" width="0.0867%" height="15" fill="rgb(233,42,35)" fg:x="3433115758" fg:w="23265845"/><text x="13.0497%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (23,265,845 samples, 0.09%)</title><rect x="12.7997%" y="437" width="0.0867%" height="15" fill="rgb(231,13,6)" fg:x="3433115758" fg:w="23265845"/><text x="13.0497%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13,958,797 samples, 0.05%)</title><rect x="12.8344%" y="421" width="0.0520%" height="15" fill="rgb(207,181,40)" fg:x="3442422806" fg:w="13958797"/><text x="13.0844%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (13,958,797 samples, 0.05%)</title><rect x="12.8344%" y="405" width="0.0520%" height="15" fill="rgb(254,173,49)" fg:x="3442422806" fg:w="13958797"/><text x="13.0844%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (13,958,797 samples, 0.05%)</title><rect x="12.8344%" y="389" width="0.0520%" height="15" fill="rgb(221,1,38)" fg:x="3442422806" fg:w="13958797"/><text x="13.0844%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (13,958,797 samples, 0.05%)</title><rect x="12.8344%" y="373" width="0.0520%" height="15" fill="rgb(206,124,46)" fg:x="3442422806" fg:w="13958797"/><text x="13.0844%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (37,172,874 samples, 0.14%)</title><rect x="13.9482%" y="437" width="0.1386%" height="15" fill="rgb(249,21,11)" fg:x="3741149638" fg:w="37172874"/><text x="14.1982%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (37,172,874 samples, 0.14%)</title><rect x="13.9482%" y="421" width="0.1386%" height="15" fill="rgb(222,201,40)" fg:x="3741149638" fg:w="37172874"/><text x="14.1982%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,938,368 samples, 0.02%)</title><rect x="14.0868%" y="437" width="0.0184%" height="15" fill="rgb(235,61,29)" fg:x="3778322512" fg:w="4938368"/><text x="14.3368%" y="447.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,938,368 samples, 0.02%)</title><rect x="14.0868%" y="421" width="0.0184%" height="15" fill="rgb(219,207,3)" fg:x="3778322512" fg:w="4938368"/><text x="14.3368%" y="431.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,938,368 samples, 0.02%)</title><rect x="14.0868%" y="405" width="0.0184%" height="15" fill="rgb(222,56,46)" fg:x="3778322512" fg:w="4938368"/><text x="14.3368%" y="415.50"></text></g><g><title>hrtimer_interrupt (4,938,368 samples, 0.02%)</title><rect x="14.0868%" y="389" width="0.0184%" height="15" fill="rgb(239,76,54)" fg:x="3778322512" fg:w="4938368"/><text x="14.3368%" y="399.50"></text></g><g><title>__hrtimer_run_queues (4,938,368 samples, 0.02%)</title><rect x="14.0868%" y="373" width="0.0184%" height="15" fill="rgb(231,124,27)" fg:x="3778322512" fg:w="4938368"/><text x="14.3368%" y="383.50"></text></g><g><title>tick_nohz_handler (4,938,368 samples, 0.02%)</title><rect x="14.0868%" y="357" width="0.0184%" height="15" fill="rgb(249,195,6)" fg:x="3778322512" fg:w="4938368"/><text x="14.3368%" y="367.50"></text></g><g><title>update_process_times (4,938,368 samples, 0.02%)</title><rect x="14.0868%" y="341" width="0.0184%" height="15" fill="rgb(237,174,47)" fg:x="3778322512" fg:w="4938368"/><text x="14.3368%" y="351.50"></text></g><g><title>sched_tick (4,938,368 samples, 0.02%)</title><rect x="14.0868%" y="325" width="0.0184%" height="15" fill="rgb(206,201,31)" fg:x="3778322512" fg:w="4938368"/><text x="14.3368%" y="335.50"></text></g><g><title>task_tick_fair (4,938,368 samples, 0.02%)</title><rect x="14.0868%" y="309" width="0.0184%" height="15" fill="rgb(231,57,52)" fg:x="3778322512" fg:w="4938368"/><text x="14.3368%" y="319.50"></text></g><g><title>reweight_entity (4,938,368 samples, 0.02%)</title><rect x="14.0868%" y="293" width="0.0184%" height="15" fill="rgb(248,177,22)" fg:x="3778322512" fg:w="4938368"/><text x="14.3368%" y="303.50"></text></g><g><title>update_entity_lag (4,938,368 samples, 0.02%)</title><rect x="14.0868%" y="277" width="0.0184%" height="15" fill="rgb(215,211,37)" fg:x="3778322512" fg:w="4938368"/><text x="14.3368%" y="287.50"></text></g><g><title>core::str::validations::utf8_acc_cont_byte (158,403,177 samples, 0.59%)</title><rect x="14.1052%" y="437" width="0.5906%" height="15" fill="rgb(241,128,51)" fg:x="3783260880" fg:w="158403177"/><text x="14.3552%" y="447.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (596,724,068 samples, 2.22%)</title><rect x="12.8865%" y="469" width="2.2248%" height="15" fill="rgb(227,165,31)" fg:x="3456381603" fg:w="596724068"/><text x="13.1365%" y="479.50">&lt;..</text></g><g><title>core::str::validations::next_code_point (596,724,068 samples, 2.22%)</title><rect x="12.8865%" y="453" width="2.2248%" height="15" fill="rgb(228,167,24)" fg:x="3456381603" fg:w="596724068"/><text x="13.1365%" y="463.50">c..</text></g><g><title>core::str::validations::utf8_first_byte (111,441,614 samples, 0.42%)</title><rect x="14.6958%" y="437" width="0.4155%" height="15" fill="rgb(228,143,12)" fg:x="3941664057" fg:w="111441614"/><text x="14.9458%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (552,396,883 samples, 2.06%)</title><rect x="16.2162%" y="373" width="2.0595%" height="15" fill="rgb(249,149,8)" fg:x="4349459629" fg:w="552396883"/><text x="16.4662%" y="383.50">&lt;..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (186,509,095 samples, 0.70%)</title><rect x="17.5803%" y="357" width="0.6954%" height="15" fill="rgb(243,35,44)" fg:x="4715347417" fg:w="186509095"/><text x="17.8303%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (172,545,045 samples, 0.64%)</title><rect x="17.6324%" y="341" width="0.6433%" height="15" fill="rgb(246,89,9)" fg:x="4729311467" fg:w="172545045"/><text x="17.8824%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,631,652 samples, 0.02%)</title><rect x="18.2757%" y="373" width="0.0173%" height="15" fill="rgb(233,213,13)" fg:x="4901856512" fg:w="4631652"/><text x="18.5257%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,631,652 samples, 0.02%)</title><rect x="18.2757%" y="357" width="0.0173%" height="15" fill="rgb(233,141,41)" fg:x="4901856512" fg:w="4631652"/><text x="18.5257%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,631,652 samples, 0.02%)</title><rect x="18.2757%" y="341" width="0.0173%" height="15" fill="rgb(239,167,4)" fg:x="4901856512" fg:w="4631652"/><text x="18.5257%" y="351.50"></text></g><g><title>hrtimer_interrupt (4,631,652 samples, 0.02%)</title><rect x="18.2757%" y="325" width="0.0173%" height="15" fill="rgb(209,217,16)" fg:x="4901856512" fg:w="4631652"/><text x="18.5257%" y="335.50"></text></g><g><title>srso_alias_safe_ret (4,631,652 samples, 0.02%)</title><rect x="18.2757%" y="309" width="0.0173%" height="15" fill="rgb(219,88,35)" fg:x="4901856512" fg:w="4631652"/><text x="18.5257%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Split&lt;T,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (914,016,852 samples, 3.41%)</title><rect x="15.1113%" y="389" width="3.4077%" height="15" fill="rgb(220,193,23)" fg:x="4053105671" fg:w="914016852"/><text x="15.3613%" y="399.50">&lt;co..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (60,634,359 samples, 0.23%)</title><rect x="18.2929%" y="373" width="0.2261%" height="15" fill="rgb(230,90,52)" fg:x="4906488164" fg:w="60634359"/><text x="18.5429%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (60,634,359 samples, 0.23%)</title><rect x="18.2929%" y="357" width="0.2261%" height="15" fill="rgb(252,106,19)" fg:x="4906488164" fg:w="60634359"/><text x="18.5429%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (60,634,359 samples, 0.23%)</title><rect x="18.2929%" y="341" width="0.2261%" height="15" fill="rgb(206,74,20)" fg:x="4906488164" fg:w="60634359"/><text x="18.5429%" y="351.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (60,634,359 samples, 0.23%)</title><rect x="18.2929%" y="325" width="0.2261%" height="15" fill="rgb(230,138,44)" fg:x="4906488164" fg:w="60634359"/><text x="18.5429%" y="335.50"></text></g><g><title>core::slice::index::get_noubcheck (60,634,359 samples, 0.23%)</title><rect x="18.2929%" y="309" width="0.2261%" height="15" fill="rgb(235,182,43)" fg:x="4906488164" fg:w="60634359"/><text x="18.5429%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (999,534,757 samples, 3.73%)</title><rect x="15.1113%" y="405" width="3.7266%" height="15" fill="rgb(242,16,51)" fg:x="4053105671" fg:w="999534757"/><text x="15.3613%" y="415.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (85,517,905 samples, 0.32%)</title><rect x="18.5190%" y="389" width="0.3188%" height="15" fill="rgb(248,9,4)" fg:x="4967122523" fg:w="85517905"/><text x="18.7690%" y="399.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (85,517,905 samples, 0.32%)</title><rect x="18.5190%" y="373" width="0.3188%" height="15" fill="rgb(210,31,22)" fg:x="4967122523" fg:w="85517905"/><text x="18.7690%" y="383.50"></text></g><g><title>&lt;core::str::BytesIsNotEmpty as core::ops::function::FnMut&lt;(&amp;&amp;[u8],)&gt;&gt;::call_mut (85,517,905 samples, 0.32%)</title><rect x="18.5190%" y="357" width="0.3188%" height="15" fill="rgb(239,54,39)" fg:x="4967122523" fg:w="85517905"/><text x="18.7690%" y="367.50"></text></g><g><title>&lt;core::str::BytesIsNotEmpty as core::ops::function::Fn&lt;(&amp;&amp;[u8],)&gt;&gt;::call (85,517,905 samples, 0.32%)</title><rect x="18.5190%" y="341" width="0.3188%" height="15" fill="rgb(230,99,41)" fg:x="4967122523" fg:w="85517905"/><text x="18.7690%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (85,517,905 samples, 0.32%)</title><rect x="18.5190%" y="325" width="0.3188%" height="15" fill="rgb(253,106,12)" fg:x="4967122523" fg:w="85517905"/><text x="18.7690%" y="335.50"></text></g><g><title>&lt;core::str::iter::SplitAsciiWhitespace as core::iter::traits::iterator::Iterator&gt;::next (1,042,131,813 samples, 3.89%)</title><rect x="15.1113%" y="469" width="3.8854%" height="15" fill="rgb(213,46,41)" fg:x="4053105671" fg:w="1042131813"/><text x="15.3613%" y="479.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,042,131,813 samples, 3.89%)</title><rect x="15.1113%" y="453" width="3.8854%" height="15" fill="rgb(215,133,35)" fg:x="4053105671" fg:w="1042131813"/><text x="15.3613%" y="463.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,042,131,813 samples, 3.89%)</title><rect x="15.1113%" y="437" width="3.8854%" height="15" fill="rgb(213,28,5)" fg:x="4053105671" fg:w="1042131813"/><text x="15.3613%" y="447.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find (1,042,131,813 samples, 3.89%)</title><rect x="15.1113%" y="421" width="3.8854%" height="15" fill="rgb(215,77,49)" fg:x="4053105671" fg:w="1042131813"/><text x="15.3613%" y="431.50">core..</text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (42,597,056 samples, 0.16%)</title><rect x="18.8378%" y="405" width="0.1588%" height="15" fill="rgb(248,100,22)" fg:x="5052640428" fg:w="42597056"/><text x="19.0878%" y="415.50"></text></g><g><title>alloc::string::String::clear (32,563,030 samples, 0.12%)</title><rect x="18.9967%" y="469" width="0.1214%" height="15" fill="rgb(208,67,9)" fg:x="5095237484" fg:w="32563030"/><text x="19.2467%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (32,563,030 samples, 0.12%)</title><rect x="18.9967%" y="453" width="0.1214%" height="15" fill="rgb(219,133,21)" fg:x="5095237484" fg:w="32563030"/><text x="19.2467%" y="463.50"></text></g><g><title>folio_remove_rmap_pmd (4,628,094 samples, 0.02%)</title><rect x="20.1444%" y="165" width="0.0173%" height="15" fill="rgb(246,46,29)" fg:x="5403080576" fg:w="4628094"/><text x="20.3944%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="453" width="0.1038%" height="15" fill="rgb(246,185,52)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="437" width="0.1038%" height="15" fill="rgb(252,136,11)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="421" width="0.1038%" height="15" fill="rgb(219,138,53)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="405" width="0.1038%" height="15" fill="rgb(211,51,23)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="389" width="0.1038%" height="15" fill="rgb(247,221,28)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="373" width="0.1038%" height="15" fill="rgb(251,222,45)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="383.50"></text></g><g><title>alloc::alloc::realloc (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="357" width="0.1038%" height="15" fill="rgb(217,162,53)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="367.50"></text></g><g><title>realloc (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="341" width="0.1038%" height="15" fill="rgb(229,93,14)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="351.50"></text></g><g><title>mremap (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="325" width="0.1038%" height="15" fill="rgb(209,67,49)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="309" width="0.1038%" height="15" fill="rgb(213,87,29)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="319.50"></text></g><g><title>do_syscall_64 (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="293" width="0.1038%" height="15" fill="rgb(205,151,52)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="303.50"></text></g><g><title>__do_sys_mremap (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="277" width="0.1038%" height="15" fill="rgb(253,215,39)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="287.50"></text></g><g><title>do_mremap (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="261" width="0.1038%" height="15" fill="rgb(221,220,41)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="271.50"></text></g><g><title>move_vma (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="245" width="0.1038%" height="15" fill="rgb(218,133,21)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="255.50"></text></g><g><title>copy_vma_and_data (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="229" width="0.1038%" height="15" fill="rgb(221,193,43)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="239.50"></text></g><g><title>move_page_tables (27,851,512 samples, 0.10%)</title><rect x="20.0924%" y="213" width="0.1038%" height="15" fill="rgb(240,128,52)" fg:x="5389143644" fg:w="27851512"/><text x="20.3424%" y="223.50"></text></g><g><title>__split_huge_pmd (13,914,580 samples, 0.05%)</title><rect x="20.1444%" y="197" width="0.0519%" height="15" fill="rgb(253,114,12)" fg:x="5403080576" fg:w="13914580"/><text x="20.3944%" y="207.50"></text></g><g><title>__split_huge_pmd_locked (13,914,580 samples, 0.05%)</title><rect x="20.1444%" y="181" width="0.0519%" height="15" fill="rgb(215,223,47)" fg:x="5403080576" fg:w="13914580"/><text x="20.3944%" y="191.50"></text></g><g><title>pte_val (9,286,486 samples, 0.03%)</title><rect x="20.1616%" y="165" width="0.0346%" height="15" fill="rgb(248,225,23)" fg:x="5407708670" fg:w="9286486"/><text x="20.4116%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (19,147,458 samples, 0.07%)</title><rect x="20.1963%" y="453" width="0.0714%" height="15" fill="rgb(250,108,0)" fg:x="5416995156" fg:w="19147458"/><text x="20.4463%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (19,147,458 samples, 0.07%)</title><rect x="20.1963%" y="437" width="0.0714%" height="15" fill="rgb(228,208,7)" fg:x="5416995156" fg:w="19147458"/><text x="20.4463%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (19,147,458 samples, 0.07%)</title><rect x="20.1963%" y="421" width="0.0714%" height="15" fill="rgb(244,45,10)" fg:x="5416995156" fg:w="19147458"/><text x="20.4463%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (19,147,458 samples, 0.07%)</title><rect x="20.1963%" y="405" width="0.0714%" height="15" fill="rgb(207,125,25)" fg:x="5416995156" fg:w="19147458"/><text x="20.4463%" y="415.50"></text></g><g><title>do_anonymous_page (9,317,294 samples, 0.03%)</title><rect x="21.3286%" y="357" width="0.0347%" height="15" fill="rgb(210,195,18)" fg:x="5720699966" fg:w="9317294"/><text x="21.5786%" y="367.50"></text></g><g><title>vma_alloc_folio_noprof (9,317,294 samples, 0.03%)</title><rect x="21.3286%" y="341" width="0.0347%" height="15" fill="rgb(249,80,12)" fg:x="5720699966" fg:w="9317294"/><text x="21.5786%" y="351.50"></text></g><g><title>alloc_pages_mpol (9,317,294 samples, 0.03%)</title><rect x="21.3286%" y="325" width="0.0347%" height="15" fill="rgb(221,65,9)" fg:x="5720699966" fg:w="9317294"/><text x="21.5786%" y="335.50"></text></g><g><title>__alloc_frozen_pages_noprof (9,317,294 samples, 0.03%)</title><rect x="21.3286%" y="309" width="0.0347%" height="15" fill="rgb(235,49,36)" fg:x="5720699966" fg:w="9317294"/><text x="21.5786%" y="319.50"></text></g><g><title>get_page_from_freelist (9,317,294 samples, 0.03%)</title><rect x="21.3286%" y="293" width="0.0347%" height="15" fill="rgb(225,32,20)" fg:x="5720699966" fg:w="9317294"/><text x="21.5786%" y="303.50"></text></g><g><title>prep_new_page (4,662,389 samples, 0.02%)</title><rect x="21.3459%" y="277" width="0.0174%" height="15" fill="rgb(215,141,46)" fg:x="5725354871" fg:w="4662389"/><text x="21.5959%" y="287.50"></text></g><g><title>clear_page_erms (4,662,389 samples, 0.02%)</title><rect x="21.3459%" y="261" width="0.0174%" height="15" fill="rgb(250,160,47)" fg:x="5725354871" fg:w="4662389"/><text x="21.5959%" y="271.50"></text></g><g><title>deferred_split_folio (4,650,700 samples, 0.02%)</title><rect x="21.3633%" y="341" width="0.0173%" height="15" fill="rgb(216,222,40)" fg:x="5730017260" fg:w="4650700"/><text x="21.6133%" y="351.50"></text></g><g><title>set_shrinker_bit (4,650,700 samples, 0.02%)</title><rect x="21.3633%" y="325" width="0.0173%" height="15" fill="rgb(234,217,39)" fg:x="5730017260" fg:w="4650700"/><text x="21.6133%" y="335.50"></text></g><g><title>__rcu_read_unlock (4,645,914 samples, 0.02%)</title><rect x="21.3807%" y="261" width="0.0173%" height="15" fill="rgb(207,178,40)" fg:x="5734667960" fg:w="4645914"/><text x="21.6307%" y="271.50"></text></g><g><title>__memcg_kmem_charge_page (9,302,430 samples, 0.03%)</title><rect x="21.3807%" y="277" width="0.0347%" height="15" fill="rgb(221,136,13)" fg:x="5734667960" fg:w="9302430"/><text x="21.6307%" y="287.50"></text></g><g><title>mod_memcg_state (4,656,516 samples, 0.02%)</title><rect x="21.3980%" y="261" width="0.0174%" height="15" fill="rgb(249,199,10)" fg:x="5739313874" fg:w="4656516"/><text x="21.6480%" y="271.50"></text></g><g><title>pte_alloc_one (13,911,781 samples, 0.05%)</title><rect x="21.3807%" y="341" width="0.0519%" height="15" fill="rgb(249,222,13)" fg:x="5734667960" fg:w="13911781"/><text x="21.6307%" y="351.50"></text></g><g><title>alloc_pages_noprof (13,911,781 samples, 0.05%)</title><rect x="21.3807%" y="325" width="0.0519%" height="15" fill="rgb(244,185,38)" fg:x="5734667960" fg:w="13911781"/><text x="21.6307%" y="335.50"></text></g><g><title>alloc_pages_mpol (13,911,781 samples, 0.05%)</title><rect x="21.3807%" y="309" width="0.0519%" height="15" fill="rgb(236,202,9)" fg:x="5734667960" fg:w="13911781"/><text x="21.6307%" y="319.50"></text></g><g><title>__alloc_frozen_pages_noprof (13,911,781 samples, 0.05%)</title><rect x="21.3807%" y="293" width="0.0519%" height="15" fill="rgb(250,229,37)" fg:x="5734667960" fg:w="13911781"/><text x="21.6307%" y="303.50"></text></g><g><title>get_page_from_freelist (4,609,351 samples, 0.02%)</title><rect x="21.4153%" y="277" width="0.0172%" height="15" fill="rgb(206,174,23)" fg:x="5743970390" fg:w="4609351"/><text x="21.6653%" y="287.50"></text></g><g><title>prep_new_page (4,609,351 samples, 0.02%)</title><rect x="21.4153%" y="261" width="0.0172%" height="15" fill="rgb(211,33,43)" fg:x="5743970390" fg:w="4609351"/><text x="21.6653%" y="271.50"></text></g><g><title>clear_page_erms (4,609,351 samples, 0.02%)</title><rect x="21.4153%" y="245" width="0.0172%" height="15" fill="rgb(245,58,50)" fg:x="5743970390" fg:w="4609351"/><text x="21.6653%" y="255.50"></text></g><g><title>__mem_cgroup_charge (4,939,575 samples, 0.02%)</title><rect x="21.4499%" y="325" width="0.0184%" height="15" fill="rgb(244,68,36)" fg:x="5753250347" fg:w="4939575"/><text x="21.6999%" y="335.50"></text></g><g><title>charge_memcg (4,939,575 samples, 0.02%)</title><rect x="21.4499%" y="309" width="0.0184%" height="15" fill="rgb(232,229,15)" fg:x="5753250347" fg:w="4939575"/><text x="21.6999%" y="319.50"></text></g><g><title>try_charge_memcg (4,939,575 samples, 0.02%)</title><rect x="21.4499%" y="293" width="0.0184%" height="15" fill="rgb(254,30,23)" fg:x="5753250347" fg:w="4939575"/><text x="21.6999%" y="303.50"></text></g><g><title>__rmqueue_pcplist (9,298,938 samples, 0.03%)</title><rect x="21.4684%" y="261" width="0.0347%" height="15" fill="rgb(235,160,14)" fg:x="5758189922" fg:w="9298938"/><text x="21.7184%" y="271.50"></text></g><g><title>do_huge_pmd_anonymous_page (219,251,577 samples, 0.82%)</title><rect x="21.3633%" y="357" width="0.8174%" height="15" fill="rgb(212,155,44)" fg:x="5730017260" fg:w="219251577"/><text x="21.6133%" y="367.50"></text></g><g><title>vma_alloc_anon_folio_pmd (200,689,096 samples, 0.75%)</title><rect x="21.4325%" y="341" width="0.7482%" height="15" fill="rgb(226,2,50)" fg:x="5748579741" fg:w="200689096"/><text x="21.6825%" y="351.50"></text></g><g><title>vma_alloc_folio_noprof (191,078,915 samples, 0.71%)</title><rect x="21.4684%" y="325" width="0.7124%" height="15" fill="rgb(234,177,6)" fg:x="5758189922" fg:w="191078915"/><text x="21.7184%" y="335.50"></text></g><g><title>alloc_pages_mpol (191,078,915 samples, 0.71%)</title><rect x="21.4684%" y="309" width="0.7124%" height="15" fill="rgb(217,24,9)" fg:x="5758189922" fg:w="191078915"/><text x="21.7184%" y="319.50"></text></g><g><title>__alloc_frozen_pages_noprof (191,078,915 samples, 0.71%)</title><rect x="21.4684%" y="293" width="0.7124%" height="15" fill="rgb(220,13,46)" fg:x="5758189922" fg:w="191078915"/><text x="21.7184%" y="303.50"></text></g><g><title>get_page_from_freelist (191,078,915 samples, 0.71%)</title><rect x="21.4684%" y="277" width="0.7124%" height="15" fill="rgb(239,221,27)" fg:x="5758189922" fg:w="191078915"/><text x="21.7184%" y="287.50"></text></g><g><title>prep_new_page (181,779,977 samples, 0.68%)</title><rect x="21.5030%" y="261" width="0.6777%" height="15" fill="rgb(222,198,25)" fg:x="5767488860" fg:w="181779977"/><text x="21.7530%" y="271.50"></text></g><g><title>clear_page_erms (181,779,977 samples, 0.68%)</title><rect x="21.5030%" y="245" width="0.6777%" height="15" fill="rgb(211,99,13)" fg:x="5767488860" fg:w="181779977"/><text x="21.7530%" y="255.50"></text></g><g><title>handle_mm_fault (233,223,594 samples, 0.87%)</title><rect x="21.3286%" y="389" width="0.8695%" height="15" fill="rgb(232,111,31)" fg:x="5720699966" fg:w="233223594"/><text x="21.5786%" y="399.50"></text></g><g><title>__handle_mm_fault (233,223,594 samples, 0.87%)</title><rect x="21.3286%" y="373" width="0.8695%" height="15" fill="rgb(245,82,37)" fg:x="5720699966" fg:w="233223594"/><text x="21.5786%" y="383.50"></text></g><g><title>pgd_none (4,654,723 samples, 0.02%)</title><rect x="22.1808%" y="357" width="0.0174%" height="15" fill="rgb(227,149,46)" fg:x="5949268837" fg:w="4654723"/><text x="22.4308%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (830,640,141 samples, 3.10%)</title><rect x="19.1181%" y="469" width="3.0969%" height="15" fill="rgb(218,36,50)" fg:x="5127800514" fg:w="830640141"/><text x="19.3681%" y="479.50">all..</text></g><g><title>core::ptr::write (522,298,041 samples, 1.95%)</title><rect x="20.2677%" y="453" width="1.9473%" height="15" fill="rgb(226,80,48)" fg:x="5436142614" fg:w="522298041"/><text x="20.5177%" y="463.50">c..</text></g><g><title>asm_exc_page_fault (237,740,689 samples, 0.89%)</title><rect x="21.3286%" y="437" width="0.8864%" height="15" fill="rgb(238,224,15)" fg:x="5720699966" fg:w="237740689"/><text x="21.5786%" y="447.50"></text></g><g><title>exc_page_fault (237,740,689 samples, 0.89%)</title><rect x="21.3286%" y="421" width="0.8864%" height="15" fill="rgb(241,136,10)" fg:x="5720699966" fg:w="237740689"/><text x="21.5786%" y="431.50"></text></g><g><title>do_user_addr_fault (237,740,689 samples, 0.89%)</title><rect x="21.3286%" y="405" width="0.8864%" height="15" fill="rgb(208,32,45)" fg:x="5720699966" fg:w="237740689"/><text x="21.5786%" y="415.50"></text></g><g><title>lock_vma_under_rcu (4,517,095 samples, 0.02%)</title><rect x="22.1981%" y="389" width="0.0168%" height="15" fill="rgb(207,135,9)" fg:x="5953923560" fg:w="4517095"/><text x="22.4481%" y="399.50"></text></g><g><title>mas_walk (4,517,095 samples, 0.02%)</title><rect x="22.1981%" y="373" width="0.0168%" height="15" fill="rgb(206,86,44)" fg:x="5953923560" fg:w="4517095"/><text x="22.4481%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;rgu_labs_term3_discrete_math::math::relation::Relation&gt; (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="469" width="0.0171%" height="15" fill="rgb(245,177,15)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;u64&gt;&gt;&gt; (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="453" width="0.0171%" height="15" fill="rgb(206,64,50)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="437" width="0.0171%" height="15" fill="rgb(234,36,40)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;u64&gt;]&gt; (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="421" width="0.0171%" height="15" fill="rgb(213,64,8)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="405" width="0.0171%" height="15" fill="rgb(210,75,36)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="389" width="0.0171%" height="15" fill="rgb(229,88,21)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="373" width="0.0171%" height="15" fill="rgb(252,204,47)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="357" width="0.0171%" height="15" fill="rgb(208,77,27)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="341" width="0.0171%" height="15" fill="rgb(221,76,26)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="325" width="0.0171%" height="15" fill="rgb(225,139,18)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="335.50"></text></g><g><title>[libc.so.6] (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="309" width="0.0171%" height="15" fill="rgb(230,137,11)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="319.50"></text></g><g><title>[libc.so.6] (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="293" width="0.0171%" height="15" fill="rgb(212,28,1)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="303.50"></text></g><g><title>__default_morecore (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="277" width="0.0171%" height="15" fill="rgb(248,164,17)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="287.50"></text></g><g><title>__sbrk (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="261" width="0.0171%" height="15" fill="rgb(222,171,42)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="271.50"></text></g><g><title>brk (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="245" width="0.0171%" height="15" fill="rgb(243,84,45)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="255.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="229" width="0.0171%" height="15" fill="rgb(252,49,23)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="239.50"></text></g><g><title>do_syscall_64 (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="213" width="0.0171%" height="15" fill="rgb(215,19,7)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="223.50"></text></g><g><title>__do_sys_brk (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="197" width="0.0171%" height="15" fill="rgb(238,81,41)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="207.50"></text></g><g><title>do_vmi_align_munmap (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="181" width="0.0171%" height="15" fill="rgb(210,199,37)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="191.50"></text></g><g><title>vms_complete_munmap_vmas (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="165" width="0.0171%" height="15" fill="rgb(244,192,49)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="175.50"></text></g><g><title>vms_clear_ptes (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="149" width="0.0171%" height="15" fill="rgb(226,211,11)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="159.50"></text></g><g><title>tlb_finish_mmu (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="133" width="0.0171%" height="15" fill="rgb(236,162,54)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="143.50"></text></g><g><title>__tlb_batch_free_encoded_pages (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="117" width="0.0171%" height="15" fill="rgb(220,229,9)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="127.50"></text></g><g><title>free_pages_and_swap_cache (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="101" width="0.0171%" height="15" fill="rgb(250,87,22)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="111.50"></text></g><g><title>folios_put_refs (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="85" width="0.0171%" height="15" fill="rgb(239,43,17)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="95.50"></text></g><g><title>__mem_cgroup_uncharge_folios (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="69" width="0.0171%" height="15" fill="rgb(231,177,25)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="79.50"></text></g><g><title>uncharge_folio (4,591,089 samples, 0.02%)</title><rect x="22.2150%" y="53" width="0.0171%" height="15" fill="rgb(219,179,1)" fg:x="5958440655" fg:w="4591089"/><text x="22.4650%" y="63.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4,720,327 samples, 0.02%)</title><rect x="22.2321%" y="469" width="0.0176%" height="15" fill="rgb(238,219,53)" fg:x="5963031744" fg:w="4720327"/><text x="22.4821%" y="479.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (37,253,350 samples, 0.14%)</title><rect x="22.4705%" y="389" width="0.1389%" height="15" fill="rgb(232,167,36)" fg:x="6026986646" fg:w="37253350"/><text x="22.7205%" y="399.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim::{{closure}} (37,253,350 samples, 0.14%)</title><rect x="22.4705%" y="373" width="0.1389%" height="15" fill="rgb(244,19,51)" fg:x="6026986646" fg:w="37253350"/><text x="22.7205%" y="383.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (37,253,350 samples, 0.14%)</title><rect x="22.4705%" y="357" width="0.1389%" height="15" fill="rgb(224,6,22)" fg:x="6026986646" fg:w="37253350"/><text x="22.7205%" y="367.50"></text></g><g><title>core::unicode::unicode_data::white_space::lookup (4,651,033 samples, 0.02%)</title><rect x="22.5921%" y="341" width="0.0173%" height="15" fill="rgb(224,145,5)" fg:x="6059588963" fg:w="4651033"/><text x="22.8421%" y="351.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (70,076,550 samples, 0.26%)</title><rect x="22.4358%" y="437" width="0.2613%" height="15" fill="rgb(234,130,49)" fg:x="6017685208" fg:w="70076550"/><text x="22.6858%" y="447.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (70,076,550 samples, 0.26%)</title><rect x="22.4358%" y="421" width="0.2613%" height="15" fill="rgb(254,6,2)" fg:x="6017685208" fg:w="70076550"/><text x="22.6858%" y="431.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (70,076,550 samples, 0.26%)</title><rect x="22.4358%" y="405" width="0.2613%" height="15" fill="rgb(208,96,46)" fg:x="6017685208" fg:w="70076550"/><text x="22.6858%" y="415.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (23,521,762 samples, 0.09%)</title><rect x="22.6094%" y="389" width="0.0877%" height="15" fill="rgb(239,3,39)" fg:x="6064239996" fg:w="23521762"/><text x="22.8594%" y="399.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (23,521,762 samples, 0.09%)</title><rect x="22.6094%" y="373" width="0.0877%" height="15" fill="rgb(233,210,1)" fg:x="6064239996" fg:w="23521762"/><text x="22.8594%" y="383.50"></text></g><g><title>core::str::validations::next_code_point_reverse (23,521,762 samples, 0.09%)</title><rect x="22.6094%" y="357" width="0.0877%" height="15" fill="rgb(244,137,37)" fg:x="6064239996" fg:w="23521762"/><text x="22.8594%" y="367.50"></text></g><g><title>core::str::validations::utf8_is_cont_byte (9,587,904 samples, 0.04%)</title><rect x="22.6614%" y="341" width="0.0357%" height="15" fill="rgb(240,136,2)" fg:x="6078173854" fg:w="9587904"/><text x="22.9114%" y="351.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (23,312,571 samples, 0.09%)</title><rect x="22.7143%" y="389" width="0.0869%" height="15" fill="rgb(239,18,37)" fg:x="6092380457" fg:w="23312571"/><text x="22.9643%" y="399.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim::{{closure}} (23,312,571 samples, 0.09%)</title><rect x="22.7143%" y="373" width="0.0869%" height="15" fill="rgb(218,185,22)" fg:x="6092380457" fg:w="23312571"/><text x="22.9643%" y="383.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (23,312,571 samples, 0.09%)</title><rect x="22.7143%" y="357" width="0.0869%" height="15" fill="rgb(225,218,4)" fg:x="6092380457" fg:w="23312571"/><text x="22.9643%" y="367.50"></text></g><g><title>core::unicode::unicode_data::white_space::lookup (13,959,662 samples, 0.05%)</title><rect x="22.7492%" y="341" width="0.0520%" height="15" fill="rgb(230,182,32)" fg:x="6101733366" fg:w="13959662"/><text x="22.9992%" y="351.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (29,447,826 samples, 0.11%)</title><rect x="22.8879%" y="373" width="0.1098%" height="15" fill="rgb(242,56,43)" fg:x="6138942721" fg:w="29447826"/><text x="23.1379%" y="383.50"></text></g><g><title>core::str::validations::next_code_point (29,447,826 samples, 0.11%)</title><rect x="22.8879%" y="357" width="0.1098%" height="15" fill="rgb(233,99,24)" fg:x="6138942721" fg:w="29447826"/><text x="23.1379%" y="367.50"></text></g><g><title>core::str::validations::utf8_acc_cont_byte (5,827,951 samples, 0.02%)</title><rect x="22.9760%" y="341" width="0.0217%" height="15" fill="rgb(234,209,42)" fg:x="6162562596" fg:w="5827951"/><text x="23.2260%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5,827,951 samples, 0.02%)</title><rect x="22.9760%" y="325" width="0.0217%" height="15" fill="rgb(227,7,12)" fg:x="6162562596" fg:w="5827951"/><text x="23.2260%" y="335.50"></text></g><g><title>irqentry_exit_to_user_mode (5,827,951 samples, 0.02%)</title><rect x="22.9760%" y="309" width="0.0217%" height="15" fill="rgb(245,203,43)" fg:x="6162562596" fg:w="5827951"/><text x="23.2260%" y="319.50"></text></g><g><title>schedule (5,827,951 samples, 0.02%)</title><rect x="22.9760%" y="293" width="0.0217%" height="15" fill="rgb(238,205,33)" fg:x="6162562596" fg:w="5827951"/><text x="23.2260%" y="303.50"></text></g><g><title>__schedule (5,827,951 samples, 0.02%)</title><rect x="22.9760%" y="277" width="0.0217%" height="15" fill="rgb(231,56,7)" fg:x="6162562596" fg:w="5827951"/><text x="23.2260%" y="287.50"></text></g><g><title>__perf_event_task_sched_out (5,827,951 samples, 0.02%)</title><rect x="22.9760%" y="261" width="0.0217%" height="15" fill="rgb(244,186,29)" fg:x="6162562596" fg:w="5827951"/><text x="23.2260%" y="271.50"></text></g><g><title>ctx_sched_out (5,827,951 samples, 0.02%)</title><rect x="22.9760%" y="245" width="0.0217%" height="15" fill="rgb(234,111,31)" fg:x="6162562596" fg:w="5827951"/><text x="23.2260%" y="255.50"></text></g><g><title>local_clock (5,827,951 samples, 0.02%)</title><rect x="22.9760%" y="229" width="0.0217%" height="15" fill="rgb(241,149,10)" fg:x="6162562596" fg:w="5827951"/><text x="23.2260%" y="239.50"></text></g><g><title>local_clock_noinstr (5,827,951 samples, 0.02%)</title><rect x="22.9760%" y="213" width="0.0217%" height="15" fill="rgb(249,206,44)" fg:x="6162562596" fg:w="5827951"/><text x="23.2260%" y="223.50"></text></g><g><title>native_sched_clock (5,827,951 samples, 0.02%)</title><rect x="22.9760%" y="197" width="0.0217%" height="15" fill="rgb(251,153,30)" fg:x="6162562596" fg:w="5827951"/><text x="23.2260%" y="207.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (150,708,063 samples, 0.56%)</title><rect x="22.4358%" y="453" width="0.5619%" height="15" fill="rgb(239,152,38)" fg:x="6017685208" fg:w="150708063"/><text x="22.6858%" y="463.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_reject (80,631,513 samples, 0.30%)</title><rect x="22.6971%" y="437" width="0.3006%" height="15" fill="rgb(249,139,47)" fg:x="6087761758" fg:w="80631513"/><text x="22.9471%" y="447.50"></text></g><g><title>core::str::pattern::Searcher::next_reject (80,631,513 samples, 0.30%)</title><rect x="22.6971%" y="421" width="0.3006%" height="15" fill="rgb(244,64,35)" fg:x="6087761758" fg:w="80631513"/><text x="22.9471%" y="431.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (80,631,513 samples, 0.30%)</title><rect x="22.6971%" y="405" width="0.3006%" height="15" fill="rgb(216,46,15)" fg:x="6087761758" fg:w="80631513"/><text x="22.9471%" y="415.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (52,700,243 samples, 0.20%)</title><rect x="22.8012%" y="389" width="0.1965%" height="15" fill="rgb(250,74,19)" fg:x="6115693028" fg:w="52700243"/><text x="23.0512%" y="399.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (223,918,473 samples, 0.83%)</title><rect x="22.2497%" y="469" width="0.8348%" height="15" fill="rgb(249,42,33)" fg:x="5967752071" fg:w="223918473"/><text x="22.4997%" y="479.50"></text></g><g><title>std::io::append_to_string (23,277,273 samples, 0.09%)</title><rect x="22.9977%" y="453" width="0.0868%" height="15" fill="rgb(242,149,17)" fg:x="6168393271" fg:w="23277273"/><text x="23.2477%" y="463.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (32,374,572 samples, 0.12%)</title><rect x="23.4021%" y="437" width="0.1207%" height="15" fill="rgb(244,29,21)" fg:x="6276846513" fg:w="32374572"/><text x="23.6521%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (160,952,707 samples, 0.60%)</title><rect x="23.2728%" y="453" width="0.6001%" height="15" fill="rgb(220,130,37)" fg:x="6242179174" fg:w="160952707"/><text x="23.5228%" y="463.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (93,910,796 samples, 0.35%)</title><rect x="23.5228%" y="437" width="0.3501%" height="15" fill="rgb(211,67,2)" fg:x="6309221085" fg:w="93910796"/><text x="23.7728%" y="447.50"></text></g><g><title>core::ptr::read (93,910,796 samples, 0.35%)</title><rect x="23.5228%" y="421" width="0.3501%" height="15" fill="rgb(235,68,52)" fg:x="6309221085" fg:w="93910796"/><text x="23.7728%" y="431.50"></text></g><g><title>__mem_cgroup_charge (5,230,274 samples, 0.02%)</title><rect x="23.8729%" y="117" width="0.0195%" height="15" fill="rgb(246,142,3)" fg:x="6403131881" fg:w="5230274"/><text x="24.1229%" y="127.50"></text></g><g><title>get_mem_cgroup_from_mm (5,230,274 samples, 0.02%)</title><rect x="23.8729%" y="101" width="0.0195%" height="15" fill="rgb(241,25,7)" fg:x="6403131881" fg:w="5230274"/><text x="24.1229%" y="111.50"></text></g><g><title>__pte_offset_map_lock (5,002,116 samples, 0.02%)</title><rect x="23.8924%" y="117" width="0.0186%" height="15" fill="rgb(242,119,39)" fg:x="6408362155" fg:w="5002116"/><text x="24.1424%" y="127.50"></text></g><g><title>_raw_spin_lock (5,002,116 samples, 0.02%)</title><rect x="23.8924%" y="101" width="0.0186%" height="15" fill="rgb(241,98,45)" fg:x="6408362155" fg:w="5002116"/><text x="24.1424%" y="111.50"></text></g><g><title>folio_add_new_anon_rmap (5,018,658 samples, 0.02%)</title><rect x="23.9111%" y="117" width="0.0187%" height="15" fill="rgb(254,28,30)" fg:x="6413364271" fg:w="5018658"/><text x="24.1611%" y="127.50"></text></g><g><title>__folio_mod_stat (5,018,658 samples, 0.02%)</title><rect x="23.9111%" y="101" width="0.0187%" height="15" fill="rgb(241,142,54)" fg:x="6413364271" fg:w="5018658"/><text x="24.1611%" y="111.50"></text></g><g><title>__lruvec_stat_mod_folio (5,018,658 samples, 0.02%)</title><rect x="23.9111%" y="85" width="0.0187%" height="15" fill="rgb(222,85,15)" fg:x="6413364271" fg:w="5018658"/><text x="24.1611%" y="95.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="357" width="0.0925%" height="15" fill="rgb(210,85,47)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="341" width="0.0925%" height="15" fill="rgb(224,206,25)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="325" width="0.0925%" height="15" fill="rgb(243,201,19)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="309" width="0.0925%" height="15" fill="rgb(236,59,4)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="293" width="0.0925%" height="15" fill="rgb(254,179,45)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="277" width="0.0925%" height="15" fill="rgb(226,14,10)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="287.50"></text></g><g><title>alloc::alloc::alloc (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="261" width="0.0925%" height="15" fill="rgb(244,27,41)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="271.50"></text></g><g><title>[libc.so.6] (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="245" width="0.0925%" height="15" fill="rgb(235,35,32)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="255.50"></text></g><g><title>[libc.so.6] (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="229" width="0.0925%" height="15" fill="rgb(218,68,31)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="239.50"></text></g><g><title>asm_exc_page_fault (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="213" width="0.0925%" height="15" fill="rgb(207,120,37)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="223.50"></text></g><g><title>exc_page_fault (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="197" width="0.0925%" height="15" fill="rgb(227,98,0)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="207.50"></text></g><g><title>do_user_addr_fault (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="181" width="0.0925%" height="15" fill="rgb(207,7,3)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="191.50"></text></g><g><title>handle_mm_fault (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="165" width="0.0925%" height="15" fill="rgb(206,98,19)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="175.50"></text></g><g><title>__handle_mm_fault (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="149" width="0.0925%" height="15" fill="rgb(217,5,26)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="159.50"></text></g><g><title>do_anonymous_page (24,820,403 samples, 0.09%)</title><rect x="23.8729%" y="133" width="0.0925%" height="15" fill="rgb(235,190,38)" fg:x="6403131881" fg:w="24820403"/><text x="24.1229%" y="143.50"></text></g><g><title>vma_alloc_folio_noprof (9,569,355 samples, 0.04%)</title><rect x="23.9298%" y="117" width="0.0357%" height="15" fill="rgb(247,86,24)" fg:x="6418382929" fg:w="9569355"/><text x="24.1798%" y="127.50"></text></g><g><title>alloc_pages_mpol (9,569,355 samples, 0.04%)</title><rect x="23.9298%" y="101" width="0.0357%" height="15" fill="rgb(205,101,16)" fg:x="6418382929" fg:w="9569355"/><text x="24.1798%" y="111.50"></text></g><g><title>__alloc_frozen_pages_noprof (9,569,355 samples, 0.04%)</title><rect x="23.9298%" y="85" width="0.0357%" height="15" fill="rgb(246,168,33)" fg:x="6418382929" fg:w="9569355"/><text x="24.1798%" y="95.50"></text></g><g><title>get_page_from_freelist (9,569,355 samples, 0.04%)</title><rect x="23.9298%" y="69" width="0.0357%" height="15" fill="rgb(231,114,1)" fg:x="6418382929" fg:w="9569355"/><text x="24.1798%" y="79.50"></text></g><g><title>__rmqueue_pcplist (4,650,593 samples, 0.02%)</title><rect x="23.9481%" y="53" width="0.0173%" height="15" fill="rgb(207,184,53)" fg:x="6423301691" fg:w="4650593"/><text x="24.1981%" y="63.50"></text></g><g><title>__del_page_from_free_list (4,650,593 samples, 0.02%)</title><rect x="23.9481%" y="37" width="0.0173%" height="15" fill="rgb(224,95,51)" fg:x="6423301691" fg:w="4650593"/><text x="24.1981%" y="47.50"></text></g><g><title>alloc::vec::from_elem (29,963,815 samples, 0.11%)</title><rect x="23.8729%" y="453" width="0.1117%" height="15" fill="rgb(212,188,45)" fg:x="6403131881" fg:w="29963815"/><text x="24.1229%" y="463.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (29,963,815 samples, 0.11%)</title><rect x="23.8729%" y="437" width="0.1117%" height="15" fill="rgb(223,154,38)" fg:x="6403131881" fg:w="29963815"/><text x="24.1229%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (29,963,815 samples, 0.11%)</title><rect x="23.8729%" y="421" width="0.1117%" height="15" fill="rgb(251,22,52)" fg:x="6403131881" fg:w="29963815"/><text x="24.1229%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29,963,815 samples, 0.11%)</title><rect x="23.8729%" y="405" width="0.1117%" height="15" fill="rgb(229,209,22)" fg:x="6403131881" fg:w="29963815"/><text x="24.1229%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29,963,815 samples, 0.11%)</title><rect x="23.8729%" y="389" width="0.1117%" height="15" fill="rgb(234,138,34)" fg:x="6403131881" fg:w="29963815"/><text x="24.1229%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::&lt;impl [T]&gt;::to_vec_in::ConvertVec&gt;::to_vec (29,963,815 samples, 0.11%)</title><rect x="23.8729%" y="373" width="0.1117%" height="15" fill="rgb(212,95,11)" fg:x="6403131881" fg:w="29963815"/><text x="24.1229%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5,143,412 samples, 0.02%)</title><rect x="23.9654%" y="357" width="0.0192%" height="15" fill="rgb(240,179,47)" fg:x="6427952284" fg:w="5143412"/><text x="24.2154%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5,143,412 samples, 0.02%)</title><rect x="23.9654%" y="341" width="0.0192%" height="15" fill="rgb(240,163,11)" fg:x="6427952284" fg:w="5143412"/><text x="24.2154%" y="351.50"></text></g><g><title>[libc.so.6] (5,143,412 samples, 0.02%)</title><rect x="23.9654%" y="325" width="0.0192%" height="15" fill="rgb(236,37,12)" fg:x="6427952284" fg:w="5143412"/><text x="24.2154%" y="335.50"></text></g><g><title>tlb_finish_mmu (13,793,560 samples, 0.05%)</title><rect x="23.9846%" y="149" width="0.0514%" height="15" fill="rgb(232,164,16)" fg:x="6433095696" fg:w="13793560"/><text x="24.2346%" y="159.50"></text></g><g><title>__tlb_batch_free_encoded_pages (13,793,560 samples, 0.05%)</title><rect x="23.9846%" y="133" width="0.0514%" height="15" fill="rgb(244,205,15)" fg:x="6433095696" fg:w="13793560"/><text x="24.2346%" y="143.50"></text></g><g><title>free_pages_and_swap_cache (13,793,560 samples, 0.05%)</title><rect x="23.9846%" y="117" width="0.0514%" height="15" fill="rgb(223,117,47)" fg:x="6433095696" fg:w="13793560"/><text x="24.2346%" y="127.50"></text></g><g><title>folios_put_refs (13,793,560 samples, 0.05%)</title><rect x="23.9846%" y="101" width="0.0514%" height="15" fill="rgb(244,107,35)" fg:x="6433095696" fg:w="13793560"/><text x="24.2346%" y="111.50"></text></g><g><title>free_unref_folios (13,793,560 samples, 0.05%)</title><rect x="23.9846%" y="85" width="0.0514%" height="15" fill="rgb(205,140,8)" fg:x="6433095696" fg:w="13793560"/><text x="24.2346%" y="95.50"></text></g><g><title>free_frozen_page_commit (4,586,245 samples, 0.02%)</title><rect x="24.0189%" y="69" width="0.0171%" height="15" fill="rgb(228,84,46)" fg:x="6442303011" fg:w="4586245"/><text x="24.2689%" y="79.50"></text></g><g><title>free_pcppages_bulk (4,586,245 samples, 0.02%)</title><rect x="24.0189%" y="53" width="0.0171%" height="15" fill="rgb(254,188,9)" fg:x="6442303011" fg:w="4586245"/><text x="24.2689%" y="63.50"></text></g><g><title>__free_one_page (4,586,245 samples, 0.02%)</title><rect x="24.0189%" y="37" width="0.0171%" height="15" fill="rgb(206,112,54)" fg:x="6442303011" fg:w="4586245"/><text x="24.2689%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(char,char)&gt;&gt; (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="453" width="0.0857%" height="15" fill="rgb(216,84,49)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="437" width="0.0857%" height="15" fill="rgb(214,194,35)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(char,char),alloc::alloc::Global&gt;&gt; (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="421" width="0.0857%" height="15" fill="rgb(249,28,3)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="405" width="0.0857%" height="15" fill="rgb(222,56,52)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(char,char)&gt;&gt; (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="389" width="0.0857%" height="15" fill="rgb(245,217,50)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="373" width="0.0857%" height="15" fill="rgb(213,201,24)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="357" width="0.0857%" height="15" fill="rgb(248,116,28)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="341" width="0.0857%" height="15" fill="rgb(219,72,43)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="325" width="0.0857%" height="15" fill="rgb(209,138,14)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="335.50"></text></g><g><title>[libc.so.6] (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="309" width="0.0857%" height="15" fill="rgb(222,18,33)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="319.50"></text></g><g><title>__munmap (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="293" width="0.0857%" height="15" fill="rgb(213,199,7)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="277" width="0.0857%" height="15" fill="rgb(250,110,10)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="287.50"></text></g><g><title>do_syscall_64 (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="261" width="0.0857%" height="15" fill="rgb(248,123,6)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="271.50"></text></g><g><title>__x64_sys_munmap (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="245" width="0.0857%" height="15" fill="rgb(206,91,31)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="255.50"></text></g><g><title>__vm_munmap (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="229" width="0.0857%" height="15" fill="rgb(211,154,13)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="239.50"></text></g><g><title>do_vmi_munmap (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="213" width="0.0857%" height="15" fill="rgb(225,148,7)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="223.50"></text></g><g><title>do_vmi_align_munmap (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="197" width="0.0857%" height="15" fill="rgb(220,160,43)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="207.50"></text></g><g><title>vms_complete_munmap_vmas (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="181" width="0.0857%" height="15" fill="rgb(213,52,39)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="191.50"></text></g><g><title>vms_clear_ptes (22,978,305 samples, 0.09%)</title><rect x="23.9846%" y="165" width="0.0857%" height="15" fill="rgb(243,137,7)" fg:x="6433095696" fg:w="22978305"/><text x="24.2346%" y="175.50"></text></g><g><title>unmap_vmas (9,184,745 samples, 0.03%)</title><rect x="24.0360%" y="149" width="0.0342%" height="15" fill="rgb(230,79,13)" fg:x="6446889256" fg:w="9184745"/><text x="24.2860%" y="159.50"></text></g><g><title>unmap_page_range (9,184,745 samples, 0.03%)</title><rect x="24.0360%" y="133" width="0.0342%" height="15" fill="rgb(247,105,23)" fg:x="6446889256" fg:w="9184745"/><text x="24.2860%" y="143.50"></text></g><g><title>folio_remove_rmap_ptes (9,184,745 samples, 0.03%)</title><rect x="24.0360%" y="117" width="0.0342%" height="15" fill="rgb(223,179,41)" fg:x="6446889256" fg:w="9184745"/><text x="24.2860%" y="127.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (245,846,518 samples, 0.92%)</title><rect x="24.1392%" y="437" width="0.9166%" height="15" fill="rgb(218,9,34)" fg:x="6474553365" fg:w="245846518"/><text x="24.3892%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (454,770,133 samples, 1.70%)</title><rect x="29.1630%" y="293" width="1.6955%" height="15" fill="rgb(222,106,8)" fg:x="7822035202" fg:w="454770133"/><text x="29.4130%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,036,598,209 samples, 3.86%)</title><rect x="27.4602%" y="309" width="3.8648%" height="15" fill="rgb(211,220,0)" fg:x="7365309004" fg:w="1036598209"/><text x="27.7102%" y="319.50">&lt;cor..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (125,101,878 samples, 0.47%)</title><rect x="30.8585%" y="293" width="0.4664%" height="15" fill="rgb(229,52,16)" fg:x="8276805335" fg:w="125101878"/><text x="31.1085%" y="303.50"></text></g><g><title>asm_common_interrupt (4,566,257 samples, 0.02%)</title><rect x="32.8992%" y="293" width="0.0170%" height="15" fill="rgb(212,155,18)" fg:x="8824138563" fg:w="4566257"/><text x="33.1492%" y="303.50"></text></g><g><title>common_interrupt (4,566,257 samples, 0.02%)</title><rect x="32.8992%" y="277" width="0.0170%" height="15" fill="rgb(242,21,14)" fg:x="8824138563" fg:w="4566257"/><text x="33.1492%" y="287.50"></text></g><g><title>__common_interrupt (4,566,257 samples, 0.02%)</title><rect x="32.8992%" y="261" width="0.0170%" height="15" fill="rgb(222,19,48)" fg:x="8824138563" fg:w="4566257"/><text x="33.1492%" y="271.50"></text></g><g><title>handle_edge_irq (4,566,257 samples, 0.02%)</title><rect x="32.8992%" y="245" width="0.0170%" height="15" fill="rgb(232,45,27)" fg:x="8824138563" fg:w="4566257"/><text x="33.1492%" y="255.50"></text></g><g><title>irq_chip_ack_parent (4,566,257 samples, 0.02%)</title><rect x="32.8992%" y="229" width="0.0170%" height="15" fill="rgb(249,103,42)" fg:x="8824138563" fg:w="4566257"/><text x="33.1492%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (935,847,805 samples, 3.49%)</title><rect x="32.9162%" y="293" width="3.4891%" height="15" fill="rgb(246,81,33)" fg:x="8828704820" fg:w="935847805"/><text x="33.1662%" y="303.50">cor..</text></g><g><title>hashbrown::map::make_hash (3,691,853,038 samples, 13.76%)</title><rect x="25.3664%" y="389" width="13.7644%" height="15" fill="rgb(252,33,42)" fg:x="6803727605" fg:w="3691853038"/><text x="25.6164%" y="399.50">hashbrown::map::make_..</text></g><g><title>core::hash::BuildHasher::hash_one (3,691,853,038 samples, 13.76%)</title><rect x="25.3664%" y="373" width="13.7644%" height="15" fill="rgb(209,212,41)" fg:x="6803727605" fg:w="3691853038"/><text x="25.6164%" y="383.50">core::hash::BuildHash..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (3,691,853,038 samples, 13.76%)</title><rect x="25.3664%" y="357" width="13.7644%" height="15" fill="rgb(207,154,6)" fg:x="6803727605" fg:w="3691853038"/><text x="25.6164%" y="367.50">&lt;std::hash::random::D..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (3,691,853,038 samples, 13.76%)</title><rect x="25.3664%" y="341" width="13.7644%" height="15" fill="rgb(223,64,47)" fg:x="6803727605" fg:w="3691853038"/><text x="25.6164%" y="351.50">&lt;core::hash::sip::Sip..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (3,691,853,038 samples, 13.76%)</title><rect x="25.3664%" y="325" width="13.7644%" height="15" fill="rgb(211,161,38)" fg:x="6803727605" fg:w="3691853038"/><text x="25.6164%" y="335.50">&lt;core::hash::sip::Has..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,093,673,430 samples, 7.81%)</title><rect x="31.3250%" y="309" width="7.8059%" height="15" fill="rgb(219,138,40)" fg:x="8401907213" fg:w="2093673430"/><text x="31.5750%" y="319.50">&lt;core::hash..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (731,028,018 samples, 2.73%)</title><rect x="36.4053%" y="293" width="2.7255%" height="15" fill="rgb(241,228,46)" fg:x="9764552625" fg:w="731028018"/><text x="36.6553%" y="303.50">co..</text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (169,333,165 samples, 0.63%)</title><rect x="39.5062%" y="341" width="0.6313%" height="15" fill="rgb(223,209,38)" fg:x="10596251067" fg:w="169333165"/><text x="39.7562%" y="351.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (169,333,165 samples, 0.63%)</title><rect x="39.5062%" y="325" width="0.6313%" height="15" fill="rgb(236,164,45)" fg:x="10596251067" fg:w="169333165"/><text x="39.7562%" y="335.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (27,581,948 samples, 0.10%)</title><rect x="40.0347%" y="309" width="0.1028%" height="15" fill="rgb(231,15,5)" fg:x="10738002284" fg:w="27581948"/><text x="40.2847%" y="319.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u16&gt;::trailing_zeros (27,581,948 samples, 0.10%)</title><rect x="40.0347%" y="293" width="0.1028%" height="15" fill="rgb(252,35,15)" fg:x="10738002284" fg:w="27581948"/><text x="40.2847%" y="303.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="341" width="0.0174%" height="15" fill="rgb(248,181,18)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="325" width="0.0174%" height="15" fill="rgb(233,39,42)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="335.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="309" width="0.0174%" height="15" fill="rgb(238,110,33)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="319.50"></text></g><g><title>hrtimer_interrupt (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="293" width="0.0174%" height="15" fill="rgb(233,195,10)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="303.50"></text></g><g><title>__hrtimer_run_queues (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="277" width="0.0174%" height="15" fill="rgb(254,105,3)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="287.50"></text></g><g><title>tick_nohz_handler (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="261" width="0.0174%" height="15" fill="rgb(221,225,9)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="271.50"></text></g><g><title>update_process_times (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="245" width="0.0174%" height="15" fill="rgb(224,227,45)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="255.50"></text></g><g><title>sched_tick (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="229" width="0.0174%" height="15" fill="rgb(229,198,43)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="239.50"></text></g><g><title>perf_event_task_tick (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="213" width="0.0174%" height="15" fill="rgb(206,209,35)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="223.50"></text></g><g><title>perf_adjust_freq_unthr_context (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="197" width="0.0174%" height="15" fill="rgb(245,195,53)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="207.50"></text></g><g><title>perf_adjust_freq_unthr_events (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="181" width="0.0174%" height="15" fill="rgb(240,92,26)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="191.50"></text></g><g><title>perf_event_update_userpage (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="165" width="0.0174%" height="15" fill="rgb(207,40,23)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="175.50"></text></g><g><title>arch_perf_update_userpage (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="149" width="0.0174%" height="15" fill="rgb(223,111,35)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="159.50"></text></g><g><title>srso_alias_return_thunk (4,654,134 samples, 0.02%)</title><rect x="40.1375%" y="133" width="0.0174%" height="15" fill="rgb(229,147,28)" fg:x="10765584232" fg:w="4654134"/><text x="40.3875%" y="143.50"></text></g><g><title>core::intrinsics::likely (4,636,899 samples, 0.02%)</title><rect x="40.1549%" y="341" width="0.0173%" height="15" fill="rgb(211,29,28)" fg:x="10770238366" fg:w="4636899"/><text x="40.4049%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,636,899 samples, 0.02%)</title><rect x="40.1549%" y="325" width="0.0173%" height="15" fill="rgb(228,72,33)" fg:x="10770238366" fg:w="4636899"/><text x="40.4049%" y="335.50"></text></g><g><title>irqentry_exit_to_user_mode (4,636,899 samples, 0.02%)</title><rect x="40.1549%" y="309" width="0.0173%" height="15" fill="rgb(205,214,31)" fg:x="10770238366" fg:w="4636899"/><text x="40.4049%" y="319.50"></text></g><g><title>__rseq_handle_notify_resume (4,636,899 samples, 0.02%)</title><rect x="40.1549%" y="293" width="0.0173%" height="15" fill="rgb(224,111,15)" fg:x="10770238366" fg:w="4636899"/><text x="40.4049%" y="303.50"></text></g><g><title>hashbrown::control::group::sse2::Group::load (23,185,944 samples, 0.09%)</title><rect x="40.1721%" y="341" width="0.0864%" height="15" fill="rgb(253,21,26)" fg:x="10774875265" fg:w="23185944"/><text x="40.4221%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (23,185,944 samples, 0.09%)</title><rect x="40.1721%" y="325" width="0.0864%" height="15" fill="rgb(245,139,43)" fg:x="10774875265" fg:w="23185944"/><text x="40.4221%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23,185,944 samples, 0.09%)</title><rect x="40.1721%" y="309" width="0.0864%" height="15" fill="rgb(252,170,7)" fg:x="10774875265" fg:w="23185944"/><text x="40.4221%" y="319.50"></text></g><g><title>hashbrown::control::group::sse2::Group::match_tag (111,123,234 samples, 0.41%)</title><rect x="40.2586%" y="341" width="0.4143%" height="15" fill="rgb(231,118,14)" fg:x="10798061209" fg:w="111123234"/><text x="40.5086%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (111,123,234 samples, 0.41%)</title><rect x="40.2586%" y="325" width="0.4143%" height="15" fill="rgb(238,83,0)" fg:x="10798061209" fg:w="111123234"/><text x="40.5086%" y="335.50"></text></g><g><title>perf_event_task_tick (4,595,373 samples, 0.02%)</title><rect x="41.6753%" y="197" width="0.0171%" height="15" fill="rgb(221,39,39)" fg:x="11178038436" fg:w="4595373"/><text x="41.9253%" y="207.50"></text></g><g><title>perf_adjust_freq_unthr_context (4,595,373 samples, 0.02%)</title><rect x="41.6753%" y="181" width="0.0171%" height="15" fill="rgb(222,119,46)" fg:x="11178038436" fg:w="4595373"/><text x="41.9253%" y="191.50"></text></g><g><title>perf_adjust_freq_unthr_events (4,595,373 samples, 0.02%)</title><rect x="41.6753%" y="165" width="0.0171%" height="15" fill="rgb(222,165,49)" fg:x="11178038436" fg:w="4595373"/><text x="41.9253%" y="175.50"></text></g><g><title>perf_event_update_userpage (4,595,373 samples, 0.02%)</title><rect x="41.6753%" y="149" width="0.0171%" height="15" fill="rgb(219,113,52)" fg:x="11178038436" fg:w="4595373"/><text x="41.9253%" y="159.50"></text></g><g><title>arch_perf_update_userpage (4,595,373 samples, 0.02%)</title><rect x="41.6753%" y="133" width="0.0171%" height="15" fill="rgb(214,7,15)" fg:x="11178038436" fg:w="4595373"/><text x="41.9253%" y="143.50"></text></g><g><title>hashbrown::control::tag::Tag::full (278,043,157 samples, 1.04%)</title><rect x="40.6729%" y="341" width="1.0366%" height="15" fill="rgb(235,32,4)" fg:x="10909184443" fg:w="278043157"/><text x="40.9229%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (9,189,164 samples, 0.03%)</title><rect x="41.6753%" y="325" width="0.0343%" height="15" fill="rgb(238,90,54)" fg:x="11178038436" fg:w="9189164"/><text x="41.9253%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (9,189,164 samples, 0.03%)</title><rect x="41.6753%" y="309" width="0.0343%" height="15" fill="rgb(213,208,19)" fg:x="11178038436" fg:w="9189164"/><text x="41.9253%" y="319.50"></text></g><g><title>__sysvec_apic_timer_interrupt (9,189,164 samples, 0.03%)</title><rect x="41.6753%" y="293" width="0.0343%" height="15" fill="rgb(233,156,4)" fg:x="11178038436" fg:w="9189164"/><text x="41.9253%" y="303.50"></text></g><g><title>hrtimer_interrupt (9,189,164 samples, 0.03%)</title><rect x="41.6753%" y="277" width="0.0343%" height="15" fill="rgb(207,194,5)" fg:x="11178038436" fg:w="9189164"/><text x="41.9253%" y="287.50"></text></g><g><title>__hrtimer_run_queues (9,189,164 samples, 0.03%)</title><rect x="41.6753%" y="261" width="0.0343%" height="15" fill="rgb(206,111,30)" fg:x="11178038436" fg:w="9189164"/><text x="41.9253%" y="271.50"></text></g><g><title>tick_nohz_handler (9,189,164 samples, 0.03%)</title><rect x="41.6753%" y="245" width="0.0343%" height="15" fill="rgb(243,70,54)" fg:x="11178038436" fg:w="9189164"/><text x="41.9253%" y="255.50"></text></g><g><title>update_process_times (9,189,164 samples, 0.03%)</title><rect x="41.6753%" y="229" width="0.0343%" height="15" fill="rgb(242,28,8)" fg:x="11178038436" fg:w="9189164"/><text x="41.9253%" y="239.50"></text></g><g><title>sched_tick (9,189,164 samples, 0.03%)</title><rect x="41.6753%" y="213" width="0.0343%" height="15" fill="rgb(219,106,18)" fg:x="11178038436" fg:w="9189164"/><text x="41.9253%" y="223.50"></text></g><g><title>task_tick_fair (4,593,791 samples, 0.02%)</title><rect x="41.6924%" y="197" width="0.0171%" height="15" fill="rgb(244,222,10)" fg:x="11182633809" fg:w="4593791"/><text x="41.9424%" y="207.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (45,247,780 samples, 0.17%)</title><rect x="41.7095%" y="325" width="0.1687%" height="15" fill="rgb(236,179,52)" fg:x="11187227600" fg:w="45247780"/><text x="41.9595%" y="335.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (45,247,780 samples, 0.17%)</title><rect x="41.7095%" y="309" width="0.1687%" height="15" fill="rgb(213,23,39)" fg:x="11187227600" fg:w="45247780"/><text x="41.9595%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (45,247,780 samples, 0.17%)</title><rect x="41.7095%" y="293" width="0.1687%" height="15" fill="rgb(238,48,10)" fg:x="11187227600" fg:w="45247780"/><text x="41.9595%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::eq (45,247,780 samples, 0.17%)</title><rect x="41.7095%" y="277" width="0.1687%" height="15" fill="rgb(251,196,23)" fg:x="11187227600" fg:w="45247780"/><text x="41.9595%" y="287.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::relation::Relation::index_of (4,900,335,389 samples, 18.27%)</title><rect x="24.0703%" y="453" width="18.2700%" height="15" fill="rgb(250,152,24)" fg:x="6456074001" fg:w="4900335389"/><text x="24.3203%" y="463.50">rgu_labs_term3_discrete_math..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4,636,009,507 samples, 17.28%)</title><rect x="25.0558%" y="437" width="17.2845%" height="15" fill="rgb(209,150,17)" fg:x="6720399883" fg:w="4636009507"/><text x="25.3058%" y="447.50">std::collections::hash::map..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4,636,009,507 samples, 17.28%)</title><rect x="25.0558%" y="421" width="17.2845%" height="15" fill="rgb(234,202,34)" fg:x="6720399883" fg:w="4636009507"/><text x="25.3058%" y="431.50">hashbrown::map::HashMap&lt;K,V..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4,552,681,785 samples, 16.97%)</title><rect x="25.3664%" y="405" width="16.9738%" height="15" fill="rgb(253,148,53)" fg:x="6803727605" fg:w="4552681785"/><text x="25.6164%" y="415.50">hashbrown::map::HashMap&lt;K,..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (860,828,747 samples, 3.21%)</title><rect x="39.1308%" y="389" width="3.2094%" height="15" fill="rgb(218,129,16)" fg:x="10495580643" fg:w="860828747"/><text x="39.3808%" y="399.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (860,828,747 samples, 3.21%)</title><rect x="39.1308%" y="373" width="3.2094%" height="15" fill="rgb(216,85,19)" fg:x="10495580643" fg:w="860828747"/><text x="39.3808%" y="383.50">has..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (860,828,747 samples, 3.21%)</title><rect x="39.1308%" y="357" width="3.2094%" height="15" fill="rgb(235,228,7)" fg:x="10495580643" fg:w="860828747"/><text x="39.3808%" y="367.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (169,181,790 samples, 0.63%)</title><rect x="41.7095%" y="341" width="0.6308%" height="15" fill="rgb(245,175,0)" fg:x="11187227600" fg:w="169181790"/><text x="41.9595%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (123,934,010 samples, 0.46%)</title><rect x="41.8782%" y="325" width="0.4621%" height="15" fill="rgb(208,168,36)" fg:x="11232475380" fg:w="123934010"/><text x="42.1282%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (123,934,010 samples, 0.46%)</title><rect x="41.8782%" y="309" width="0.4621%" height="15" fill="rgb(246,171,24)" fg:x="11232475380" fg:w="123934010"/><text x="42.1282%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (123,934,010 samples, 0.46%)</title><rect x="41.8782%" y="293" width="0.4621%" height="15" fill="rgb(215,142,24)" fg:x="11232475380" fg:w="123934010"/><text x="42.1282%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (22,956,562 samples, 0.09%)</title><rect x="42.9536%" y="389" width="0.0856%" height="15" fill="rgb(250,187,7)" fg:x="11520913662" fg:w="22956562"/><text x="43.2036%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (22,956,562 samples, 0.09%)</title><rect x="42.9536%" y="373" width="0.0856%" height="15" fill="rgb(228,66,33)" fg:x="11520913662" fg:w="22956562"/><text x="43.2036%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (22,956,562 samples, 0.09%)</title><rect x="42.9536%" y="357" width="0.0856%" height="15" fill="rgb(234,215,21)" fg:x="11520913662" fg:w="22956562"/><text x="43.2036%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (22,956,562 samples, 0.09%)</title><rect x="42.9536%" y="341" width="0.0856%" height="15" fill="rgb(222,191,20)" fg:x="11520913662" fg:w="22956562"/><text x="43.2036%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (40,048,537 samples, 0.15%)</title><rect x="42.8899%" y="421" width="0.1493%" height="15" fill="rgb(245,79,54)" fg:x="11503823602" fg:w="40048537"/><text x="43.1399%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (40,048,537 samples, 0.15%)</title><rect x="42.8899%" y="405" width="0.1493%" height="15" fill="rgb(240,10,37)" fg:x="11503823602" fg:w="40048537"/><text x="43.1399%" y="415.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::relation::Relation::new (5,447,126,132 samples, 20.31%)</title><rect x="23.0845%" y="469" width="20.3086%" height="15" fill="rgb(214,192,32)" fg:x="6191670544" fg:w="5447126132"/><text x="23.3345%" y="479.50">rgu_labs_term3_discrete_math::ma..</text></g><g><title>rgu_labs_term3_discrete_math::math::relation::Relation::set_pair (282,387,286 samples, 1.05%)</title><rect x="42.3403%" y="453" width="1.0528%" height="15" fill="rgb(209,36,54)" fg:x="11356409390" fg:w="282387286"/><text x="42.5903%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (134,973,074 samples, 0.50%)</title><rect x="42.8899%" y="437" width="0.5032%" height="15" fill="rgb(220,10,11)" fg:x="11503823602" fg:w="134973074"/><text x="43.1399%" y="447.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (94,924,537 samples, 0.35%)</title><rect x="43.0392%" y="421" width="0.3539%" height="15" fill="rgb(221,106,17)" fg:x="11543872139" fg:w="94924537"/><text x="43.2892%" y="431.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (94,924,537 samples, 0.35%)</title><rect x="43.0392%" y="405" width="0.3539%" height="15" fill="rgb(251,142,44)" fg:x="11543872139" fg:w="94924537"/><text x="43.2892%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (46,488,929 samples, 0.17%)</title><rect x="43.3931%" y="437" width="0.1733%" height="15" fill="rgb(238,13,15)" fg:x="11638796676" fg:w="46488929"/><text x="43.6431%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (46,488,929 samples, 0.17%)</title><rect x="43.3931%" y="421" width="0.1733%" height="15" fill="rgb(208,107,27)" fg:x="11638796676" fg:w="46488929"/><text x="43.6431%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (37,186,890 samples, 0.14%)</title><rect x="43.4278%" y="405" width="0.1386%" height="15" fill="rgb(205,136,37)" fg:x="11648098715" fg:w="37186890"/><text x="43.6778%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (37,186,890 samples, 0.14%)</title><rect x="43.4278%" y="389" width="0.1386%" height="15" fill="rgb(250,205,27)" fg:x="11648098715" fg:w="37186890"/><text x="43.6778%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (37,186,890 samples, 0.14%)</title><rect x="43.4278%" y="373" width="0.1386%" height="15" fill="rgb(210,80,43)" fg:x="11648098715" fg:w="37186890"/><text x="43.6778%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (37,186,890 samples, 0.14%)</title><rect x="43.4278%" y="357" width="0.1386%" height="15" fill="rgb(247,160,36)" fg:x="11648098715" fg:w="37186890"/><text x="43.6778%" y="367.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (1,438,687,797 samples, 5.36%)</title><rect x="60.0402%" y="405" width="5.3639%" height="15" fill="rgb(234,13,49)" fg:x="16103841412" fg:w="1438687797"/><text x="60.2902%" y="415.50">&lt;core::..</text></g><g><title>__perf_event_task_sched_out (4,640,010 samples, 0.02%)</title><rect x="65.4041%" y="341" width="0.0173%" height="15" fill="rgb(234,122,0)" fg:x="17542529209" fg:w="4640010"/><text x="65.6541%" y="351.50"></text></g><g><title>ctx_sched_out (4,640,010 samples, 0.02%)</title><rect x="65.4041%" y="325" width="0.0173%" height="15" fill="rgb(207,146,38)" fg:x="17542529209" fg:w="4640010"/><text x="65.6541%" y="335.50"></text></g><g><title>__pmu_ctx_sched_out (4,640,010 samples, 0.02%)</title><rect x="65.4041%" y="309" width="0.0173%" height="15" fill="rgb(207,177,25)" fg:x="17542529209" fg:w="4640010"/><text x="65.6541%" y="319.50"></text></g><g><title>merge_sched_in (4,666,694 samples, 0.02%)</title><rect x="65.4214%" y="277" width="0.0174%" height="15" fill="rgb(211,178,42)" fg:x="17547169219" fg:w="4666694"/><text x="65.6714%" y="287.50"></text></g><g><title>event_sched_in (4,666,694 samples, 0.02%)</title><rect x="65.4214%" y="261" width="0.0174%" height="15" fill="rgb(230,69,54)" fg:x="17547169219" fg:w="4666694"/><text x="65.6714%" y="271.50"></text></g><g><title>perf_ibs_add (4,664,885 samples, 0.02%)</title><rect x="65.4214%" y="245" width="0.0174%" height="15" fill="rgb(214,135,41)" fg:x="17547171028" fg:w="4664885"/><text x="65.6714%" y="255.50"></text></g><g><title>perf_event_update_userpage (4,664,885 samples, 0.02%)</title><rect x="65.4214%" y="229" width="0.0174%" height="15" fill="rgb(237,67,25)" fg:x="17547171028" fg:w="4664885"/><text x="65.6714%" y="239.50"></text></g><g><title>irqentry_exit_to_user_mode (9,308,923 samples, 0.03%)</title><rect x="65.4041%" y="389" width="0.0347%" height="15" fill="rgb(222,189,50)" fg:x="17542529209" fg:w="9308923"/><text x="65.6541%" y="399.50"></text></g><g><title>schedule (9,308,923 samples, 0.03%)</title><rect x="65.4041%" y="373" width="0.0347%" height="15" fill="rgb(245,148,34)" fg:x="17542529209" fg:w="9308923"/><text x="65.6541%" y="383.50"></text></g><g><title>__schedule (9,308,923 samples, 0.03%)</title><rect x="65.4041%" y="357" width="0.0347%" height="15" fill="rgb(222,29,6)" fg:x="17542529209" fg:w="9308923"/><text x="65.6541%" y="367.50"></text></g><g><title>finish_task_switch.isra.0 (4,668,913 samples, 0.02%)</title><rect x="65.4214%" y="341" width="0.0174%" height="15" fill="rgb(221,189,43)" fg:x="17547169219" fg:w="4668913"/><text x="65.6714%" y="351.50"></text></g><g><title>__perf_event_task_sched_in (4,668,913 samples, 0.02%)</title><rect x="65.4214%" y="325" width="0.0174%" height="15" fill="rgb(207,36,27)" fg:x="17547169219" fg:w="4668913"/><text x="65.6714%" y="335.50"></text></g><g><title>ctx_sched_in (4,668,913 samples, 0.02%)</title><rect x="65.4214%" y="309" width="0.0174%" height="15" fill="rgb(217,90,24)" fg:x="17547169219" fg:w="4668913"/><text x="65.6714%" y="319.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (4,668,913 samples, 0.02%)</title><rect x="65.4214%" y="293" width="0.0174%" height="15" fill="rgb(224,66,35)" fg:x="17547169219" fg:w="4668913"/><text x="65.6714%" y="303.50"></text></g><g><title>__hrtimer_run_queues (4,648,194 samples, 0.02%)</title><rect x="65.4388%" y="341" width="0.0173%" height="15" fill="rgb(221,13,50)" fg:x="17551838132" fg:w="4648194"/><text x="65.6888%" y="351.50"></text></g><g><title>tick_nohz_handler (4,648,194 samples, 0.02%)</title><rect x="65.4388%" y="325" width="0.0173%" height="15" fill="rgb(236,68,49)" fg:x="17551838132" fg:w="4648194"/><text x="65.6888%" y="335.50"></text></g><g><title>update_process_times (4,648,194 samples, 0.02%)</title><rect x="65.4388%" y="309" width="0.0173%" height="15" fill="rgb(229,146,28)" fg:x="17551838132" fg:w="4648194"/><text x="65.6888%" y="319.50"></text></g><g><title>sched_tick (4,648,194 samples, 0.02%)</title><rect x="65.4388%" y="293" width="0.0173%" height="15" fill="rgb(225,31,38)" fg:x="17551838132" fg:w="4648194"/><text x="65.6888%" y="303.50"></text></g><g><title>task_tick_fair (4,648,194 samples, 0.02%)</title><rect x="65.4388%" y="277" width="0.0173%" height="15" fill="rgb(250,208,3)" fg:x="17551838132" fg:w="4648194"/><text x="65.6888%" y="287.50"></text></g><g><title>update_load_avg (4,648,194 samples, 0.02%)</title><rect x="65.4388%" y="261" width="0.0173%" height="15" fill="rgb(246,54,23)" fg:x="17551838132" fg:w="4648194"/><text x="65.6888%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (19,146,647 samples, 0.07%)</title><rect x="65.4041%" y="405" width="0.0714%" height="15" fill="rgb(243,76,11)" fg:x="17542529209" fg:w="19146647"/><text x="65.6541%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (9,837,724 samples, 0.04%)</title><rect x="65.4388%" y="389" width="0.0367%" height="15" fill="rgb(245,21,50)" fg:x="17551838132" fg:w="9837724"/><text x="65.6888%" y="399.50"></text></g><g><title>__sysvec_apic_timer_interrupt (9,837,724 samples, 0.04%)</title><rect x="65.4388%" y="373" width="0.0367%" height="15" fill="rgb(228,9,43)" fg:x="17551838132" fg:w="9837724"/><text x="65.6888%" y="383.50"></text></g><g><title>hrtimer_interrupt (9,837,724 samples, 0.04%)</title><rect x="65.4388%" y="357" width="0.0367%" height="15" fill="rgb(208,100,47)" fg:x="17551838132" fg:w="9837724"/><text x="65.6888%" y="367.50"></text></g><g><title>hrtimer_update_next_event (5,189,530 samples, 0.02%)</title><rect x="65.4561%" y="341" width="0.0193%" height="15" fill="rgb(232,26,8)" fg:x="17556486326" fg:w="5189530"/><text x="65.7061%" y="351.50"></text></g><g><title>asm_sysvec_reschedule_ipi (4,699,644 samples, 0.02%)</title><rect x="65.4755%" y="405" width="0.0175%" height="15" fill="rgb(216,166,38)" fg:x="17561675856" fg:w="4699644"/><text x="65.7255%" y="415.50"></text></g><g><title>irqentry_exit_to_user_mode (4,699,644 samples, 0.02%)</title><rect x="65.4755%" y="389" width="0.0175%" height="15" fill="rgb(251,202,51)" fg:x="17561675856" fg:w="4699644"/><text x="65.7255%" y="399.50"></text></g><g><title>schedule (4,699,644 samples, 0.02%)</title><rect x="65.4755%" y="373" width="0.0175%" height="15" fill="rgb(254,216,34)" fg:x="17561675856" fg:w="4699644"/><text x="65.7255%" y="383.50"></text></g><g><title>__schedule (4,699,644 samples, 0.02%)</title><rect x="65.4755%" y="357" width="0.0175%" height="15" fill="rgb(251,32,27)" fg:x="17561675856" fg:w="4699644"/><text x="65.7255%" y="367.50"></text></g><g><title>finish_task_switch.isra.0 (4,699,644 samples, 0.02%)</title><rect x="65.4755%" y="341" width="0.0175%" height="15" fill="rgb(208,127,28)" fg:x="17561675856" fg:w="4699644"/><text x="65.7255%" y="351.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,697,099 samples, 0.02%)</title><rect x="65.4755%" y="325" width="0.0175%" height="15" fill="rgb(224,137,22)" fg:x="17561678401" fg:w="4697099"/><text x="65.7255%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,697,099 samples, 0.02%)</title><rect x="65.4755%" y="309" width="0.0175%" height="15" fill="rgb(254,70,32)" fg:x="17561678401" fg:w="4697099"/><text x="65.7255%" y="319.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,697,099 samples, 0.02%)</title><rect x="65.4755%" y="293" width="0.0175%" height="15" fill="rgb(229,75,37)" fg:x="17561678401" fg:w="4697099"/><text x="65.7255%" y="303.50"></text></g><g><title>hrtimer_interrupt (4,697,099 samples, 0.02%)</title><rect x="65.4755%" y="277" width="0.0175%" height="15" fill="rgb(252,64,23)" fg:x="17561678401" fg:w="4697099"/><text x="65.7255%" y="287.50"></text></g><g><title>__hrtimer_run_queues (4,697,099 samples, 0.02%)</title><rect x="65.4755%" y="261" width="0.0175%" height="15" fill="rgb(232,162,48)" fg:x="17561678401" fg:w="4697099"/><text x="65.7255%" y="271.50"></text></g><g><title>tick_nohz_handler (4,697,099 samples, 0.02%)</title><rect x="65.4755%" y="245" width="0.0175%" height="15" fill="rgb(246,160,12)" fg:x="17561678401" fg:w="4697099"/><text x="65.7255%" y="255.50"></text></g><g><title>update_process_times (4,697,099 samples, 0.02%)</title><rect x="65.4755%" y="229" width="0.0175%" height="15" fill="rgb(247,166,0)" fg:x="17561678401" fg:w="4697099"/><text x="65.7255%" y="239.50"></text></g><g><title>account_system_index_time (4,697,099 samples, 0.02%)</title><rect x="65.4755%" y="213" width="0.0175%" height="15" fill="rgb(249,219,21)" fg:x="17561678401" fg:w="4697099"/><text x="65.7255%" y="223.50"></text></g><g><title>ctx_sched_in (5,019,667 samples, 0.02%)</title><rect x="68.3495%" y="293" width="0.0187%" height="15" fill="rgb(205,209,3)" fg:x="18332546224" fg:w="5019667"/><text x="68.5995%" y="303.50"></text></g><g><title>visit_groups_merge.constprop.0.isra.0 (5,019,667 samples, 0.02%)</title><rect x="68.3495%" y="277" width="0.0187%" height="15" fill="rgb(243,44,1)" fg:x="18332546224" fg:w="5019667"/><text x="68.5995%" y="287.50"></text></g><g><title>merge_sched_in (5,019,667 samples, 0.02%)</title><rect x="68.3495%" y="261" width="0.0187%" height="15" fill="rgb(206,159,16)" fg:x="18332546224" fg:w="5019667"/><text x="68.5995%" y="271.50"></text></g><g><title>event_sched_in (5,019,667 samples, 0.02%)</title><rect x="68.3495%" y="245" width="0.0187%" height="15" fill="rgb(244,77,30)" fg:x="18332546224" fg:w="5019667"/><text x="68.5995%" y="255.50"></text></g><g><title>perf_ibs_add (5,019,667 samples, 0.02%)</title><rect x="68.3495%" y="229" width="0.0187%" height="15" fill="rgb(218,69,12)" fg:x="18332546224" fg:w="5019667"/><text x="68.5995%" y="239.50"></text></g><g><title>perf_event_update_userpage (5,019,667 samples, 0.02%)</title><rect x="68.3495%" y="213" width="0.0187%" height="15" fill="rgb(212,87,7)" fg:x="18332546224" fg:w="5019667"/><text x="68.5995%" y="223.50"></text></g><g><title>srso_alias_return_thunk (5,019,235 samples, 0.02%)</title><rect x="68.3495%" y="197" width="0.0187%" height="15" fill="rgb(245,114,25)" fg:x="18332546656" fg:w="5019235"/><text x="68.5995%" y="207.50"></text></g><g><title>irqentry_exit_to_user_mode (5,022,219 samples, 0.02%)</title><rect x="68.3495%" y="373" width="0.0187%" height="15" fill="rgb(210,61,42)" fg:x="18332546224" fg:w="5022219"/><text x="68.5995%" y="383.50"></text></g><g><title>schedule (5,022,219 samples, 0.02%)</title><rect x="68.3495%" y="357" width="0.0187%" height="15" fill="rgb(211,52,33)" fg:x="18332546224" fg:w="5022219"/><text x="68.5995%" y="367.50"></text></g><g><title>__schedule (5,022,219 samples, 0.02%)</title><rect x="68.3495%" y="341" width="0.0187%" height="15" fill="rgb(234,58,33)" fg:x="18332546224" fg:w="5022219"/><text x="68.5995%" y="351.50"></text></g><g><title>finish_task_switch.isra.0 (5,022,219 samples, 0.02%)</title><rect x="68.3495%" y="325" width="0.0187%" height="15" fill="rgb(220,115,36)" fg:x="18332546224" fg:w="5022219"/><text x="68.5995%" y="335.50"></text></g><g><title>__perf_event_task_sched_in (5,022,219 samples, 0.02%)</title><rect x="68.3495%" y="309" width="0.0187%" height="15" fill="rgb(243,153,54)" fg:x="18332546224" fg:w="5022219"/><text x="68.5995%" y="319.50"></text></g><g><title>ktime_get (4,653,761 samples, 0.02%)</title><rect x="68.3683%" y="293" width="0.0174%" height="15" fill="rgb(251,47,18)" fg:x="18337568443" fg:w="4653761"/><text x="68.6183%" y="303.50"></text></g><g><title>read_tsc (4,653,761 samples, 0.02%)</title><rect x="68.3683%" y="277" width="0.0174%" height="15" fill="rgb(242,102,42)" fg:x="18337568443" fg:w="4653761"/><text x="68.6183%" y="287.50"></text></g><g><title>idle_cpu (4,389,411 samples, 0.02%)</title><rect x="68.3856%" y="261" width="0.0164%" height="15" fill="rgb(234,31,38)" fg:x="18342222204" fg:w="4389411"/><text x="68.6356%" y="271.50"></text></g><g><title>sched_balance_trigger (9,035,275 samples, 0.03%)</title><rect x="68.3856%" y="277" width="0.0337%" height="15" fill="rgb(221,117,51)" fg:x="18342222204" fg:w="9035275"/><text x="68.6356%" y="287.50"></text></g><g><title>sched_use_asym_prio (4,645,864 samples, 0.02%)</title><rect x="68.4020%" y="261" width="0.0173%" height="15" fill="rgb(212,20,18)" fg:x="18346611615" fg:w="4645864"/><text x="68.6520%" y="271.50"></text></g><g><title>idle_cpu (4,645,864 samples, 0.02%)</title><rect x="68.4020%" y="245" width="0.0173%" height="15" fill="rgb(245,133,36)" fg:x="18346611615" fg:w="4645864"/><text x="68.6520%" y="255.50"></text></g><g><title>perf_event_task_tick (9,289,800 samples, 0.03%)</title><rect x="68.4193%" y="261" width="0.0346%" height="15" fill="rgb(212,6,19)" fg:x="18351257479" fg:w="9289800"/><text x="68.6693%" y="271.50"></text></g><g><title>perf_adjust_freq_unthr_context (9,289,800 samples, 0.03%)</title><rect x="68.4193%" y="245" width="0.0346%" height="15" fill="rgb(218,1,36)" fg:x="18351257479" fg:w="9289800"/><text x="68.6693%" y="255.50"></text></g><g><title>perf_adjust_freq_unthr_events (4,639,769 samples, 0.02%)</title><rect x="68.4366%" y="229" width="0.0173%" height="15" fill="rgb(246,84,54)" fg:x="18355907510" fg:w="4639769"/><text x="68.6866%" y="239.50"></text></g><g><title>perf_event_update_userpage (4,639,769 samples, 0.02%)</title><rect x="68.4366%" y="213" width="0.0173%" height="15" fill="rgb(242,110,6)" fg:x="18355907510" fg:w="4639769"/><text x="68.6866%" y="223.50"></text></g><g><title>psi_account_irqtime (4,652,513 samples, 0.02%)</title><rect x="68.4539%" y="261" width="0.0173%" height="15" fill="rgb(214,47,5)" fg:x="18360547279" fg:w="4652513"/><text x="68.7039%" y="271.50"></text></g><g><title>scx_tick (4,642,594 samples, 0.02%)</title><rect x="68.4713%" y="261" width="0.0173%" height="15" fill="rgb(218,159,25)" fg:x="18365199792" fg:w="4642594"/><text x="68.7213%" y="271.50"></text></g><g><title>reweight_entity (4,662,302 samples, 0.02%)</title><rect x="68.5060%" y="245" width="0.0174%" height="15" fill="rgb(215,211,28)" fg:x="18374503502" fg:w="4662302"/><text x="68.7560%" y="255.50"></text></g><g><title>srso_alias_safe_ret (4,651,171 samples, 0.02%)</title><rect x="68.5233%" y="245" width="0.0173%" height="15" fill="rgb(238,59,32)" fg:x="18379165804" fg:w="4651171"/><text x="68.7733%" y="255.50"></text></g><g><title>sched_tick (37,208,529 samples, 0.14%)</title><rect x="68.4193%" y="277" width="0.1387%" height="15" fill="rgb(226,82,3)" fg:x="18351257479" fg:w="37208529"/><text x="68.6693%" y="287.50"></text></g><g><title>task_tick_fair (18,623,622 samples, 0.07%)</title><rect x="68.4886%" y="261" width="0.0694%" height="15" fill="rgb(240,164,32)" fg:x="18369842386" fg:w="18623622"/><text x="68.7386%" y="271.50"></text></g><g><title>update_curr (4,649,033 samples, 0.02%)</title><rect x="68.5407%" y="245" width="0.0173%" height="15" fill="rgb(232,46,7)" fg:x="18383816975" fg:w="4649033"/><text x="68.7907%" y="255.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (60,579,134 samples, 0.23%)</title><rect x="68.3495%" y="389" width="0.2259%" height="15" fill="rgb(229,129,53)" fg:x="18332546224" fg:w="60579134"/><text x="68.5995%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (55,556,915 samples, 0.21%)</title><rect x="68.3683%" y="373" width="0.2071%" height="15" fill="rgb(234,188,29)" fg:x="18337568443" fg:w="55556915"/><text x="68.6183%" y="383.50"></text></g><g><title>__sysvec_apic_timer_interrupt (55,556,915 samples, 0.21%)</title><rect x="68.3683%" y="357" width="0.2071%" height="15" fill="rgb(246,141,4)" fg:x="18337568443" fg:w="55556915"/><text x="68.6183%" y="367.50"></text></g><g><title>hrtimer_interrupt (55,556,915 samples, 0.21%)</title><rect x="68.3683%" y="341" width="0.2071%" height="15" fill="rgb(229,23,39)" fg:x="18337568443" fg:w="55556915"/><text x="68.6183%" y="351.50"></text></g><g><title>__hrtimer_run_queues (55,556,915 samples, 0.21%)</title><rect x="68.3683%" y="325" width="0.2071%" height="15" fill="rgb(206,12,3)" fg:x="18337568443" fg:w="55556915"/><text x="68.6183%" y="335.50"></text></g><g><title>tick_nohz_handler (55,556,915 samples, 0.21%)</title><rect x="68.3683%" y="309" width="0.2071%" height="15" fill="rgb(252,226,20)" fg:x="18337568443" fg:w="55556915"/><text x="68.6183%" y="319.50"></text></g><g><title>update_process_times (50,903,154 samples, 0.19%)</title><rect x="68.3856%" y="293" width="0.1898%" height="15" fill="rgb(216,123,35)" fg:x="18342222204" fg:w="50903154"/><text x="68.6356%" y="303.50"></text></g><g><title>smp_call_function_single_async (4,659,350 samples, 0.02%)</title><rect x="68.5580%" y="277" width="0.0174%" height="15" fill="rgb(212,68,40)" fg:x="18388466008" fg:w="4659350"/><text x="68.8080%" y="287.50"></text></g><g><title>generic_exec_single (4,659,350 samples, 0.02%)</title><rect x="68.5580%" y="261" width="0.0174%" height="15" fill="rgb(254,125,32)" fg:x="18388466008" fg:w="4659350"/><text x="68.8080%" y="271.50"></text></g><g><title>default_send_IPI_single_phys (4,659,350 samples, 0.02%)</title><rect x="68.5580%" y="245" width="0.0174%" height="15" fill="rgb(253,97,22)" fg:x="18388466008" fg:w="4659350"/><text x="68.8080%" y="255.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::contains (6,754,330,745 samples, 25.18%)</title><rect x="43.3931%" y="469" width="25.1823%" height="15" fill="rgb(241,101,14)" fg:x="11638796676" fg:w="6754330745"/><text x="43.6431%" y="479.50">rgu_labs_term3_discrete_math::math::set:..</text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::index_of (6,754,330,745 samples, 25.18%)</title><rect x="43.3931%" y="453" width="25.1823%" height="15" fill="rgb(238,103,29)" fg:x="11638796676" fg:w="6754330745"/><text x="43.6431%" y="463.50">rgu_labs_term3_discrete_math::math::set:..</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (6,707,841,816 samples, 25.01%)</title><rect x="43.5664%" y="437" width="25.0090%" height="15" fill="rgb(233,195,47)" fg:x="11685285605" fg:w="6707841816"/><text x="43.8164%" y="447.50">core::slice::&lt;impl [T]&gt;::binary_search</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (6,707,841,816 samples, 25.01%)</title><rect x="43.5664%" y="421" width="25.0090%" height="15" fill="rgb(246,218,30)" fg:x="11685285605" fg:w="6707841816"/><text x="43.8164%" y="431.50">core::slice::&lt;impl [T]&gt;::binary_search_by</text></g><g><title>core::bool::&lt;impl bool&gt;::select_unpredictable (826,751,921 samples, 3.08%)</title><rect x="65.4930%" y="405" width="3.0824%" height="15" fill="rgb(219,145,47)" fg:x="17566375500" fg:w="826751921"/><text x="65.7430%" y="415.50">cor..</text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (4,655,390 samples, 0.02%)</title><rect x="68.9126%" y="453" width="0.0174%" height="15" fill="rgb(243,12,26)" fg:x="18483583025" fg:w="4655390"/><text x="69.1626%" y="463.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_reject (4,655,390 samples, 0.02%)</title><rect x="68.9126%" y="437" width="0.0174%" height="15" fill="rgb(214,87,16)" fg:x="18483583025" fg:w="4655390"/><text x="69.1626%" y="447.50"></text></g><g><title>core::str::pattern::Searcher::next_reject (4,655,390 samples, 0.02%)</title><rect x="68.9126%" y="421" width="0.0174%" height="15" fill="rgb(208,99,42)" fg:x="18483583025" fg:w="4655390"/><text x="69.1626%" y="431.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (4,655,390 samples, 0.02%)</title><rect x="68.9126%" y="405" width="0.0174%" height="15" fill="rgb(253,99,2)" fg:x="18483583025" fg:w="4655390"/><text x="69.1626%" y="415.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (4,655,390 samples, 0.02%)</title><rect x="68.9126%" y="389" width="0.0174%" height="15" fill="rgb(220,168,23)" fg:x="18483583025" fg:w="4655390"/><text x="69.1626%" y="399.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim::{{closure}} (4,655,390 samples, 0.02%)</title><rect x="68.9126%" y="373" width="0.0174%" height="15" fill="rgb(242,38,24)" fg:x="18483583025" fg:w="4655390"/><text x="69.1626%" y="383.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (4,655,390 samples, 0.02%)</title><rect x="68.9126%" y="357" width="0.0174%" height="15" fill="rgb(225,182,9)" fg:x="18483583025" fg:w="4655390"/><text x="69.1626%" y="367.50"></text></g><g><title>[libc.so.6] (14,138,296 samples, 0.05%)</title><rect x="69.0340%" y="437" width="0.0527%" height="15" fill="rgb(243,178,37)" fg:x="18516131465" fg:w="14138296"/><text x="69.2840%" y="447.50"></text></g><g><title>alloc::string::String::len (4,653,135 samples, 0.02%)</title><rect x="69.0867%" y="437" width="0.0173%" height="15" fill="rgb(232,139,19)" fg:x="18530269761" fg:w="4653135"/><text x="69.3367%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (4,653,135 samples, 0.02%)</title><rect x="69.0867%" y="421" width="0.0173%" height="15" fill="rgb(225,201,24)" fg:x="18530269761" fg:w="4653135"/><text x="69.3367%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="437" width="0.0174%" height="15" fill="rgb(221,47,46)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="421" width="0.0174%" height="15" fill="rgb(249,23,13)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="431.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="405" width="0.0174%" height="15" fill="rgb(219,9,5)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="389" width="0.0174%" height="15" fill="rgb(254,171,16)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="399.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="373" width="0.0174%" height="15" fill="rgb(230,171,20)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="383.50"></text></g><g><title>hrtimer_interrupt (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="357" width="0.0174%" height="15" fill="rgb(210,71,41)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="367.50"></text></g><g><title>__hrtimer_run_queues (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="341" width="0.0174%" height="15" fill="rgb(206,173,20)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="351.50"></text></g><g><title>tick_nohz_handler (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="325" width="0.0174%" height="15" fill="rgb(233,88,34)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="335.50"></text></g><g><title>update_wall_time (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="309" width="0.0174%" height="15" fill="rgb(223,209,46)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="319.50"></text></g><g><title>__timekeeping_advance (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="293" width="0.0174%" height="15" fill="rgb(250,43,18)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="303.50"></text></g><g><title>timekeeping_update_from_shadow (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="277" width="0.0174%" height="15" fill="rgb(208,13,10)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="287.50"></text></g><g><title>raw_notifier_call_chain (4,667,581 samples, 0.02%)</title><rect x="69.1041%" y="261" width="0.0174%" height="15" fill="rgb(212,200,36)" fg:x="18534922896" fg:w="4667581"/><text x="69.3541%" y="271.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (4,647,798 samples, 0.02%)</title><rect x="69.2102%" y="405" width="0.0173%" height="15" fill="rgb(225,90,30)" fg:x="18563406197" fg:w="4647798"/><text x="69.4602%" y="415.50"></text></g><g><title>core::slice::memchr::memchr_aligned (33,126,540 samples, 0.12%)</title><rect x="69.1215%" y="437" width="0.1235%" height="15" fill="rgb(236,182,39)" fg:x="18539590477" fg:w="33126540"/><text x="69.3715%" y="447.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (9,310,820 samples, 0.03%)</title><rect x="69.2102%" y="421" width="0.0347%" height="15" fill="rgb(212,144,35)" fg:x="18563406197" fg:w="9310820"/><text x="69.4602%" y="431.50"></text></g><g><title>core::slice::memchr::memchr_naive (4,663,022 samples, 0.02%)</title><rect x="69.2276%" y="405" width="0.0174%" height="15" fill="rgb(228,63,44)" fg:x="18568053995" fg:w="4663022"/><text x="69.4776%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (37,541,286 samples, 0.14%)</title><rect x="70.1005%" y="405" width="0.1400%" height="15" fill="rgb(228,109,6)" fg:x="18802186058" fg:w="37541286"/><text x="70.3505%" y="415.50"></text></g><g><title>core::str::converts::from_utf8 (303,889,431 samples, 1.13%)</title><rect x="69.2450%" y="437" width="1.1330%" height="15" fill="rgb(238,117,24)" fg:x="18572717017" fg:w="303889431"/><text x="69.4950%" y="447.50"></text></g><g><title>core::str::validations::run_utf8_validation (257,282,566 samples, 0.96%)</title><rect x="69.4187%" y="421" width="0.9592%" height="15" fill="rgb(242,26,26)" fg:x="18619323882" fg:w="257282566"/><text x="69.6687%" y="431.50"></text></g><g><title>core::str::validations::utf8_char_width (36,879,104 samples, 0.14%)</title><rect x="70.2405%" y="405" width="0.1375%" height="15" fill="rgb(221,92,48)" fg:x="18839727344" fg:w="36879104"/><text x="70.4905%" y="415.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (4,650,222 samples, 0.02%)</title><rect x="70.3780%" y="405" width="0.0173%" height="15" fill="rgb(209,209,32)" fg:x="18876606448" fg:w="4650222"/><text x="70.6280%" y="415.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume (4,650,222 samples, 0.02%)</title><rect x="70.3780%" y="389" width="0.0173%" height="15" fill="rgb(221,70,22)" fg:x="18876606448" fg:w="4650222"/><text x="70.6280%" y="399.50"></text></g><g><title>fdget_pos (4,662,117 samples, 0.02%)</title><rect x="70.4300%" y="197" width="0.0174%" height="15" fill="rgb(248,145,5)" fg:x="18890558135" fg:w="4662117"/><text x="70.6800%" y="207.50"></text></g><g><title>dget_parent (4,658,498 samples, 0.02%)</title><rect x="70.4649%" y="165" width="0.0174%" height="15" fill="rgb(226,116,26)" fg:x="18899930264" fg:w="4658498"/><text x="70.7149%" y="175.50"></text></g><g><title>__rcu_read_unlock (4,658,498 samples, 0.02%)</title><rect x="70.4649%" y="149" width="0.0174%" height="15" fill="rgb(244,5,17)" fg:x="18899930264" fg:w="4658498"/><text x="70.7149%" y="159.50"></text></g><g><title>__rcu_read_lock (4,692,338 samples, 0.02%)</title><rect x="70.4999%" y="149" width="0.0175%" height="15" fill="rgb(252,159,33)" fg:x="18909316473" fg:w="4692338"/><text x="70.7499%" y="159.50"></text></g><g><title>dput (14,023,478 samples, 0.05%)</title><rect x="70.4823%" y="165" width="0.0523%" height="15" fill="rgb(206,71,0)" fg:x="18904588762" fg:w="14023478"/><text x="70.7323%" y="175.50"></text></g><g><title>lockref_put_return (4,603,429 samples, 0.02%)</title><rect x="70.5174%" y="149" width="0.0172%" height="15" fill="rgb(233,118,54)" fg:x="18914008811" fg:w="4603429"/><text x="70.7674%" y="159.50"></text></g><g><title>__fsnotify_parent (28,292,666 samples, 0.11%)</title><rect x="70.4649%" y="181" width="0.1055%" height="15" fill="rgb(234,83,48)" fg:x="18899930264" fg:w="28292666"/><text x="70.7149%" y="191.50"></text></g><g><title>fsnotify (9,610,690 samples, 0.04%)</title><rect x="70.5346%" y="165" width="0.0358%" height="15" fill="rgb(228,3,54)" fg:x="18918612240" fg:w="9610690"/><text x="70.7846%" y="175.50"></text></g><g><title>ext4_file_read_iter (13,959,775 samples, 0.05%)</title><rect x="70.5704%" y="181" width="0.0520%" height="15" fill="rgb(226,155,13)" fg:x="18928222930" fg:w="13959775"/><text x="70.8204%" y="191.50"></text></g><g><title>copy_page_to_iter (410,981,148 samples, 1.53%)</title><rect x="70.8998%" y="165" width="1.5323%" height="15" fill="rgb(241,28,37)" fg:x="19016571616" fg:w="410981148"/><text x="71.1498%" y="175.50"></text></g><g><title>_copy_to_iter (383,047,232 samples, 1.43%)</title><rect x="71.0039%" y="149" width="1.4281%" height="15" fill="rgb(233,93,10)" fg:x="19044505532" fg:w="383047232"/><text x="71.2539%" y="159.50"></text></g><g><title>__xas_next (4,320,001 samples, 0.02%)</title><rect x="72.5699%" y="133" width="0.0161%" height="15" fill="rgb(225,113,19)" fg:x="19464523322" fg:w="4320001"/><text x="72.8199%" y="143.50"></text></g><g><title>filemap_get_pages (50,613,760 samples, 0.19%)</title><rect x="72.4321%" y="165" width="0.1887%" height="15" fill="rgb(241,2,18)" fg:x="19427552764" fg:w="50613760"/><text x="72.6821%" y="175.50"></text></g><g><title>filemap_get_read_batch (45,965,274 samples, 0.17%)</title><rect x="72.4494%" y="149" width="0.1714%" height="15" fill="rgb(228,207,21)" fg:x="19432201250" fg:w="45965274"/><text x="72.6994%" y="159.50"></text></g><g><title>xas_load (9,323,201 samples, 0.03%)</title><rect x="72.5860%" y="133" width="0.0348%" height="15" fill="rgb(213,211,35)" fg:x="19468843323" fg:w="9323201"/><text x="72.8360%" y="143.50"></text></g><g><title>folio_mark_accessed (9,303,648 samples, 0.03%)</title><rect x="72.6208%" y="165" width="0.0347%" height="15" fill="rgb(209,83,10)" fg:x="19478166524" fg:w="9303648"/><text x="72.8708%" y="175.50"></text></g><g><title>make_vfsgid (4,655,020 samples, 0.02%)</title><rect x="72.7594%" y="133" width="0.0174%" height="15" fill="rgb(209,164,1)" fg:x="19515356493" fg:w="4655020"/><text x="73.0094%" y="143.50"></text></g><g><title>make_vfsuid (23,471,116 samples, 0.09%)</title><rect x="72.7768%" y="133" width="0.0875%" height="15" fill="rgb(213,184,43)" fg:x="19520011513" fg:w="23471116"/><text x="73.0268%" y="143.50"></text></g><g><title>filemap_read (625,388,791 samples, 2.33%)</title><rect x="70.6224%" y="181" width="2.3316%" height="15" fill="rgb(231,61,34)" fg:x="18942182705" fg:w="625388791"/><text x="70.8724%" y="191.50">f..</text></g><g><title>touch_atime (80,101,324 samples, 0.30%)</title><rect x="72.6555%" y="165" width="0.2986%" height="15" fill="rgb(235,75,3)" fg:x="19487470172" fg:w="80101324"/><text x="72.9055%" y="175.50"></text></g><g><title>atime_needs_update (80,101,324 samples, 0.30%)</title><rect x="72.6555%" y="149" width="0.2986%" height="15" fill="rgb(220,106,47)" fg:x="19487470172" fg:w="80101324"/><text x="72.9055%" y="159.50"></text></g><g><title>srso_alias_safe_ret (24,088,867 samples, 0.09%)</title><rect x="72.8643%" y="133" width="0.0898%" height="15" fill="rgb(210,196,33)" fg:x="19543482629" fg:w="24088867"/><text x="73.1143%" y="143.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (686,319,522 samples, 2.56%)</title><rect x="70.4127%" y="245" width="2.5588%" height="15" fill="rgb(229,154,42)" fg:x="18885913851" fg:w="686319522"/><text x="70.6627%" y="255.50">en..</text></g><g><title>do_syscall_64 (686,319,522 samples, 2.56%)</title><rect x="70.4127%" y="229" width="2.5588%" height="15" fill="rgb(228,114,26)" fg:x="18885913851" fg:w="686319522"/><text x="70.6627%" y="239.50">do..</text></g><g><title>ksys_read (686,319,522 samples, 2.56%)</title><rect x="70.4127%" y="213" width="2.5588%" height="15" fill="rgb(208,144,1)" fg:x="18885913851" fg:w="686319522"/><text x="70.6627%" y="223.50">ks..</text></g><g><title>vfs_read (677,013,121 samples, 2.52%)</title><rect x="70.4474%" y="197" width="2.5241%" height="15" fill="rgb(239,112,37)" fg:x="18895220252" fg:w="677013121"/><text x="70.6974%" y="207.50">vf..</text></g><g><title>rw_verify_area (4,661,877 samples, 0.02%)</title><rect x="72.9541%" y="181" width="0.0174%" height="15" fill="rgb(210,96,50)" fg:x="19567571496" fg:w="4661877"/><text x="73.2041%" y="191.50"></text></g><g><title>entry_SYSRETQ_unsafe_stack (9,294,998 samples, 0.03%)</title><rect x="72.9715%" y="245" width="0.0347%" height="15" fill="rgb(222,178,2)" fg:x="19572233373" fg:w="9294998"/><text x="73.2215%" y="255.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (704,930,202 samples, 2.63%)</title><rect x="70.3953%" y="405" width="2.6282%" height="15" fill="rgb(226,74,18)" fg:x="18881256670" fg:w="704930202"/><text x="70.6453%" y="415.50">&lt;s..</text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (704,930,202 samples, 2.63%)</title><rect x="70.3953%" y="389" width="2.6282%" height="15" fill="rgb(225,67,54)" fg:x="18881256670" fg:w="704930202"/><text x="70.6453%" y="399.50">st..</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (700,273,021 samples, 2.61%)</title><rect x="70.4127%" y="373" width="2.6108%" height="15" fill="rgb(251,92,32)" fg:x="18885913851" fg:w="700273021"/><text x="70.6627%" y="383.50">st..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (700,273,021 samples, 2.61%)</title><rect x="70.4127%" y="357" width="2.6108%" height="15" fill="rgb(228,149,22)" fg:x="18885913851" fg:w="700273021"/><text x="70.6627%" y="367.50">&lt;s..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (700,273,021 samples, 2.61%)</title><rect x="70.4127%" y="341" width="2.6108%" height="15" fill="rgb(243,54,13)" fg:x="18885913851" fg:w="700273021"/><text x="70.6627%" y="351.50">&lt;&amp;..</text></g><g><title>std::sys::fs::unix::File::read_buf (700,273,021 samples, 2.61%)</title><rect x="70.4127%" y="325" width="2.6108%" height="15" fill="rgb(243,180,28)" fg:x="18885913851" fg:w="700273021"/><text x="70.6627%" y="335.50">st..</text></g><g><title>std::sys::pal::unix::fd::FileDesc::read_buf (700,273,021 samples, 2.61%)</title><rect x="70.4127%" y="309" width="2.6108%" height="15" fill="rgb(208,167,24)" fg:x="18885913851" fg:w="700273021"/><text x="70.6627%" y="319.50">st..</text></g><g><title>read (700,273,021 samples, 2.61%)</title><rect x="70.4127%" y="293" width="2.6108%" height="15" fill="rgb(245,73,45)" fg:x="18885913851" fg:w="700273021"/><text x="70.6627%" y="303.50">re..</text></g><g><title>[libc.so.6] (700,273,021 samples, 2.61%)</title><rect x="70.4127%" y="277" width="2.6108%" height="15" fill="rgb(237,203,48)" fg:x="18885913851" fg:w="700273021"/><text x="70.6627%" y="287.50">[l..</text></g><g><title>[libc.so.6] (700,273,021 samples, 2.61%)</title><rect x="70.4127%" y="261" width="2.6108%" height="15" fill="rgb(211,197,16)" fg:x="18885913851" fg:w="700273021"/><text x="70.6627%" y="271.50">[l..</text></g><g><title>syscall_return_via_sysret (4,658,501 samples, 0.02%)</title><rect x="73.0061%" y="245" width="0.0174%" height="15" fill="rgb(243,99,51)" fg:x="19581528371" fg:w="4658501"/><text x="73.2561%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9,275,969 samples, 0.03%)</title><rect x="73.0582%" y="357" width="0.0346%" height="15" fill="rgb(215,123,29)" fg:x="19595494602" fg:w="9275969"/><text x="73.3082%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (9,275,969 samples, 0.03%)</title><rect x="73.0582%" y="341" width="0.0346%" height="15" fill="rgb(239,186,37)" fg:x="19595494602" fg:w="9275969"/><text x="73.3082%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (9,275,969 samples, 0.03%)</title><rect x="73.0582%" y="325" width="0.0346%" height="15" fill="rgb(252,136,39)" fg:x="19595494602" fg:w="9275969"/><text x="73.3082%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (9,275,969 samples, 0.03%)</title><rect x="73.0582%" y="309" width="0.0346%" height="15" fill="rgb(223,213,32)" fg:x="19595494602" fg:w="9275969"/><text x="73.3082%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9,310,188 samples, 0.03%)</title><rect x="73.0928%" y="357" width="0.0347%" height="15" fill="rgb(233,115,5)" fg:x="19604770571" fg:w="9310188"/><text x="73.3428%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9,310,188 samples, 0.03%)</title><rect x="73.0928%" y="341" width="0.0347%" height="15" fill="rgb(207,226,44)" fg:x="19604770571" fg:w="9310188"/><text x="73.3428%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (9,310,188 samples, 0.03%)</title><rect x="73.0928%" y="325" width="0.0347%" height="15" fill="rgb(208,126,0)" fg:x="19604770571" fg:w="9310188"/><text x="73.3428%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (9,310,188 samples, 0.03%)</title><rect x="73.0928%" y="309" width="0.0347%" height="15" fill="rgb(244,66,21)" fg:x="19604770571" fg:w="9310188"/><text x="73.3428%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (4,633,429 samples, 0.02%)</title><rect x="73.1102%" y="293" width="0.0173%" height="15" fill="rgb(222,97,12)" fg:x="19609447330" fg:w="4633429"/><text x="73.3602%" y="303.50"></text></g><g><title>[libc.so.6] (13,957,702 samples, 0.05%)</title><rect x="73.1795%" y="341" width="0.0520%" height="15" fill="rgb(219,213,19)" fg:x="19628041911" fg:w="13957702"/><text x="73.4295%" y="351.50"></text></g><g><title>core::slice::memchr::memchr_aligned (4,644,357 samples, 0.02%)</title><rect x="73.2316%" y="341" width="0.0173%" height="15" fill="rgb(252,169,30)" fg:x="19641999613" fg:w="4644357"/><text x="73.4816%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37,219,212 samples, 0.14%)</title><rect x="73.1275%" y="357" width="0.1388%" height="15" fill="rgb(206,32,51)" fg:x="19614080759" fg:w="37219212"/><text x="73.3775%" y="367.50"></text></g><g><title>core::str::converts::from_utf8 (4,656,001 samples, 0.02%)</title><rect x="73.2489%" y="341" width="0.0174%" height="15" fill="rgb(250,172,42)" fg:x="19646643970" fg:w="4656001"/><text x="73.4989%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (74,415,250 samples, 0.28%)</title><rect x="73.0235%" y="405" width="0.2774%" height="15" fill="rgb(209,34,43)" fg:x="19586186872" fg:w="74415250"/><text x="73.2735%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (74,415,250 samples, 0.28%)</title><rect x="73.0235%" y="389" width="0.2774%" height="15" fill="rgb(223,11,35)" fg:x="19586186872" fg:w="74415250"/><text x="73.2735%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (74,415,250 samples, 0.28%)</title><rect x="73.0235%" y="373" width="0.2774%" height="15" fill="rgb(251,219,26)" fg:x="19586186872" fg:w="74415250"/><text x="73.2735%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (9,302,151 samples, 0.03%)</title><rect x="73.2663%" y="357" width="0.0347%" height="15" fill="rgb(231,119,3)" fg:x="19651299971" fg:w="9302151"/><text x="73.5163%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4,648,513 samples, 0.02%)</title><rect x="73.3009%" y="405" width="0.0173%" height="15" fill="rgb(216,97,11)" fg:x="19660602122" fg:w="4648513"/><text x="73.5509%" y="415.50"></text></g><g><title>&lt;core::ops::range::RangeToInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4,648,513 samples, 0.02%)</title><rect x="73.3009%" y="389" width="0.0173%" height="15" fill="rgb(223,59,9)" fg:x="19660602122" fg:w="4648513"/><text x="73.5509%" y="399.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4,648,513 samples, 0.02%)</title><rect x="73.3009%" y="373" width="0.0173%" height="15" fill="rgb(233,93,31)" fg:x="19660602122" fg:w="4648513"/><text x="73.5509%" y="383.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;usize&gt;::into_slice_range (4,648,513 samples, 0.02%)</title><rect x="73.3009%" y="357" width="0.0173%" height="15" fill="rgb(239,81,33)" fg:x="19660602122" fg:w="4648513"/><text x="73.5509%" y="367.50"></text></g><g><title>[unknown] (23,259,210 samples, 0.09%)</title><rect x="73.3183%" y="389" width="0.0867%" height="15" fill="rgb(213,120,34)" fg:x="19665250635" fg:w="23259210"/><text x="73.5683%" y="399.50"></text></g><g><title>[libc.so.6] (23,259,210 samples, 0.09%)</title><rect x="73.3183%" y="373" width="0.0867%" height="15" fill="rgb(243,49,53)" fg:x="19665250635" fg:w="23259210"/><text x="73.5683%" y="383.50"></text></g><g><title>tick_nohz_handler (4,676,419 samples, 0.02%)</title><rect x="73.4397%" y="293" width="0.0174%" height="15" fill="rgb(247,216,33)" fg:x="19697814446" fg:w="4676419"/><text x="73.6897%" y="303.50"></text></g><g><title>update_wall_time (4,676,419 samples, 0.02%)</title><rect x="73.4397%" y="277" width="0.0174%" height="15" fill="rgb(226,26,14)" fg:x="19697814446" fg:w="4676419"/><text x="73.6897%" y="287.50"></text></g><g><title>__timekeeping_advance (4,676,419 samples, 0.02%)</title><rect x="73.4397%" y="261" width="0.0174%" height="15" fill="rgb(215,49,53)" fg:x="19697814446" fg:w="4676419"/><text x="73.6897%" y="271.50"></text></g><g><title>timekeeping_update_from_shadow (4,676,419 samples, 0.02%)</title><rect x="73.4397%" y="245" width="0.0174%" height="15" fill="rgb(245,162,40)" fg:x="19697814446" fg:w="4676419"/><text x="73.6897%" y="255.50"></text></g><g><title>notifier_call_chain (4,676,419 samples, 0.02%)</title><rect x="73.4397%" y="229" width="0.0174%" height="15" fill="rgb(229,68,17)" fg:x="19697814446" fg:w="4676419"/><text x="73.6897%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (9,430,340 samples, 0.04%)</title><rect x="73.4397%" y="373" width="0.0352%" height="15" fill="rgb(213,182,10)" fg:x="19697814446" fg:w="9430340"/><text x="73.6897%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (9,430,340 samples, 0.04%)</title><rect x="73.4397%" y="357" width="0.0352%" height="15" fill="rgb(245,125,30)" fg:x="19697814446" fg:w="9430340"/><text x="73.6897%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (9,430,340 samples, 0.04%)</title><rect x="73.4397%" y="341" width="0.0352%" height="15" fill="rgb(232,202,2)" fg:x="19697814446" fg:w="9430340"/><text x="73.6897%" y="351.50"></text></g><g><title>hrtimer_interrupt (9,430,340 samples, 0.04%)</title><rect x="73.4397%" y="325" width="0.0352%" height="15" fill="rgb(237,140,51)" fg:x="19697814446" fg:w="9430340"/><text x="73.6897%" y="335.50"></text></g><g><title>__hrtimer_run_queues (9,430,340 samples, 0.04%)</title><rect x="73.4397%" y="309" width="0.0352%" height="15" fill="rgb(236,157,25)" fg:x="19697814446" fg:w="9430340"/><text x="73.6897%" y="319.50"></text></g><g><title>timerqueue_del (4,753,921 samples, 0.02%)</title><rect x="73.4571%" y="293" width="0.0177%" height="15" fill="rgb(219,209,0)" fg:x="19702490865" fg:w="4753921"/><text x="73.7071%" y="303.50"></text></g><g><title>rb_erase (4,753,921 samples, 0.02%)</title><rect x="73.4571%" y="277" width="0.0177%" height="15" fill="rgb(240,116,54)" fg:x="19702490865" fg:w="4753921"/><text x="73.7071%" y="287.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,640,486 samples, 0.02%)</title><rect x="73.4748%" y="357" width="0.0173%" height="15" fill="rgb(216,10,36)" fg:x="19707244786" fg:w="4640486"/><text x="73.7248%" y="367.50"></text></g><g><title>sysvec_apic_timer_interrupt (4,640,486 samples, 0.02%)</title><rect x="73.4748%" y="341" width="0.0173%" height="15" fill="rgb(222,72,44)" fg:x="19707244786" fg:w="4640486"/><text x="73.7248%" y="351.50"></text></g><g><title>__sysvec_apic_timer_interrupt (4,640,486 samples, 0.02%)</title><rect x="73.4748%" y="325" width="0.0173%" height="15" fill="rgb(232,159,9)" fg:x="19707244786" fg:w="4640486"/><text x="73.7248%" y="335.50"></text></g><g><title>hrtimer_interrupt (4,640,486 samples, 0.02%)</title><rect x="73.4748%" y="309" width="0.0173%" height="15" fill="rgb(210,39,32)" fg:x="19707244786" fg:w="4640486"/><text x="73.7248%" y="319.50"></text></g><g><title>clockevents_program_event (4,640,486 samples, 0.02%)</title><rect x="73.4748%" y="293" width="0.0173%" height="15" fill="rgb(216,194,45)" fg:x="19707244786" fg:w="4640486"/><text x="73.7248%" y="303.50"></text></g><g><title>lapic_next_event (4,640,486 samples, 0.02%)</title><rect x="73.4748%" y="277" width="0.0173%" height="15" fill="rgb(218,18,35)" fg:x="19707244786" fg:w="4640486"/><text x="73.7248%" y="287.50"></text></g><g><title>sched_balance_trigger (4,653,217 samples, 0.02%)</title><rect x="73.5962%" y="229" width="0.0173%" height="15" fill="rgb(207,83,51)" fg:x="19739783206" fg:w="4653217"/><text x="73.8462%" y="239.50"></text></g><g><title>sched_use_asym_prio (4,653,217 samples, 0.02%)</title><rect x="73.5962%" y="213" width="0.0173%" height="15" fill="rgb(225,63,43)" fg:x="19739783206" fg:w="4653217"/><text x="73.8462%" y="223.50"></text></g><g><title>idle_cpu (4,653,217 samples, 0.02%)</title><rect x="73.5962%" y="197" width="0.0173%" height="15" fill="rgb(207,57,36)" fg:x="19739783206" fg:w="4653217"/><text x="73.8462%" y="207.50"></text></g><g><title>core::slice::memchr::memchr_aligned (60,564,410 samples, 0.23%)</title><rect x="73.4050%" y="389" width="0.2258%" height="15" fill="rgb(216,99,33)" fg:x="19688509845" fg:w="60564410"/><text x="73.6550%" y="399.50"></text></g><g><title>core::slice::memchr::memchr_aligned::runtime (41,829,469 samples, 0.16%)</title><rect x="73.4748%" y="373" width="0.1560%" height="15" fill="rgb(225,42,16)" fg:x="19707244786" fg:w="41829469"/><text x="73.7248%" y="383.50"></text></g><g><title>core::slice::memchr::memchr_naive (37,188,983 samples, 0.14%)</title><rect x="73.4921%" y="357" width="0.1387%" height="15" fill="rgb(220,201,45)" fg:x="19711885272" fg:w="37188983"/><text x="73.7421%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (9,291,049 samples, 0.03%)</title><rect x="73.5962%" y="341" width="0.0346%" height="15" fill="rgb(225,33,4)" fg:x="19739783206" fg:w="9291049"/><text x="73.8462%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (9,291,049 samples, 0.03%)</title><rect x="73.5962%" y="325" width="0.0346%" height="15" fill="rgb(224,33,50)" fg:x="19739783206" fg:w="9291049"/><text x="73.8462%" y="335.50"></text></g><g><title>__sysvec_apic_timer_interrupt (9,291,049 samples, 0.03%)</title><rect x="73.5962%" y="309" width="0.0346%" height="15" fill="rgb(246,198,51)" fg:x="19739783206" fg:w="9291049"/><text x="73.8462%" y="319.50"></text></g><g><title>hrtimer_interrupt (9,291,049 samples, 0.03%)</title><rect x="73.5962%" y="293" width="0.0346%" height="15" fill="rgb(205,22,4)" fg:x="19739783206" fg:w="9291049"/><text x="73.8462%" y="303.50"></text></g><g><title>__hrtimer_run_queues (9,291,049 samples, 0.03%)</title><rect x="73.5962%" y="277" width="0.0346%" height="15" fill="rgb(206,3,8)" fg:x="19739783206" fg:w="9291049"/><text x="73.8462%" y="287.50"></text></g><g><title>tick_nohz_handler (9,291,049 samples, 0.03%)</title><rect x="73.5962%" y="261" width="0.0346%" height="15" fill="rgb(251,23,15)" fg:x="19739783206" fg:w="9291049"/><text x="73.8462%" y="271.50"></text></g><g><title>update_process_times (9,291,049 samples, 0.03%)</title><rect x="73.5962%" y="245" width="0.0346%" height="15" fill="rgb(252,88,28)" fg:x="19739783206" fg:w="9291049"/><text x="73.8462%" y="255.50"></text></g><g><title>sched_tick (4,637,832 samples, 0.02%)</title><rect x="73.6135%" y="229" width="0.0173%" height="15" fill="rgb(212,127,14)" fg:x="19744436423" fg:w="4637832"/><text x="73.8635%" y="239.50"></text></g><g><title>perf_event_task_tick (4,637,832 samples, 0.02%)</title><rect x="73.6135%" y="213" width="0.0173%" height="15" fill="rgb(247,145,37)" fg:x="19744436423" fg:w="4637832"/><text x="73.8635%" y="223.50"></text></g><g><title>perf_adjust_freq_unthr_context (4,637,832 samples, 0.02%)</title><rect x="73.6135%" y="197" width="0.0173%" height="15" fill="rgb(209,117,53)" fg:x="19744436423" fg:w="4637832"/><text x="73.8635%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (9,326,479 samples, 0.03%)</title><rect x="74.4190%" y="357" width="0.0348%" height="15" fill="rgb(212,90,42)" fg:x="19960472822" fg:w="9326479"/><text x="74.6690%" y="367.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (1,097,821,640 samples, 4.09%)</title><rect x="70.3780%" y="437" width="4.0930%" height="15" fill="rgb(218,164,37)" fg:x="18876606448" fg:w="1097821640"/><text x="70.6280%" y="447.50">std:..</text></g><g><title>std::io::read_until (1,097,821,640 samples, 4.09%)</title><rect x="70.3780%" y="421" width="4.0930%" height="15" fill="rgb(246,65,34)" fg:x="18876606448" fg:w="1097821640"/><text x="70.6280%" y="431.50">std:..</text></g><g><title>core::slice::memchr::memchr (309,177,453 samples, 1.15%)</title><rect x="73.3183%" y="405" width="1.1527%" height="15" fill="rgb(231,100,33)" fg:x="19665250635" fg:w="309177453"/><text x="73.5683%" y="415.50"></text></g><g><title>core::str::converts::from_utf8 (225,353,833 samples, 0.84%)</title><rect x="73.6308%" y="389" width="0.8402%" height="15" fill="rgb(228,126,14)" fg:x="19749074255" fg:w="225353833"/><text x="73.8808%" y="399.50"></text></g><g><title>core::str::validations::run_utf8_validation (211,437,776 samples, 0.79%)</title><rect x="73.6827%" y="373" width="0.7883%" height="15" fill="rgb(215,173,21)" fg:x="19762990312" fg:w="211437776"/><text x="73.9327%" y="383.50"></text></g><g><title>core::str::validations::utf8_char_width (4,628,787 samples, 0.02%)</title><rect x="74.4537%" y="357" width="0.0173%" height="15" fill="rgb(210,6,40)" fg:x="19969799301" fg:w="4628787"/><text x="74.7037%" y="367.50"></text></g><g><title>_start (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="757" width="63.4316%" height="15" fill="rgb(212,48,18)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="767.50">_start</text></g><g><title>__libc_start_main (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="741" width="63.4316%" height="15" fill="rgb(230,214,11)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="751.50">__libc_start_main</text></g><g><title>[libc.so.6] (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="725" width="63.4316%" height="15" fill="rgb(254,105,39)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="735.50">[libc.so.6]</text></g><g><title>main (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="709" width="63.4316%" height="15" fill="rgb(245,158,5)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="719.50">main</text></g><g><title>std::rt::lang_start_internal (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="693" width="63.4316%" height="15" fill="rgb(249,208,11)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="703.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="677" width="63.4316%" height="15" fill="rgb(210,39,28)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="687.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="661" width="63.4316%" height="15" fill="rgb(211,56,53)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="671.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="645" width="63.4316%" height="15" fill="rgb(226,201,30)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="655.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="629" width="63.4316%" height="15" fill="rgb(239,101,34)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="639.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="613" width="63.4316%" height="15" fill="rgb(226,209,5)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="623.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="597" width="63.4316%" height="15" fill="rgb(250,105,47)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="607.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="581" width="63.4316%" height="15" fill="rgb(230,72,3)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="591.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="565" width="63.4316%" height="15" fill="rgb(232,218,39)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="575.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="549" width="63.4316%" height="15" fill="rgb(248,166,6)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="559.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="533" width="63.4316%" height="15" fill="rgb(247,89,20)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="543.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="517" width="63.4316%" height="15" fill="rgb(248,130,54)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="527.50">core::ops::function::FnOnce::call_once</text></g><g><title>rgu_labs_term3_discrete_math::main (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="501" width="63.4316%" height="15" fill="rgb(234,196,4)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="511.50">rgu_labs_term3_discrete_math::main</text></g><g><title>rgu_labs_term3_discrete_math::task2::run_task_2 (17,013,481,818 samples, 63.43%)</title><rect x="11.0907%" y="485" width="63.4316%" height="15" fill="rgb(250,143,31)" fg:x="2974719381" fg:w="17013481818"/><text x="11.3407%" y="495.50">rgu_labs_term3_discrete_math::task2::run_task_2</text></g><g><title>std::io::BufRead::read_line (1,595,073,778 samples, 5.95%)</title><rect x="68.5754%" y="469" width="5.9469%" height="15" fill="rgb(211,110,34)" fg:x="18393127421" fg:w="1595073778"/><text x="68.8254%" y="479.50">std::io:..</text></g><g><title>std::io::append_to_string (1,499,962,784 samples, 5.59%)</title><rect x="68.9300%" y="453" width="5.5923%" height="15" fill="rgb(215,124,48)" fg:x="18488238415" fg:w="1499962784"/><text x="69.1800%" y="463.50">std::io..</text></g><g><title>std::io::append_to_string (13,773,111 samples, 0.05%)</title><rect x="74.4710%" y="437" width="0.0514%" height="15" fill="rgb(216,46,13)" fg:x="19974428088" fg:w="13773111"/><text x="74.7210%" y="447.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (4,653,509 samples, 0.02%)</title><rect x="74.5223%" y="757" width="0.0173%" height="15" fill="rgb(205,184,25)" fg:x="19988201199" fg:w="4653509"/><text x="74.7723%" y="767.50"></text></g><g><title>alloc::string::String::len (4,641,912 samples, 0.02%)</title><rect x="75.7881%" y="709" width="0.0173%" height="15" fill="rgb(228,1,10)" fg:x="20327713150" fg:w="4641912"/><text x="76.0381%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (4,641,912 samples, 0.02%)</title><rect x="75.7881%" y="693" width="0.0173%" height="15" fill="rgb(213,116,27)" fg:x="20327713150" fg:w="4641912"/><text x="76.0381%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::io::Guard&gt; (13,953,136 samples, 0.05%)</title><rect x="75.8055%" y="709" width="0.0520%" height="15" fill="rgb(241,95,50)" fg:x="20332355062" fg:w="13953136"/><text x="76.0555%" y="719.50"></text></g><g><title>&lt;std::io::Guard as core::ops::drop::Drop&gt;::drop (13,953,136 samples, 0.05%)</title><rect x="75.8055%" y="693" width="0.0520%" height="15" fill="rgb(238,48,32)" fg:x="20332355062" fg:w="13953136"/><text x="76.0555%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (13,953,136 samples, 0.05%)</title><rect x="75.8055%" y="677" width="0.0520%" height="15" fill="rgb(235,113,49)" fg:x="20332355062" fg:w="13953136"/><text x="76.0555%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (42,311,855 samples, 0.16%)</title><rect x="75.8575%" y="709" width="0.1578%" height="15" fill="rgb(205,127,43)" fg:x="20346308198" fg:w="42311855"/><text x="76.1075%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (42,311,855 samples, 0.16%)</title><rect x="75.8575%" y="693" width="0.1578%" height="15" fill="rgb(250,162,2)" fg:x="20346308198" fg:w="42311855"/><text x="76.1075%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (61,109,120 samples, 0.23%)</title><rect x="76.0152%" y="709" width="0.2278%" height="15" fill="rgb(220,13,41)" fg:x="20388620053" fg:w="61109120"/><text x="76.2652%" y="719.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (61,109,120 samples, 0.23%)</title><rect x="76.0152%" y="693" width="0.2278%" height="15" fill="rgb(249,221,25)" fg:x="20388620053" fg:w="61109120"/><text x="76.2652%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (61,109,120 samples, 0.23%)</title><rect x="76.0152%" y="677" width="0.2278%" height="15" fill="rgb(215,208,19)" fg:x="20388620053" fg:w="61109120"/><text x="76.2652%" y="687.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (47,022,440 samples, 0.18%)</title><rect x="76.0677%" y="661" width="0.1753%" height="15" fill="rgb(236,175,2)" fg:x="20402706733" fg:w="47022440"/><text x="76.3177%" y="671.50"></text></g><g><title>core::slice::index::get_noubcheck (47,022,440 samples, 0.18%)</title><rect x="76.0677%" y="645" width="0.1753%" height="15" fill="rgb(241,52,2)" fg:x="20402706733" fg:w="47022440"/><text x="76.3177%" y="655.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (60,549,051 samples, 0.23%)</title><rect x="76.6779%" y="677" width="0.2257%" height="15" fill="rgb(248,140,14)" fg:x="20566356750" fg:w="60549051"/><text x="76.9279%" y="687.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume (60,549,051 samples, 0.23%)</title><rect x="76.6779%" y="661" width="0.2257%" height="15" fill="rgb(253,22,42)" fg:x="20566356750" fg:w="60549051"/><text x="76.9279%" y="671.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (60,766,938 samples, 0.23%)</title><rect x="76.9036%" y="677" width="0.2266%" height="15" fill="rgb(234,61,47)" fg:x="20626905801" fg:w="60766938"/><text x="77.1536%" y="687.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (60,766,938 samples, 0.23%)</title><rect x="76.9036%" y="661" width="0.2266%" height="15" fill="rgb(208,226,15)" fg:x="20626905801" fg:w="60766938"/><text x="77.1536%" y="671.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::buffer (23,554,726 samples, 0.09%)</title><rect x="77.0424%" y="645" width="0.0878%" height="15" fill="rgb(217,221,4)" fg:x="20664118013" fg:w="23554726"/><text x="77.2924%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (9,315,449 samples, 0.03%)</title><rect x="77.0955%" y="629" width="0.0347%" height="15" fill="rgb(212,174,34)" fg:x="20678357290" fg:w="9315449"/><text x="77.3455%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9,315,449 samples, 0.03%)</title><rect x="77.0955%" y="613" width="0.0347%" height="15" fill="rgb(253,83,4)" fg:x="20678357290" fg:w="9315449"/><text x="77.3455%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (18,595,394 samples, 0.07%)</title><rect x="77.2694%" y="629" width="0.0693%" height="15" fill="rgb(250,195,49)" fg:x="20725004291" fg:w="18595394"/><text x="77.5194%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (18,595,394 samples, 0.07%)</title><rect x="77.2694%" y="613" width="0.0693%" height="15" fill="rgb(241,192,25)" fg:x="20725004291" fg:w="18595394"/><text x="77.5194%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (18,595,394 samples, 0.07%)</title><rect x="77.2694%" y="597" width="0.0693%" height="15" fill="rgb(208,124,10)" fg:x="20725004291" fg:w="18595394"/><text x="77.5194%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (18,595,394 samples, 0.07%)</title><rect x="77.2694%" y="581" width="0.0693%" height="15" fill="rgb(222,33,0)" fg:x="20725004291" fg:w="18595394"/><text x="77.5194%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (9,310,918 samples, 0.03%)</title><rect x="77.3735%" y="565" width="0.0347%" height="15" fill="rgb(234,209,28)" fg:x="20752922649" fg:w="9310918"/><text x="77.6235%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28,087,848 samples, 0.10%)</title><rect x="77.3387%" y="629" width="0.1047%" height="15" fill="rgb(224,11,23)" fg:x="20743599685" fg:w="28087848"/><text x="77.5887%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28,087,848 samples, 0.10%)</title><rect x="77.3387%" y="613" width="0.1047%" height="15" fill="rgb(232,99,1)" fg:x="20743599685" fg:w="28087848"/><text x="77.5887%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (28,087,848 samples, 0.10%)</title><rect x="77.3387%" y="597" width="0.1047%" height="15" fill="rgb(237,95,45)" fg:x="20743599685" fg:w="28087848"/><text x="77.5887%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (28,087,848 samples, 0.10%)</title><rect x="77.3387%" y="581" width="0.1047%" height="15" fill="rgb(208,109,11)" fg:x="20743599685" fg:w="28087848"/><text x="77.5887%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (9,453,966 samples, 0.04%)</title><rect x="77.4082%" y="565" width="0.0352%" height="15" fill="rgb(216,190,48)" fg:x="20762233567" fg:w="9453966"/><text x="77.6582%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (145,218,798 samples, 0.54%)</title><rect x="77.4434%" y="629" width="0.5414%" height="15" fill="rgb(251,171,36)" fg:x="20771687533" fg:w="145218798"/><text x="77.6934%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (243,200,433 samples, 0.91%)</title><rect x="77.1302%" y="677" width="0.9067%" height="15" fill="rgb(230,62,22)" fg:x="20687672739" fg:w="243200433"/><text x="77.3802%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (243,200,433 samples, 0.91%)</title><rect x="77.1302%" y="661" width="0.9067%" height="15" fill="rgb(225,114,35)" fg:x="20687672739" fg:w="243200433"/><text x="77.3802%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (243,200,433 samples, 0.91%)</title><rect x="77.1302%" y="645" width="0.9067%" height="15" fill="rgb(215,118,42)" fg:x="20687672739" fg:w="243200433"/><text x="77.3802%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (13,966,841 samples, 0.05%)</title><rect x="77.9848%" y="629" width="0.0521%" height="15" fill="rgb(243,119,21)" fg:x="20916906331" fg:w="13966841"/><text x="78.2348%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (23,270,170 samples, 0.09%)</title><rect x="78.0369%" y="677" width="0.0868%" height="15" fill="rgb(252,177,53)" fg:x="20930873172" fg:w="23270170"/><text x="78.2869%" y="687.50"></text></g><g><title>&lt;core::ops::range::RangeToInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (23,270,170 samples, 0.09%)</title><rect x="78.0369%" y="661" width="0.0868%" height="15" fill="rgb(237,209,29)" fg:x="20930873172" fg:w="23270170"/><text x="78.2869%" y="671.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (23,270,170 samples, 0.09%)</title><rect x="78.0369%" y="645" width="0.0868%" height="15" fill="rgb(212,65,23)" fg:x="20930873172" fg:w="23270170"/><text x="78.2869%" y="655.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;usize&gt;::into_slice_range (9,303,501 samples, 0.03%)</title><rect x="78.0890%" y="629" width="0.0347%" height="15" fill="rgb(230,222,46)" fg:x="20944839841" fg:w="9303501"/><text x="78.3390%" y="639.50"></text></g><g><title>core::fmt::Write::write_char (1,133,983,553 samples, 4.23%)</title><rect x="74.5397%" y="757" width="4.2278%" height="15" fill="rgb(215,135,32)" fg:x="19992854708" fg:w="1133983553"/><text x="74.7897%" y="767.50">core:..</text></g><g><title>&lt;std::io::default_write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1,133,983,553 samples, 4.23%)</title><rect x="74.5397%" y="741" width="4.2278%" height="15" fill="rgb(246,101,22)" fg:x="19992854708" fg:w="1133983553"/><text x="74.7897%" y="751.50">&lt;std:..</text></g><g><title>std::io::append_to_string (1,133,983,553 samples, 4.23%)</title><rect x="74.5397%" y="725" width="4.2278%" height="15" fill="rgb(206,107,13)" fg:x="19992854708" fg:w="1133983553"/><text x="74.7897%" y="735.50">std::..</text></g><g><title>std::io::BufRead::read_line::{{closure}} (677,109,088 samples, 2.52%)</title><rect x="76.2431%" y="709" width="2.5245%" height="15" fill="rgb(250,100,44)" fg:x="20449729173" fg:w="677109088"/><text x="76.4931%" y="719.50">st..</text></g><g><title>std::io::read_until (677,109,088 samples, 2.52%)</title><rect x="76.2431%" y="693" width="2.5245%" height="15" fill="rgb(231,147,38)" fg:x="20449729173" fg:w="677109088"/><text x="76.4931%" y="703.50">st..</text></g><g><title>core::slice::memchr::memchr (172,694,919 samples, 0.64%)</title><rect x="78.1237%" y="677" width="0.6439%" height="15" fill="rgb(229,8,40)" fg:x="20954143342" fg:w="172694919"/><text x="78.3737%" y="687.50"></text></g><g><title>core::cmp::Ord::min (41,992,203 samples, 0.16%)</title><rect x="80.4096%" y="725" width="0.1566%" height="15" fill="rgb(221,135,30)" fg:x="21567256830" fg:w="41992203"/><text x="80.6596%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::repeat_u8 (102,622,143 samples, 0.38%)</title><rect x="80.5661%" y="725" width="0.3826%" height="15" fill="rgb(249,193,18)" fg:x="21609249033" fg:w="102622143"/><text x="80.8161%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (60,571,524 samples, 0.23%)</title><rect x="80.9487%" y="725" width="0.2258%" height="15" fill="rgb(209,133,39)" fg:x="21711871176" fg:w="60571524"/><text x="81.1987%" y="735.50"></text></g><g><title>core::ptr::align_offset (60,571,524 samples, 0.23%)</title><rect x="80.9487%" y="709" width="0.2258%" height="15" fill="rgb(232,100,14)" fg:x="21711871176" fg:w="60571524"/><text x="81.1987%" y="719.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (168,077,386 samples, 0.63%)</title><rect x="81.1746%" y="725" width="0.6266%" height="15" fill="rgb(224,185,1)" fg:x="21772442700" fg:w="168077386"/><text x="81.4246%" y="735.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1,469,858,496 samples, 5.48%)</title><rect x="78.7675%" y="757" width="5.4801%" height="15" fill="rgb(223,139,8)" fg:x="21126838261" fg:w="1469858496"/><text x="79.0175%" y="767.50">core::s..</text></g><g><title>core::slice::memchr::memchr_aligned::runtime (1,315,823,192 samples, 4.91%)</title><rect x="79.3418%" y="741" width="4.9058%" height="15" fill="rgb(232,213,38)" fg:x="21280873565" fg:w="1315823192"/><text x="79.5918%" y="751.50">core::..</text></g><g><title>core::slice::memchr::memchr_naive (656,176,671 samples, 2.45%)</title><rect x="81.8012%" y="725" width="2.4464%" height="15" fill="rgb(207,94,22)" fg:x="21940520086" fg:w="656176671"/><text x="82.0512%" y="735.50">co..</text></g><g><title>&lt;F as core::str::pattern::Pattern&gt;::into_searcher (4,637,376 samples, 0.02%)</title><rect x="84.4213%" y="741" width="0.0173%" height="15" fill="rgb(219,183,54)" fg:x="22643267663" fg:w="4637376"/><text x="84.6713%" y="751.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqPattern&lt;C&gt; as core::str::pattern::Pattern&gt;::into_searcher (4,637,376 samples, 0.02%)</title><rect x="84.4213%" y="725" width="0.0173%" height="15" fill="rgb(216,185,54)" fg:x="22643267663" fg:w="4637376"/><text x="84.6713%" y="735.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (4,637,376 samples, 0.02%)</title><rect x="84.4213%" y="709" width="0.0173%" height="15" fill="rgb(254,217,39)" fg:x="22643267663" fg:w="4637376"/><text x="84.6713%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (4,637,376 samples, 0.02%)</title><rect x="84.4213%" y="693" width="0.0173%" height="15" fill="rgb(240,178,23)" fg:x="22643267663" fg:w="4637376"/><text x="84.6713%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (4,637,376 samples, 0.02%)</title><rect x="84.4213%" y="677" width="0.0173%" height="15" fill="rgb(218,11,47)" fg:x="22643267663" fg:w="4637376"/><text x="84.6713%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (4,637,376 samples, 0.02%)</title><rect x="84.4213%" y="661" width="0.0173%" height="15" fill="rgb(218,51,51)" fg:x="22643267663" fg:w="4637376"/><text x="84.6713%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (4,637,376 samples, 0.02%)</title><rect x="84.4213%" y="645" width="0.0173%" height="15" fill="rgb(238,126,27)" fg:x="22643267663" fg:w="4637376"/><text x="84.6713%" y="655.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (51,120,803 samples, 0.19%)</title><rect x="84.4559%" y="693" width="0.1906%" height="15" fill="rgb(249,202,22)" fg:x="22652554413" fg:w="51120803"/><text x="84.7059%" y="703.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim::{{closure}} (51,120,803 samples, 0.19%)</title><rect x="84.4559%" y="677" width="0.1906%" height="15" fill="rgb(254,195,49)" fg:x="22652554413" fg:w="51120803"/><text x="84.7059%" y="687.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (51,120,803 samples, 0.19%)</title><rect x="84.4559%" y="661" width="0.1906%" height="15" fill="rgb(208,123,14)" fg:x="22652554413" fg:w="51120803"/><text x="84.7059%" y="671.50"></text></g><g><title>core::unicode::unicode_data::white_space::lookup (13,953,943 samples, 0.05%)</title><rect x="84.5945%" y="645" width="0.0520%" height="15" fill="rgb(224,200,8)" fg:x="22689721273" fg:w="13953943"/><text x="84.8445%" y="655.50"></text></g><g><title>core::str::validations::utf8_acc_cont_byte (23,360,948 samples, 0.09%)</title><rect x="84.7309%" y="645" width="0.0871%" height="15" fill="rgb(217,61,36)" fg:x="22726328270" fg:w="23360948"/><text x="84.9809%" y="655.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::ReverseSearcher&gt;::next_reject_back (111,091,027 samples, 0.41%)</title><rect x="84.4386%" y="741" width="0.4142%" height="15" fill="rgb(206,35,45)" fg:x="22647905039" fg:w="111091027"/><text x="84.6886%" y="751.50"></text></g><g><title>core::str::pattern::ReverseSearcher::next_reject_back (111,091,027 samples, 0.41%)</title><rect x="84.4386%" y="725" width="0.4142%" height="15" fill="rgb(217,65,33)" fg:x="22647905039" fg:w="111091027"/><text x="84.6886%" y="735.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::ReverseSearcher&gt;::next_back (111,091,027 samples, 0.41%)</title><rect x="84.4386%" y="709" width="0.4142%" height="15" fill="rgb(222,158,48)" fg:x="22647905039" fg:w="111091027"/><text x="84.6886%" y="719.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (55,320,850 samples, 0.21%)</title><rect x="84.6465%" y="693" width="0.2063%" height="15" fill="rgb(254,2,54)" fg:x="22703675216" fg:w="55320850"/><text x="84.8965%" y="703.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (55,320,850 samples, 0.21%)</title><rect x="84.6465%" y="677" width="0.2063%" height="15" fill="rgb(250,143,38)" fg:x="22703675216" fg:w="55320850"/><text x="84.8965%" y="687.50"></text></g><g><title>core::str::validations::next_code_point_reverse (55,320,850 samples, 0.21%)</title><rect x="84.6465%" y="661" width="0.2063%" height="15" fill="rgb(248,25,0)" fg:x="22703675216" fg:w="55320850"/><text x="84.8965%" y="671.50"></text></g><g><title>core::str::validations::utf8_is_cont_byte (9,306,848 samples, 0.03%)</title><rect x="84.8180%" y="645" width="0.0347%" height="15" fill="rgb(206,152,27)" fg:x="22749689218" fg:w="9306848"/><text x="85.0680%" y="655.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (9,667,578 samples, 0.04%)</title><rect x="84.8527%" y="693" width="0.0360%" height="15" fill="rgb(240,77,30)" fg:x="22758996066" fg:w="9667578"/><text x="85.1027%" y="703.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim::{{closure}} (9,667,578 samples, 0.04%)</title><rect x="84.8527%" y="677" width="0.0360%" height="15" fill="rgb(231,5,3)" fg:x="22758996066" fg:w="9667578"/><text x="85.1027%" y="687.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (9,667,578 samples, 0.04%)</title><rect x="84.8527%" y="661" width="0.0360%" height="15" fill="rgb(207,226,32)" fg:x="22758996066" fg:w="9667578"/><text x="85.1027%" y="671.50"></text></g><g><title>core::unicode::unicode_data::white_space::lookup (5,036,142 samples, 0.02%)</title><rect x="84.8700%" y="645" width="0.0188%" height="15" fill="rgb(222,207,47)" fg:x="22763627502" fg:w="5036142"/><text x="85.1200%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,294,346 samples, 0.03%)</title><rect x="85.0276%" y="645" width="0.0347%" height="15" fill="rgb(229,115,45)" fg:x="22805903234" fg:w="9294346"/><text x="85.2776%" y="655.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9,294,346 samples, 0.03%)</title><rect x="85.0276%" y="629" width="0.0347%" height="15" fill="rgb(224,191,6)" fg:x="22805903234" fg:w="9294346"/><text x="85.2776%" y="639.50"></text></g><g><title>core::str::validations::utf8_acc_cont_byte (18,599,538 samples, 0.07%)</title><rect x="85.0623%" y="645" width="0.0693%" height="15" fill="rgb(230,227,24)" fg:x="22815197580" fg:w="18599538"/><text x="85.3123%" y="655.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_reject (84,113,862 samples, 0.31%)</title><rect x="84.8527%" y="741" width="0.3136%" height="15" fill="rgb(228,80,19)" fg:x="22758996066" fg:w="84113862"/><text x="85.1027%" y="751.50"></text></g><g><title>core::str::pattern::Searcher::next_reject (84,113,862 samples, 0.31%)</title><rect x="84.8527%" y="725" width="0.3136%" height="15" fill="rgb(247,229,0)" fg:x="22758996066" fg:w="84113862"/><text x="85.1027%" y="735.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (84,113,862 samples, 0.31%)</title><rect x="84.8527%" y="709" width="0.3136%" height="15" fill="rgb(237,194,15)" fg:x="22758996066" fg:w="84113862"/><text x="85.1027%" y="719.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (74,446,284 samples, 0.28%)</title><rect x="84.8888%" y="693" width="0.2776%" height="15" fill="rgb(219,203,20)" fg:x="22768663644" fg:w="74446284"/><text x="85.1388%" y="703.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (65,129,840 samples, 0.24%)</title><rect x="84.9235%" y="677" width="0.2428%" height="15" fill="rgb(234,128,8)" fg:x="22777980088" fg:w="65129840"/><text x="85.1735%" y="687.50"></text></g><g><title>core::str::validations::next_code_point (65,129,840 samples, 0.24%)</title><rect x="84.9235%" y="661" width="0.2428%" height="15" fill="rgb(248,202,8)" fg:x="22777980088" fg:w="65129840"/><text x="85.1735%" y="671.50"></text></g><g><title>core::str::validations::utf8_first_byte (9,312,810 samples, 0.03%)</title><rect x="85.1316%" y="645" width="0.0347%" height="15" fill="rgb(206,104,37)" fg:x="22833797118" fg:w="9312810"/><text x="85.3816%" y="655.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (251,060,584 samples, 0.94%)</title><rect x="84.2476%" y="757" width="0.9360%" height="15" fill="rgb(223,8,27)" fg:x="22596696757" fg:w="251060584"/><text x="84.4976%" y="767.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (4,647,413 samples, 0.02%)</title><rect x="85.1663%" y="741" width="0.0173%" height="15" fill="rgb(216,217,28)" fg:x="22843109928" fg:w="4647413"/><text x="85.4163%" y="751.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (4,647,413 samples, 0.02%)</title><rect x="85.1663%" y="725" width="0.0173%" height="15" fill="rgb(249,199,1)" fg:x="22843109928" fg:w="4647413"/><text x="85.4163%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4,647,413 samples, 0.02%)</title><rect x="85.1663%" y="709" width="0.0173%" height="15" fill="rgb(240,85,17)" fg:x="22843109928" fg:w="4647413"/><text x="85.4163%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (214,671,848 samples, 0.80%)</title><rect x="93.6500%" y="725" width="0.8004%" height="15" fill="rgb(206,108,45)" fg:x="25118572679" fg:w="214671848"/><text x="93.9000%" y="735.50"></text></g><g><title>core::str::converts::from_utf8 (2,583,618,853 samples, 9.63%)</title><rect x="85.1837%" y="757" width="9.6325%" height="15" fill="rgb(245,210,41)" fg:x="22847757341" fg:w="2583618853"/><text x="85.4337%" y="767.50">core::str::con..</text></g><g><title>core::str::validations::run_utf8_validation (2,317,427,191 samples, 8.64%)</title><rect x="86.1761%" y="741" width="8.6401%" height="15" fill="rgb(206,13,37)" fg:x="23113949003" fg:w="2317427191"/><text x="86.4261%" y="751.50">core::str::v..</text></g><g><title>core::str::validations::utf8_char_width (98,131,667 samples, 0.37%)</title><rect x="94.4503%" y="725" width="0.3659%" height="15" fill="rgb(250,61,18)" fg:x="25333244527" fg:w="98131667"/><text x="94.7003%" y="735.50"></text></g><g><title>read (4,599,749 samples, 0.02%)</title><rect x="94.8163%" y="757" width="0.0171%" height="15" fill="rgb(235,172,48)" fg:x="25431404759" fg:w="4599749"/><text x="95.0663%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (9,296,667 samples, 0.03%)</title><rect x="94.9377%" y="741" width="0.0347%" height="15" fill="rgb(249,201,17)" fg:x="25463953381" fg:w="9296667"/><text x="95.1877%" y="751.50"></text></g><g><title>alloc::string::String::as_str (9,296,667 samples, 0.03%)</title><rect x="94.9377%" y="725" width="0.0347%" height="15" fill="rgb(219,208,6)" fg:x="25463953381" fg:w="9296667"/><text x="95.1877%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (9,296,667 samples, 0.03%)</title><rect x="94.9377%" y="709" width="0.0347%" height="15" fill="rgb(248,31,23)" fg:x="25463953381" fg:w="9296667"/><text x="95.1877%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (4,651,150 samples, 0.02%)</title><rect x="94.9550%" y="693" width="0.0173%" height="15" fill="rgb(245,15,42)" fg:x="25468598898" fg:w="4651150"/><text x="95.2050%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4,651,150 samples, 0.02%)</title><rect x="94.9550%" y="677" width="0.0173%" height="15" fill="rgb(222,217,39)" fg:x="25468598898" fg:w="4651150"/><text x="95.2050%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (4,651,150 samples, 0.02%)</title><rect x="94.9550%" y="661" width="0.0173%" height="15" fill="rgb(210,219,27)" fg:x="25468598898" fg:w="4651150"/><text x="95.2050%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (4,651,150 samples, 0.02%)</title><rect x="94.9550%" y="645" width="0.0173%" height="15" fill="rgb(252,166,36)" fg:x="25468598898" fg:w="4651150"/><text x="95.2050%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,401,621 samples, 0.04%)</title><rect x="94.9911%" y="709" width="0.0351%" height="15" fill="rgb(245,132,34)" fg:x="25478281953" fg:w="9401621"/><text x="95.2411%" y="719.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9,401,621 samples, 0.04%)</title><rect x="94.9911%" y="693" width="0.0351%" height="15" fill="rgb(236,54,3)" fg:x="25478281953" fg:w="9401621"/><text x="95.2411%" y="703.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (19,097,159 samples, 0.07%)</title><rect x="94.9723%" y="741" width="0.0712%" height="15" fill="rgb(241,173,43)" fg:x="25473250048" fg:w="19097159"/><text x="95.2223%" y="751.50"></text></g><g><title>core::str::validations::next_code_point (19,097,159 samples, 0.07%)</title><rect x="94.9723%" y="725" width="0.0712%" height="15" fill="rgb(215,190,9)" fg:x="25473250048" fg:w="19097159"/><text x="95.2223%" y="735.50"></text></g><g><title>core::str::validations::utf8_first_byte (4,663,633 samples, 0.02%)</title><rect x="95.0261%" y="709" width="0.0174%" height="15" fill="rgb(242,101,16)" fg:x="25487683574" fg:w="4663633"/><text x="95.2761%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (52,704,586 samples, 0.20%)</title><rect x="95.1474%" y="645" width="0.1965%" height="15" fill="rgb(223,190,21)" fg:x="25520215073" fg:w="52704586"/><text x="95.3974%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9,328,777 samples, 0.03%)</title><rect x="95.3092%" y="629" width="0.0348%" height="15" fill="rgb(215,228,25)" fg:x="25563590882" fg:w="9328777"/><text x="95.5592%" y="639.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9,328,777 samples, 0.03%)</title><rect x="95.3092%" y="613" width="0.0348%" height="15" fill="rgb(225,36,22)" fg:x="25563590882" fg:w="9328777"/><text x="95.5592%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Split&lt;T,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (89,887,692 samples, 0.34%)</title><rect x="95.0435%" y="661" width="0.3351%" height="15" fill="rgb(251,106,46)" fg:x="25492347207" fg:w="89887692"/><text x="95.2935%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (9,315,240 samples, 0.03%)</title><rect x="95.3439%" y="645" width="0.0347%" height="15" fill="rgb(208,90,1)" fg:x="25572919659" fg:w="9315240"/><text x="95.5939%" y="655.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9,315,240 samples, 0.03%)</title><rect x="95.3439%" y="629" width="0.0347%" height="15" fill="rgb(243,10,4)" fg:x="25572919659" fg:w="9315240"/><text x="95.5939%" y="639.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9,315,240 samples, 0.03%)</title><rect x="95.3439%" y="613" width="0.0347%" height="15" fill="rgb(212,137,27)" fg:x="25572919659" fg:w="9315240"/><text x="95.5939%" y="623.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (9,315,240 samples, 0.03%)</title><rect x="95.3439%" y="597" width="0.0347%" height="15" fill="rgb(231,220,49)" fg:x="25572919659" fg:w="9315240"/><text x="95.5939%" y="607.50"></text></g><g><title>core::slice::index::get_noubcheck (9,315,240 samples, 0.03%)</title><rect x="95.3439%" y="581" width="0.0347%" height="15" fill="rgb(237,96,20)" fg:x="25572919659" fg:w="9315240"/><text x="95.5939%" y="591.50"></text></g><g><title>&lt;core::str::iter::SplitAsciiWhitespace as core::iter::traits::iterator::Iterator&gt;::next (94,529,168 samples, 0.35%)</title><rect x="95.0435%" y="741" width="0.3524%" height="15" fill="rgb(239,229,30)" fg:x="25492347207" fg:w="94529168"/><text x="95.2935%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (94,529,168 samples, 0.35%)</title><rect x="95.0435%" y="725" width="0.3524%" height="15" fill="rgb(219,65,33)" fg:x="25492347207" fg:w="94529168"/><text x="95.2935%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (94,529,168 samples, 0.35%)</title><rect x="95.0435%" y="709" width="0.3524%" height="15" fill="rgb(243,134,7)" fg:x="25492347207" fg:w="94529168"/><text x="95.2935%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (94,529,168 samples, 0.35%)</title><rect x="95.0435%" y="693" width="0.3524%" height="15" fill="rgb(216,177,54)" fg:x="25492347207" fg:w="94529168"/><text x="95.2935%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (94,529,168 samples, 0.35%)</title><rect x="95.0435%" y="677" width="0.3524%" height="15" fill="rgb(211,160,20)" fg:x="25492347207" fg:w="94529168"/><text x="95.2935%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (4,641,476 samples, 0.02%)</title><rect x="95.3787%" y="661" width="0.0173%" height="15" fill="rgb(239,85,39)" fg:x="25582234899" fg:w="4641476"/><text x="95.6287%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4,641,476 samples, 0.02%)</title><rect x="95.3787%" y="645" width="0.0173%" height="15" fill="rgb(232,125,22)" fg:x="25582234899" fg:w="4641476"/><text x="95.6287%" y="655.50"></text></g><g><title>&lt;core::str::BytesIsNotEmpty as core::ops::function::FnMut&lt;(&amp;&amp;[u8],)&gt;&gt;::call_mut (4,641,476 samples, 0.02%)</title><rect x="95.3787%" y="629" width="0.0173%" height="15" fill="rgb(244,57,34)" fg:x="25582234899" fg:w="4641476"/><text x="95.6287%" y="639.50"></text></g><g><title>&lt;core::str::BytesIsNotEmpty as core::ops::function::Fn&lt;(&amp;&amp;[u8],)&gt;&gt;::call (4,641,476 samples, 0.02%)</title><rect x="95.3787%" y="613" width="0.0173%" height="15" fill="rgb(214,203,32)" fg:x="25582234899" fg:w="4641476"/><text x="95.6287%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (4,641,476 samples, 0.02%)</title><rect x="95.3787%" y="597" width="0.0173%" height="15" fill="rgb(207,58,43)" fg:x="25582234899" fg:w="4641476"/><text x="95.6287%" y="607.50"></text></g><g><title>alloc::string::String::clear (14,257,807 samples, 0.05%)</title><rect x="95.3960%" y="741" width="0.0532%" height="15" fill="rgb(215,193,15)" fg:x="25586876375" fg:w="14257807"/><text x="95.6460%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (14,257,807 samples, 0.05%)</title><rect x="95.3960%" y="725" width="0.0532%" height="15" fill="rgb(232,15,44)" fg:x="25586876375" fg:w="14257807"/><text x="95.6460%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4,676,115 samples, 0.02%)</title><rect x="95.9766%" y="725" width="0.0174%" height="15" fill="rgb(212,3,48)" fg:x="25742614970" fg:w="4676115"/><text x="96.2266%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4,676,115 samples, 0.02%)</title><rect x="95.9766%" y="709" width="0.0174%" height="15" fill="rgb(218,128,7)" fg:x="25742614970" fg:w="4676115"/><text x="96.2266%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (4,676,115 samples, 0.02%)</title><rect x="95.9766%" y="693" width="0.0174%" height="15" fill="rgb(226,216,39)" fg:x="25742614970" fg:w="4676115"/><text x="96.2266%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (4,676,115 samples, 0.02%)</title><rect x="95.9766%" y="677" width="0.0174%" height="15" fill="rgb(243,47,51)" fg:x="25742614970" fg:w="4676115"/><text x="96.2266%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (281,320,733 samples, 1.05%)</title><rect x="95.4491%" y="741" width="1.0489%" height="15" fill="rgb(241,183,40)" fg:x="25601134182" fg:w="281320733"/><text x="95.6991%" y="751.50"></text></g><g><title>core::ptr::write (135,163,830 samples, 0.50%)</title><rect x="95.9940%" y="725" width="0.5039%" height="15" fill="rgb(231,217,32)" fg:x="25747291085" fg:w="135163830"/><text x="96.2440%" y="735.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim (4,640,358 samples, 0.02%)</title><rect x="96.4980%" y="741" width="0.0173%" height="15" fill="rgb(229,61,38)" fg:x="25882454915" fg:w="4640358"/><text x="96.7480%" y="751.50"></text></g><g><title>&lt;core::cmp::Ordering as core::cmp::PartialEq&gt;::eq (173,135,783 samples, 0.65%)</title><rect x="97.8704%" y="677" width="0.6455%" height="15" fill="rgb(225,210,5)" fg:x="26250575867" fg:w="173135783"/><text x="98.1204%" y="687.50"></text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::contains (579,017,466 samples, 2.16%)</title><rect x="96.5153%" y="741" width="2.1588%" height="15" fill="rgb(231,79,45)" fg:x="25887095273" fg:w="579017466"/><text x="96.7653%" y="751.50">r..</text></g><g><title>rgu_labs_term3_discrete_math::math::set::Set::index_of (579,017,466 samples, 2.16%)</title><rect x="96.5153%" y="725" width="2.1588%" height="15" fill="rgb(224,100,7)" fg:x="25887095273" fg:w="579017466"/><text x="96.7653%" y="735.50">r..</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search (579,017,466 samples, 2.16%)</title><rect x="96.5153%" y="709" width="2.1588%" height="15" fill="rgb(241,198,18)" fg:x="25887095273" fg:w="579017466"/><text x="96.7653%" y="719.50">c..</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (579,017,466 samples, 2.16%)</title><rect x="96.5153%" y="693" width="2.1588%" height="15" fill="rgb(252,97,53)" fg:x="25887095273" fg:w="579017466"/><text x="96.7653%" y="703.50">c..</text></g><g><title>core::bool::&lt;impl bool&gt;::select_unpredictable (42,401,089 samples, 0.16%)</title><rect x="98.5160%" y="677" width="0.1581%" height="15" fill="rgb(220,88,7)" fg:x="26423711650" fg:w="42401089"/><text x="98.7660%" y="687.50"></text></g><g><title>rgu_labs_term3_discrete_math::task2::run_task_2 (1,142,460,952 samples, 4.26%)</title><rect x="94.8335%" y="757" width="4.2595%" height="15" fill="rgb(213,176,14)" fg:x="25436004508" fg:w="1142460952"/><text x="95.0835%" y="767.50">rgu_l..</text></g><g><title>std::io::BufRead::read_line (112,352,721 samples, 0.42%)</title><rect x="98.6740%" y="741" width="0.4189%" height="15" fill="rgb(246,73,7)" fg:x="26466112739" fg:w="112352721"/><text x="98.9240%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (4,652,973 samples, 0.02%)</title><rect x="99.6168%" y="741" width="0.0173%" height="15" fill="rgb(245,64,36)" fg:x="26718966324" fg:w="4652973"/><text x="99.8668%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (4,652,973 samples, 0.02%)</title><rect x="99.6168%" y="725" width="0.0173%" height="15" fill="rgb(245,80,10)" fg:x="26718966324" fg:w="4652973"/><text x="99.8668%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (4,654,341 samples, 0.02%)</title><rect x="99.6341%" y="741" width="0.0174%" height="15" fill="rgb(232,107,50)" fg:x="26723619297" fg:w="4654341"/><text x="99.8841%" y="751.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4,654,341 samples, 0.02%)</title><rect x="99.6341%" y="725" width="0.0174%" height="15" fill="rgb(253,3,0)" fg:x="26723619297" fg:w="4654341"/><text x="99.8841%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4,654,341 samples, 0.02%)</title><rect x="99.6341%" y="709" width="0.0174%" height="15" fill="rgb(212,99,53)" fg:x="26723619297" fg:w="4654341"/><text x="99.8841%" y="719.50"></text></g><g><title>core::slice::index::get_offset_len_noubcheck (4,654,341 samples, 0.02%)</title><rect x="99.6341%" y="693" width="0.0174%" height="15" fill="rgb(249,111,54)" fg:x="26723619297" fg:w="4654341"/><text x="99.8841%" y="703.50"></text></g><g><title>core::slice::index::get_noubcheck (4,654,341 samples, 0.02%)</title><rect x="99.6341%" y="677" width="0.0174%" height="15" fill="rgb(249,55,30)" fg:x="26723619297" fg:w="4654341"/><text x="99.8841%" y="687.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (9,335,969 samples, 0.03%)</title><rect x="99.7209%" y="709" width="0.0348%" height="15" fill="rgb(237,47,42)" fg:x="26746900217" fg:w="9335969"/><text x="99.9709%" y="719.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume (9,335,969 samples, 0.03%)</title><rect x="99.7209%" y="693" width="0.0348%" height="15" fill="rgb(211,20,18)" fg:x="26746900217" fg:w="9335969"/><text x="99.9709%" y="703.50"></text></g><g><title>core::cmp::min (4,659,809 samples, 0.02%)</title><rect x="99.7383%" y="677" width="0.0174%" height="15" fill="rgb(231,203,46)" fg:x="26751576377" fg:w="4659809"/><text x="99.9883%" y="687.50"></text></g><g><title>core::cmp::Ord::min (4,659,809 samples, 0.02%)</title><rect x="99.7383%" y="661" width="0.0174%" height="15" fill="rgb(237,142,3)" fg:x="26751576377" fg:w="4659809"/><text x="99.9883%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4,645,265 samples, 0.02%)</title><rect x="99.8089%" y="661" width="0.0173%" height="15" fill="rgb(241,107,1)" fg:x="26770496048" fg:w="4645265"/><text x="100.0589%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4,645,265 samples, 0.02%)</title><rect x="99.8089%" y="645" width="0.0173%" height="15" fill="rgb(229,83,13)" fg:x="26770496048" fg:w="4645265"/><text x="100.0589%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (4,645,265 samples, 0.02%)</title><rect x="99.8089%" y="629" width="0.0173%" height="15" fill="rgb(241,91,40)" fg:x="26770496048" fg:w="4645265"/><text x="100.0589%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (4,645,265 samples, 0.02%)</title><rect x="99.8089%" y="613" width="0.0173%" height="15" fill="rgb(225,3,45)" fg:x="26770496048" fg:w="4645265"/><text x="100.0589%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4,661,508 samples, 0.02%)</title><rect x="99.8262%" y="661" width="0.0174%" height="15" fill="rgb(244,223,14)" fg:x="26775141313" fg:w="4661508"/><text x="100.0762%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4,661,508 samples, 0.02%)</title><rect x="99.8262%" y="645" width="0.0174%" height="15" fill="rgb(224,124,37)" fg:x="26775141313" fg:w="4661508"/><text x="100.0762%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (4,661,508 samples, 0.02%)</title><rect x="99.8262%" y="629" width="0.0174%" height="15" fill="rgb(251,171,30)" fg:x="26775141313" fg:w="4661508"/><text x="100.0762%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::needs_to_grow (4,661,508 samples, 0.02%)</title><rect x="99.8262%" y="613" width="0.0174%" height="15" fill="rgb(236,46,54)" fg:x="26775141313" fg:w="4661508"/><text x="100.0762%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (46,919,158 samples, 0.17%)</title><rect x="99.7557%" y="709" width="0.1749%" height="15" fill="rgb(245,213,5)" fg:x="26756236186" fg:w="46919158"/><text x="100.0057%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (46,919,158 samples, 0.17%)</title><rect x="99.7557%" y="693" width="0.1749%" height="15" fill="rgb(230,144,27)" fg:x="26756236186" fg:w="46919158"/><text x="100.0057%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (46,919,158 samples, 0.17%)</title><rect x="99.7557%" y="677" width="0.1749%" height="15" fill="rgb(220,86,6)" fg:x="26756236186" fg:w="46919158"/><text x="100.0057%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23,352,523 samples, 0.09%)</title><rect x="99.8436%" y="661" width="0.0871%" height="15" fill="rgb(240,20,13)" fg:x="26779802821" fg:w="23352523"/><text x="100.0936%" y="671.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4,659,286 samples, 0.02%)</title><rect x="99.9480%" y="661" width="0.0174%" height="15" fill="rgb(217,89,34)" fg:x="26807809810" fg:w="4659286"/><text x="100.1980%" y="671.50"></text></g><g><title>all (26,821,758,776 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(229,13,5)" fg:x="0" fg:w="26821758776"/><text x="0.2500%" y="799.50"></text></g><g><title>rgu-labs-term3- (26,821,756,798 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(244,67,35)" fg:x="1978" fg:w="26821756798"/><text x="0.2500%" y="783.50">rgu-labs-term3-</text></g><g><title>std::io::append_to_string (243,293,316 samples, 0.91%)</title><rect x="99.0929%" y="757" width="0.9071%" height="15" fill="rgb(221,40,2)" fg:x="26578465460" fg:w="243293316"/><text x="99.3429%" y="767.50"></text></g><g><title>std::io::BufRead::read_line::{{closure}} (93,485,138 samples, 0.35%)</title><rect x="99.6515%" y="741" width="0.3485%" height="15" fill="rgb(237,157,21)" fg:x="26728273638" fg:w="93485138"/><text x="99.9015%" y="751.50"></text></g><g><title>std::io::read_until (93,485,138 samples, 0.35%)</title><rect x="99.6515%" y="725" width="0.3485%" height="15" fill="rgb(222,94,11)" fg:x="26728273638" fg:w="93485138"/><text x="99.9015%" y="735.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (18,603,432 samples, 0.07%)</title><rect x="99.9306%" y="709" width="0.0694%" height="15" fill="rgb(249,113,6)" fg:x="26803155344" fg:w="18603432"/><text x="100.1806%" y="719.50"></text></g><g><title>&lt;core::ops::range::RangeToInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (18,603,432 samples, 0.07%)</title><rect x="99.9306%" y="693" width="0.0694%" height="15" fill="rgb(238,137,36)" fg:x="26803155344" fg:w="18603432"/><text x="100.1806%" y="703.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (18,603,432 samples, 0.07%)</title><rect x="99.9306%" y="677" width="0.0694%" height="15" fill="rgb(210,102,26)" fg:x="26803155344" fg:w="18603432"/><text x="100.1806%" y="687.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;usize&gt;::into_slice_range (9,289,680 samples, 0.03%)</title><rect x="99.9654%" y="661" width="0.0346%" height="15" fill="rgb(218,30,30)" fg:x="26812469096" fg:w="9289680"/><text x="100.2154%" y="671.50"></text></g></svg></svg>